{"ast":null,"code":"/**\n * @author Rich Tibbett / https://github.com/richtr\n * @author mrdoob / http://mrdoob.com/\n * @author Tony Parisi / http://www.tonyparisi.com/\n * @author Takahiro / https://github.com/takahirox\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nTHREE.GLTFLoader = function () {\n  function GLTFLoader(manager) {\n    THREE.Loader.call(this, manager);\n    this.dracoLoader = null;\n    this.ddsLoader = null;\n  }\n  GLTFLoader.prototype = Object.assign(Object.create(THREE.Loader.prototype), {\n    constructor: GLTFLoader,\n    load: function (url, onLoad, onProgress, onError) {\n      var scope = this;\n      var resourcePath;\n      if (this.resourcePath !== '') {\n        resourcePath = this.resourcePath;\n      } else if (this.path !== '') {\n        resourcePath = this.path;\n      } else {\n        resourcePath = THREE.LoaderUtils.extractUrlBase(url);\n      }\n\n      // Tells the LoadingManager to track an extra item, which resolves after\n      // the model is fully loaded. This means the count of items loaded will\n      // be incorrect, but ensures manager.onLoad() does not fire early.\n      scope.manager.itemStart(url);\n      var _onError = function (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n        scope.manager.itemError(url);\n        scope.manager.itemEnd(url);\n      };\n      var loader = new THREE.FileLoader(scope.manager);\n      loader.setPath(this.path);\n      loader.setResponseType('arraybuffer');\n      if (scope.crossOrigin === 'use-credentials') {\n        loader.setWithCredentials(true);\n      }\n      loader.load(url, function (data) {\n        try {\n          scope.parse(data, resourcePath, function (gltf) {\n            onLoad(gltf);\n            scope.manager.itemEnd(url);\n          }, _onError);\n        } catch (e) {\n          _onError(e);\n        }\n      }, onProgress, _onError);\n    },\n    setDRACOLoader: function (dracoLoader) {\n      this.dracoLoader = dracoLoader;\n      return this;\n    },\n    setDDSLoader: function (ddsLoader) {\n      this.ddsLoader = ddsLoader;\n      return this;\n    },\n    parse: function (data, path, onLoad, onError) {\n      var content;\n      var extensions = {};\n      if (typeof data === 'string') {\n        content = data;\n      } else {\n        var magic = THREE.LoaderUtils.decodeText(new Uint8Array(data, 0, 4));\n        if (magic === BINARY_EXTENSION_HEADER_MAGIC) {\n          try {\n            extensions[EXTENSIONS.KHR_BINARY_GLTF] = new GLTFBinaryExtension(data);\n          } catch (error) {\n            if (onError) onError(error);\n            return;\n          }\n          content = extensions[EXTENSIONS.KHR_BINARY_GLTF].content;\n        } else {\n          content = THREE.LoaderUtils.decodeText(new Uint8Array(data));\n        }\n      }\n      var json = JSON.parse(content);\n      if (json.asset === undefined || json.asset.version[0] < 2) {\n        if (onError) onError(new Error('THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.'));\n        return;\n      }\n      if (json.extensionsUsed) {\n        for (var i = 0; i < json.extensionsUsed.length; ++i) {\n          var extensionName = json.extensionsUsed[i];\n          var extensionsRequired = json.extensionsRequired || [];\n          switch (extensionName) {\n            case EXTENSIONS.KHR_LIGHTS_PUNCTUAL:\n              extensions[extensionName] = new GLTFLightsExtension(json);\n              break;\n            case EXTENSIONS.KHR_MATERIALS_UNLIT:\n              extensions[extensionName] = new GLTFMaterialsUnlitExtension();\n              break;\n            case EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\n              extensions[extensionName] = new GLTFMaterialsPbrSpecularGlossinessExtension();\n              break;\n            case EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n              extensions[extensionName] = new GLTFDracoMeshCompressionExtension(json, this.dracoLoader);\n              break;\n            case EXTENSIONS.MSFT_TEXTURE_DDS:\n              extensions[extensionName] = new GLTFTextureDDSExtension(this.ddsLoader);\n              break;\n            case EXTENSIONS.KHR_TEXTURE_TRANSFORM:\n              extensions[extensionName] = new GLTFTextureTransformExtension();\n              break;\n            case EXTENSIONS.KHR_MESH_QUANTIZATION:\n              extensions[extensionName] = new GLTFMeshQuantizationExtension();\n              break;\n            default:\n              if (extensionsRequired.indexOf(extensionName) >= 0) {\n                console.warn('THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".');\n              }\n          }\n        }\n      }\n      var parser = new GLTFParser(json, extensions, {\n        path: path || this.resourcePath || '',\n        crossOrigin: this.crossOrigin,\n        manager: this.manager\n      });\n      parser.parse(onLoad, onError);\n    }\n  });\n\n  /* GLTFREGISTRY */\n\n  function GLTFRegistry() {\n    var objects = {};\n    return {\n      get: function (key) {\n        return objects[key];\n      },\n      add: function (key, object) {\n        objects[key] = object;\n      },\n      remove: function (key) {\n        delete objects[key];\n      },\n      removeAll: function () {\n        objects = {};\n      }\n    };\n  }\n\n  /*********************************/\n  /********** EXTENSIONS ***********/\n  /*********************************/\n\n  var EXTENSIONS = {\n    KHR_BINARY_GLTF: 'KHR_binary_glTF',\n    KHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n    KHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n    KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\n    KHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n    KHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\n    KHR_MESH_QUANTIZATION: 'KHR_mesh_quantization',\n    MSFT_TEXTURE_DDS: 'MSFT_texture_dds'\n  };\n\n  /**\n   * DDS Texture Extension\n   *\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\n   *\n   */\n  function GLTFTextureDDSExtension(ddsLoader) {\n    if (!ddsLoader) {\n      throw new Error('THREE.GLTFLoader: Attempting to load .dds texture without importing THREE.DDSLoader');\n    }\n    this.name = EXTENSIONS.MSFT_TEXTURE_DDS;\n    this.ddsLoader = ddsLoader;\n  }\n\n  /**\n   * Punctual Lights Extension\n   *\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n   */\n  function GLTFLightsExtension(json) {\n    this.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\n    var extension = json.extensions && json.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL] || {};\n    this.lightDefs = extension.lights || [];\n  }\n  GLTFLightsExtension.prototype.loadLight = function (lightIndex) {\n    var lightDef = this.lightDefs[lightIndex];\n    var lightNode;\n    var color = new THREE.Color(0xffffff);\n    if (lightDef.color !== undefined) color.fromArray(lightDef.color);\n    var range = lightDef.range !== undefined ? lightDef.range : 0;\n    switch (lightDef.type) {\n      case 'directional':\n        lightNode = new THREE.DirectionalLight(color);\n        lightNode.target.position.set(0, 0, -1);\n        lightNode.add(lightNode.target);\n        break;\n      case 'point':\n        lightNode = new THREE.PointLight(color);\n        lightNode.distance = range;\n        break;\n      case 'spot':\n        lightNode = new THREE.SpotLight(color);\n        lightNode.distance = range;\n        // Handle spotlight properties.\n        lightDef.spot = lightDef.spot || {};\n        lightDef.spot.innerConeAngle = lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\n        lightDef.spot.outerConeAngle = lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\n        lightNode.angle = lightDef.spot.outerConeAngle;\n        lightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\n        lightNode.target.position.set(0, 0, -1);\n        lightNode.add(lightNode.target);\n        break;\n      default:\n        throw new Error('THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".');\n    }\n\n    // Some lights (e.g. spot) default to a position other than the origin. Reset the position\n    // here, because node-level parsing will only override position if explicitly specified.\n    lightNode.position.set(0, 0, 0);\n    lightNode.decay = 2;\n    if (lightDef.intensity !== undefined) lightNode.intensity = lightDef.intensity;\n    lightNode.name = lightDef.name || 'light_' + lightIndex;\n    return Promise.resolve(lightNode);\n  };\n\n  /**\n   * Unlit Materials Extension\n   *\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n   */\n  function GLTFMaterialsUnlitExtension() {\n    this.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n  }\n  GLTFMaterialsUnlitExtension.prototype.getMaterialType = function () {\n    return THREE.MeshBasicMaterial;\n  };\n  GLTFMaterialsUnlitExtension.prototype.extendParams = function (materialParams, materialDef, parser) {\n    var pending = [];\n    materialParams.color = new THREE.Color(1.0, 1.0, 1.0);\n    materialParams.opacity = 1.0;\n    var metallicRoughness = materialDef.pbrMetallicRoughness;\n    if (metallicRoughness) {\n      if (Array.isArray(metallicRoughness.baseColorFactor)) {\n        var array = metallicRoughness.baseColorFactor;\n        materialParams.color.fromArray(array);\n        materialParams.opacity = array[3];\n      }\n      if (metallicRoughness.baseColorTexture !== undefined) {\n        pending.push(parser.assignTexture(materialParams, 'map', metallicRoughness.baseColorTexture));\n      }\n    }\n    return Promise.all(pending);\n  };\n\n  /* BINARY EXTENSION */\n  var BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\n  var BINARY_EXTENSION_HEADER_LENGTH = 12;\n  var BINARY_EXTENSION_CHUNK_TYPES = {\n    JSON: 0x4E4F534A,\n    BIN: 0x004E4942\n  };\n  function GLTFBinaryExtension(data) {\n    this.name = EXTENSIONS.KHR_BINARY_GLTF;\n    this.content = null;\n    this.body = null;\n    var headerView = new DataView(data, 0, BINARY_EXTENSION_HEADER_LENGTH);\n    this.header = {\n      magic: THREE.LoaderUtils.decodeText(new Uint8Array(data.slice(0, 4))),\n      version: headerView.getUint32(4, true),\n      length: headerView.getUint32(8, true)\n    };\n    if (this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC) {\n      throw new Error('THREE.GLTFLoader: Unsupported glTF-Binary header.');\n    } else if (this.header.version < 2.0) {\n      throw new Error('THREE.GLTFLoader: Legacy binary file detected.');\n    }\n    var chunkView = new DataView(data, BINARY_EXTENSION_HEADER_LENGTH);\n    var chunkIndex = 0;\n    while (chunkIndex < chunkView.byteLength) {\n      var chunkLength = chunkView.getUint32(chunkIndex, true);\n      chunkIndex += 4;\n      var chunkType = chunkView.getUint32(chunkIndex, true);\n      chunkIndex += 4;\n      if (chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON) {\n        var contentArray = new Uint8Array(data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength);\n        this.content = THREE.LoaderUtils.decodeText(contentArray);\n      } else if (chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN) {\n        var byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n        this.body = data.slice(byteOffset, byteOffset + chunkLength);\n      }\n\n      // Clients must ignore chunks with unknown types.\n\n      chunkIndex += chunkLength;\n    }\n    if (this.content === null) {\n      throw new Error('THREE.GLTFLoader: JSON content not found.');\n    }\n  }\n\n  /**\n   * DRACO Mesh Compression Extension\n   *\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression\n   */\n  function GLTFDracoMeshCompressionExtension(json, dracoLoader) {\n    if (!dracoLoader) {\n      throw new Error('THREE.GLTFLoader: No DRACOLoader instance provided.');\n    }\n    this.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n    this.json = json;\n    this.dracoLoader = dracoLoader;\n    this.dracoLoader.preload();\n  }\n  GLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function (primitive, parser) {\n    var json = this.json;\n    var dracoLoader = this.dracoLoader;\n    var bufferViewIndex = primitive.extensions[this.name].bufferView;\n    var gltfAttributeMap = primitive.extensions[this.name].attributes;\n    var threeAttributeMap = {};\n    var attributeNormalizedMap = {};\n    var attributeTypeMap = {};\n    for (var attributeName in gltfAttributeMap) {\n      var threeAttributeName = ATTRIBUTES[attributeName] || attributeName.toLowerCase();\n      threeAttributeMap[threeAttributeName] = gltfAttributeMap[attributeName];\n    }\n    for (attributeName in primitive.attributes) {\n      var threeAttributeName = ATTRIBUTES[attributeName] || attributeName.toLowerCase();\n      if (gltfAttributeMap[attributeName] !== undefined) {\n        var accessorDef = json.accessors[primitive.attributes[attributeName]];\n        var componentType = WEBGL_COMPONENT_TYPES[accessorDef.componentType];\n        attributeTypeMap[threeAttributeName] = componentType;\n        attributeNormalizedMap[threeAttributeName] = accessorDef.normalized === true;\n      }\n    }\n    return parser.getDependency('bufferView', bufferViewIndex).then(function (bufferView) {\n      return new Promise(function (resolve) {\n        dracoLoader.decodeDracoFile(bufferView, function (geometry) {\n          for (var attributeName in geometry.attributes) {\n            var attribute = geometry.attributes[attributeName];\n            var normalized = attributeNormalizedMap[attributeName];\n            if (normalized !== undefined) attribute.normalized = normalized;\n          }\n          resolve(geometry);\n        }, threeAttributeMap, attributeTypeMap);\n      });\n    });\n  };\n\n  /**\n   * Texture Transform Extension\n   *\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_transform\n   */\n  function GLTFTextureTransformExtension() {\n    this.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\n  }\n  GLTFTextureTransformExtension.prototype.extendTexture = function (texture, transform) {\n    texture = texture.clone();\n    if (transform.offset !== undefined) {\n      texture.offset.fromArray(transform.offset);\n    }\n    if (transform.rotation !== undefined) {\n      texture.rotation = transform.rotation;\n    }\n    if (transform.scale !== undefined) {\n      texture.repeat.fromArray(transform.scale);\n    }\n    if (transform.texCoord !== undefined) {\n      console.warn('THREE.GLTFLoader: Custom UV sets in \"' + this.name + '\" extension not yet supported.');\n    }\n    texture.needsUpdate = true;\n    return texture;\n  };\n\n  /**\n   * Specular-Glossiness Extension\n   *\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\n   */\n\n  /**\n   * A sub class of THREE.StandardMaterial with some of the functionality\n   * changed via the `onBeforeCompile` callback\n   * @pailhead\n   */\n\n  function GLTFMeshStandardSGMaterial(params) {\n    THREE.MeshStandardMaterial.call(this);\n    this.isGLTFSpecularGlossinessMaterial = true;\n\n    //various chunks that need replacing\n    var specularMapParsFragmentChunk = ['#ifdef USE_SPECULARMAP', '\tuniform sampler2D specularMap;', '#endif'].join('\\n');\n    var glossinessMapParsFragmentChunk = ['#ifdef USE_GLOSSINESSMAP', '\tuniform sampler2D glossinessMap;', '#endif'].join('\\n');\n    var specularMapFragmentChunk = ['vec3 specularFactor = specular;', '#ifdef USE_SPECULARMAP', '\tvec4 texelSpecular = texture2D( specularMap, vUv );', '\ttexelSpecular = sRGBToLinear( texelSpecular );', '\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture', '\tspecularFactor *= texelSpecular.rgb;', '#endif'].join('\\n');\n    var glossinessMapFragmentChunk = ['float glossinessFactor = glossiness;', '#ifdef USE_GLOSSINESSMAP', '\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );', '\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture', '\tglossinessFactor *= texelGlossiness.a;', '#endif'].join('\\n');\n    var lightPhysicalFragmentChunk = ['PhysicalMaterial material;', 'material.diffuseColor = diffuseColor.rgb;', 'vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );', 'float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );', 'material.specularRoughness = max( 1.0 - glossinessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.', 'material.specularRoughness += geometryRoughness;', 'material.specularRoughness = min( material.specularRoughness, 1.0 );', 'material.specularColor = specularFactor.rgb;'].join('\\n');\n    var uniforms = {\n      specular: {\n        value: new THREE.Color().setHex(0xffffff)\n      },\n      glossiness: {\n        value: 1\n      },\n      specularMap: {\n        value: null\n      },\n      glossinessMap: {\n        value: null\n      }\n    };\n    this._extraUniforms = uniforms;\n\n    // please see #14031 or #13198 for an alternate approach\n    this.onBeforeCompile = function (shader) {\n      for (var uniformName in uniforms) {\n        shader.uniforms[uniformName] = uniforms[uniformName];\n      }\n      shader.fragmentShader = shader.fragmentShader.replace('uniform float roughness;', 'uniform vec3 specular;');\n      shader.fragmentShader = shader.fragmentShader.replace('uniform float metalness;', 'uniform float glossiness;');\n      shader.fragmentShader = shader.fragmentShader.replace('#include <roughnessmap_pars_fragment>', specularMapParsFragmentChunk);\n      shader.fragmentShader = shader.fragmentShader.replace('#include <metalnessmap_pars_fragment>', glossinessMapParsFragmentChunk);\n      shader.fragmentShader = shader.fragmentShader.replace('#include <roughnessmap_fragment>', specularMapFragmentChunk);\n      shader.fragmentShader = shader.fragmentShader.replace('#include <metalnessmap_fragment>', glossinessMapFragmentChunk);\n      shader.fragmentShader = shader.fragmentShader.replace('#include <lights_physical_fragment>', lightPhysicalFragmentChunk);\n    };\n\n    /*eslint-disable*/\n    Object.defineProperties(this, {\n      specular: {\n        get: function () {\n          return uniforms.specular.value;\n        },\n        set: function (v) {\n          uniforms.specular.value = v;\n        }\n      },\n      specularMap: {\n        get: function () {\n          return uniforms.specularMap.value;\n        },\n        set: function (v) {\n          uniforms.specularMap.value = v;\n        }\n      },\n      glossiness: {\n        get: function () {\n          return uniforms.glossiness.value;\n        },\n        set: function (v) {\n          uniforms.glossiness.value = v;\n        }\n      },\n      glossinessMap: {\n        get: function () {\n          return uniforms.glossinessMap.value;\n        },\n        set: function (v) {\n          uniforms.glossinessMap.value = v;\n          //how about something like this - @pailhead\n          if (v) {\n            this.defines.USE_GLOSSINESSMAP = '';\n            // set USE_ROUGHNESSMAP to enable vUv\n            this.defines.USE_ROUGHNESSMAP = '';\n          } else {\n            delete this.defines.USE_ROUGHNESSMAP;\n            delete this.defines.USE_GLOSSINESSMAP;\n          }\n        }\n      }\n    });\n\n    /*eslint-enable*/\n    delete this.metalness;\n    delete this.roughness;\n    delete this.metalnessMap;\n    delete this.roughnessMap;\n    this.setValues(params);\n  }\n  GLTFMeshStandardSGMaterial.prototype = Object.create(THREE.MeshStandardMaterial.prototype);\n  GLTFMeshStandardSGMaterial.prototype.constructor = GLTFMeshStandardSGMaterial;\n  GLTFMeshStandardSGMaterial.prototype.copy = function (source) {\n    THREE.MeshStandardMaterial.prototype.copy.call(this, source);\n    this.specularMap = source.specularMap;\n    this.specular.copy(source.specular);\n    this.glossinessMap = source.glossinessMap;\n    this.glossiness = source.glossiness;\n    delete this.metalness;\n    delete this.roughness;\n    delete this.metalnessMap;\n    delete this.roughnessMap;\n    return this;\n  };\n  function GLTFMaterialsPbrSpecularGlossinessExtension() {\n    return {\n      name: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\n      specularGlossinessParams: ['color', 'map', 'lightMap', 'lightMapIntensity', 'aoMap', 'aoMapIntensity', 'emissive', 'emissiveIntensity', 'emissiveMap', 'bumpMap', 'bumpScale', 'normalMap', 'normalMapType', 'displacementMap', 'displacementScale', 'displacementBias', 'specularMap', 'specular', 'glossinessMap', 'glossiness', 'alphaMap', 'envMap', 'envMapIntensity', 'refractionRatio'],\n      getMaterialType: function () {\n        return GLTFMeshStandardSGMaterial;\n      },\n      extendParams: function (materialParams, materialDef, parser) {\n        var pbrSpecularGlossiness = materialDef.extensions[this.name];\n        materialParams.color = new THREE.Color(1.0, 1.0, 1.0);\n        materialParams.opacity = 1.0;\n        var pending = [];\n        if (Array.isArray(pbrSpecularGlossiness.diffuseFactor)) {\n          var array = pbrSpecularGlossiness.diffuseFactor;\n          materialParams.color.fromArray(array);\n          materialParams.opacity = array[3];\n        }\n        if (pbrSpecularGlossiness.diffuseTexture !== undefined) {\n          pending.push(parser.assignTexture(materialParams, 'map', pbrSpecularGlossiness.diffuseTexture));\n        }\n        materialParams.emissive = new THREE.Color(0.0, 0.0, 0.0);\n        materialParams.glossiness = pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\n        materialParams.specular = new THREE.Color(1.0, 1.0, 1.0);\n        if (Array.isArray(pbrSpecularGlossiness.specularFactor)) {\n          materialParams.specular.fromArray(pbrSpecularGlossiness.specularFactor);\n        }\n        if (pbrSpecularGlossiness.specularGlossinessTexture !== undefined) {\n          var specGlossMapDef = pbrSpecularGlossiness.specularGlossinessTexture;\n          pending.push(parser.assignTexture(materialParams, 'glossinessMap', specGlossMapDef));\n          pending.push(parser.assignTexture(materialParams, 'specularMap', specGlossMapDef));\n        }\n        return Promise.all(pending);\n      },\n      createMaterial: function (materialParams) {\n        var material = new GLTFMeshStandardSGMaterial(materialParams);\n        material.fog = true;\n        material.color = materialParams.color;\n        material.map = materialParams.map === undefined ? null : materialParams.map;\n        material.lightMap = null;\n        material.lightMapIntensity = 1.0;\n        material.aoMap = materialParams.aoMap === undefined ? null : materialParams.aoMap;\n        material.aoMapIntensity = 1.0;\n        material.emissive = materialParams.emissive;\n        material.emissiveIntensity = 1.0;\n        material.emissiveMap = materialParams.emissiveMap === undefined ? null : materialParams.emissiveMap;\n        material.bumpMap = materialParams.bumpMap === undefined ? null : materialParams.bumpMap;\n        material.bumpScale = 1;\n        material.normalMap = materialParams.normalMap === undefined ? null : materialParams.normalMap;\n        material.normalMapType = THREE.TangentSpaceNormalMap;\n        if (materialParams.normalScale) material.normalScale = materialParams.normalScale;\n        material.displacementMap = null;\n        material.displacementScale = 1;\n        material.displacementBias = 0;\n        material.specularMap = materialParams.specularMap === undefined ? null : materialParams.specularMap;\n        material.specular = materialParams.specular;\n        material.glossinessMap = materialParams.glossinessMap === undefined ? null : materialParams.glossinessMap;\n        material.glossiness = materialParams.glossiness;\n        material.alphaMap = null;\n        material.envMap = materialParams.envMap === undefined ? null : materialParams.envMap;\n        material.envMapIntensity = 1.0;\n        material.refractionRatio = 0.98;\n        return material;\n      }\n    };\n  }\n\n  /**\n   * Mesh Quantization Extension\n   *\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_mesh_quantization\n   */\n  function GLTFMeshQuantizationExtension() {\n    this.name = EXTENSIONS.KHR_MESH_QUANTIZATION;\n  }\n\n  /*********************************/\n  /********** INTERPOLATION ********/\n  /*********************************/\n\n  // Spline Interpolation\n  // Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\n  function GLTFCubicSplineInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    THREE.Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n  }\n  GLTFCubicSplineInterpolant.prototype = Object.create(THREE.Interpolant.prototype);\n  GLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\n  GLTFCubicSplineInterpolant.prototype.copySampleValue_ = function (index) {\n    // Copies a sample value to the result buffer. See description of glTF\n    // CUBICSPLINE values layout in interpolate_() function below.\n\n    var result = this.resultBuffer,\n      values = this.sampleValues,\n      valueSize = this.valueSize,\n      offset = index * valueSize * 3 + valueSize;\n    for (var i = 0; i !== valueSize; i++) {\n      result[i] = values[offset + i];\n    }\n    return result;\n  };\n  GLTFCubicSplineInterpolant.prototype.beforeStart_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n  GLTFCubicSplineInterpolant.prototype.afterEnd_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n  GLTFCubicSplineInterpolant.prototype.interpolate_ = function (i1, t0, t, t1) {\n    var result = this.resultBuffer;\n    var values = this.sampleValues;\n    var stride = this.valueSize;\n    var stride2 = stride * 2;\n    var stride3 = stride * 3;\n    var td = t1 - t0;\n    var p = (t - t0) / td;\n    var pp = p * p;\n    var ppp = pp * p;\n    var offset1 = i1 * stride3;\n    var offset0 = offset1 - stride3;\n    var s2 = -2 * ppp + 3 * pp;\n    var s3 = ppp - pp;\n    var s0 = 1 - s2;\n    var s1 = s3 - pp + p;\n\n    // Layout of keyframe output values for CUBICSPLINE animations:\n    //   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n    for (var i = 0; i !== stride; i++) {\n      var p0 = values[offset0 + i + stride]; // splineVertex_k\n      var m0 = values[offset0 + i + stride2] * td; // outTangent_k * (t_k+1 - t_k)\n      var p1 = values[offset1 + i + stride]; // splineVertex_k+1\n      var m1 = values[offset1 + i] * td; // inTangent_k+1 * (t_k+1 - t_k)\n\n      result[i] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n    }\n    return result;\n  };\n\n  /*********************************/\n  /********** INTERNALS ************/\n  /*********************************/\n\n  /* CONSTANTS */\n\n  var WEBGL_CONSTANTS = {\n    FLOAT: 5126,\n    //FLOAT_MAT2: 35674,\n    FLOAT_MAT3: 35675,\n    FLOAT_MAT4: 35676,\n    FLOAT_VEC2: 35664,\n    FLOAT_VEC3: 35665,\n    FLOAT_VEC4: 35666,\n    LINEAR: 9729,\n    REPEAT: 10497,\n    SAMPLER_2D: 35678,\n    POINTS: 0,\n    LINES: 1,\n    LINE_LOOP: 2,\n    LINE_STRIP: 3,\n    TRIANGLES: 4,\n    TRIANGLE_STRIP: 5,\n    TRIANGLE_FAN: 6,\n    UNSIGNED_BYTE: 5121,\n    UNSIGNED_SHORT: 5123\n  };\n  var WEBGL_COMPONENT_TYPES = {\n    5120: Int8Array,\n    5121: Uint8Array,\n    5122: Int16Array,\n    5123: Uint16Array,\n    5125: Uint32Array,\n    5126: Float32Array\n  };\n  var WEBGL_FILTERS = {\n    9728: THREE.NearestFilter,\n    9729: THREE.LinearFilter,\n    9984: THREE.NearestMipmapNearestFilter,\n    9985: THREE.LinearMipmapNearestFilter,\n    9986: THREE.NearestMipmapLinearFilter,\n    9987: THREE.LinearMipmapLinearFilter\n  };\n  var WEBGL_WRAPPINGS = {\n    33071: THREE.ClampToEdgeWrapping,\n    33648: THREE.MirroredRepeatWrapping,\n    10497: THREE.RepeatWrapping\n  };\n  var WEBGL_TYPE_SIZES = {\n    'SCALAR': 1,\n    'VEC2': 2,\n    'VEC3': 3,\n    'VEC4': 4,\n    'MAT2': 4,\n    'MAT3': 9,\n    'MAT4': 16\n  };\n  var ATTRIBUTES = {\n    POSITION: 'position',\n    NORMAL: 'normal',\n    TANGENT: 'tangent',\n    TEXCOORD_0: 'uv',\n    TEXCOORD_1: 'uv2',\n    COLOR_0: 'color',\n    WEIGHTS_0: 'skinWeight',\n    JOINTS_0: 'skinIndex'\n  };\n  var PATH_PROPERTIES = {\n    scale: 'scale',\n    translation: 'position',\n    rotation: 'quaternion',\n    weights: 'morphTargetInfluences'\n  };\n  var INTERPOLATION = {\n    CUBICSPLINE: undefined,\n    // We use a custom interpolant (GLTFCubicSplineInterpolation) for CUBICSPLINE tracks. Each\n    // keyframe track will be initialized with a default interpolation type, then modified.\n    LINEAR: THREE.InterpolateLinear,\n    STEP: THREE.InterpolateDiscrete\n  };\n  var ALPHA_MODES = {\n    OPAQUE: 'OPAQUE',\n    MASK: 'MASK',\n    BLEND: 'BLEND'\n  };\n  var MIME_TYPE_FORMATS = {\n    'image/png': THREE.RGBAFormat,\n    'image/jpeg': THREE.RGBFormat\n  };\n\n  /* UTILITY FUNCTIONS */\n\n  function resolveURL(url, path) {\n    // Invalid URL\n    if (typeof url !== 'string' || url === '') return '';\n\n    // Host Relative URL\n    if (/^https?:\\/\\//i.test(path) && /^\\//.test(url)) {\n      path = path.replace(/(^https?:\\/\\/[^\\/]+).*/i, '$1');\n    }\n\n    // Absolute URL http://,https://,//\n    if (/^(https?:)?\\/\\//i.test(url)) return url;\n\n    // Data URI\n    if (/^data:.*,.*$/i.test(url)) return url;\n\n    // Blob URL\n    if (/^blob:.*$/i.test(url)) return url;\n\n    // Relative URL\n    return path + url;\n  }\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n   */\n  function createDefaultMaterial(cache) {\n    if (cache['DefaultMaterial'] === undefined) {\n      cache['DefaultMaterial'] = new THREE.MeshStandardMaterial({\n        color: 0xFFFFFF,\n        emissive: 0x000000,\n        metalness: 1,\n        roughness: 1,\n        transparent: false,\n        depthTest: true,\n        side: THREE.FrontSide\n      });\n    }\n    return cache['DefaultMaterial'];\n  }\n  function addUnknownExtensionsToUserData(knownExtensions, object, objectDef) {\n    // Add unknown glTF extensions to an object's userData.\n\n    for (var name in objectDef.extensions) {\n      if (knownExtensions[name] === undefined) {\n        object.userData.gltfExtensions = object.userData.gltfExtensions || {};\n        object.userData.gltfExtensions[name] = objectDef.extensions[name];\n      }\n    }\n  }\n\n  /**\n   * @param {THREE.Object3D|THREE.Material|THREE.BufferGeometry} object\n   * @param {GLTF.definition} gltfDef\n   */\n  function assignExtrasToUserData(object, gltfDef) {\n    if (gltfDef.extras !== undefined) {\n      if (typeof gltfDef.extras === 'object') {\n        Object.assign(object.userData, gltfDef.extras);\n      } else {\n        console.warn('THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras);\n      }\n    }\n  }\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n   *\n   * @param {THREE.BufferGeometry} geometry\n   * @param {Array<GLTF.Target>} targets\n   * @param {GLTFParser} parser\n   * @return {Promise<THREE.BufferGeometry>}\n   */\n  function addMorphTargets(geometry, targets, parser) {\n    var hasMorphPosition = false;\n    var hasMorphNormal = false;\n    for (var i = 0, il = targets.length; i < il; i++) {\n      var target = targets[i];\n      if (target.POSITION !== undefined) hasMorphPosition = true;\n      if (target.NORMAL !== undefined) hasMorphNormal = true;\n      if (hasMorphPosition && hasMorphNormal) break;\n    }\n    if (!hasMorphPosition && !hasMorphNormal) return Promise.resolve(geometry);\n    var pendingPositionAccessors = [];\n    var pendingNormalAccessors = [];\n    for (var i = 0, il = targets.length; i < il; i++) {\n      var target = targets[i];\n      if (hasMorphPosition) {\n        var pendingAccessor = target.POSITION !== undefined ? parser.getDependency('accessor', target.POSITION) : geometry.attributes.position;\n        pendingPositionAccessors.push(pendingAccessor);\n      }\n      if (hasMorphNormal) {\n        var pendingAccessor = target.NORMAL !== undefined ? parser.getDependency('accessor', target.NORMAL) : geometry.attributes.normal;\n        pendingNormalAccessors.push(pendingAccessor);\n      }\n    }\n    return Promise.all([Promise.all(pendingPositionAccessors), Promise.all(pendingNormalAccessors)]).then(function (accessors) {\n      var morphPositions = accessors[0];\n      var morphNormals = accessors[1];\n      if (hasMorphPosition) geometry.morphAttributes.position = morphPositions;\n      if (hasMorphNormal) geometry.morphAttributes.normal = morphNormals;\n      geometry.morphTargetsRelative = true;\n      return geometry;\n    });\n  }\n\n  /**\n   * @param {THREE.Mesh} mesh\n   * @param {GLTF.Mesh} meshDef\n   */\n  function updateMorphTargets(mesh, meshDef) {\n    mesh.updateMorphTargets();\n    if (meshDef.weights !== undefined) {\n      for (var i = 0, il = meshDef.weights.length; i < il; i++) {\n        mesh.morphTargetInfluences[i] = meshDef.weights[i];\n      }\n    }\n\n    // .extras has user-defined data, so check that .extras.targetNames is an array.\n    if (meshDef.extras && Array.isArray(meshDef.extras.targetNames)) {\n      var targetNames = meshDef.extras.targetNames;\n      if (mesh.morphTargetInfluences.length === targetNames.length) {\n        mesh.morphTargetDictionary = {};\n        for (var i = 0, il = targetNames.length; i < il; i++) {\n          mesh.morphTargetDictionary[targetNames[i]] = i;\n        }\n      } else {\n        console.warn('THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.');\n      }\n    }\n  }\n  function createPrimitiveKey(primitiveDef) {\n    var dracoExtension = primitiveDef.extensions && primitiveDef.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION];\n    var geometryKey;\n    if (dracoExtension) {\n      geometryKey = 'draco:' + dracoExtension.bufferView + ':' + dracoExtension.indices + ':' + createAttributesKey(dracoExtension.attributes);\n    } else {\n      geometryKey = primitiveDef.indices + ':' + createAttributesKey(primitiveDef.attributes) + ':' + primitiveDef.mode;\n    }\n    return geometryKey;\n  }\n  function createAttributesKey(attributes) {\n    var attributesKey = '';\n    var keys = Object.keys(attributes).sort();\n    for (var i = 0, il = keys.length; i < il; i++) {\n      attributesKey += keys[i] + ':' + attributes[keys[i]] + ';';\n    }\n    return attributesKey;\n  }\n\n  /* GLTF PARSER */\n\n  function GLTFParser(json, extensions, options) {\n    this.json = json || {};\n    this.extensions = extensions || {};\n    this.options = options || {};\n\n    // loader object cache\n    this.cache = new GLTFRegistry();\n\n    // BufferGeometry caching\n    this.primitiveCache = {};\n    this.textureLoader = new THREE.TextureLoader(this.options.manager);\n    this.textureLoader.setCrossOrigin(this.options.crossOrigin);\n    this.fileLoader = new THREE.FileLoader(this.options.manager);\n    this.fileLoader.setResponseType('arraybuffer');\n    if (this.options.crossOrigin === 'use-credentials') {\n      this.fileLoader.setWithCredentials(true);\n    }\n  }\n  GLTFParser.prototype.parse = function (onLoad, onError) {\n    var parser = this;\n    var json = this.json;\n    var extensions = this.extensions;\n\n    // Clear the loader cache\n    this.cache.removeAll();\n\n    // Mark the special nodes/meshes in json for efficient parse\n    this.markDefs();\n    Promise.all([this.getDependencies('scene'), this.getDependencies('animation'), this.getDependencies('camera')]).then(function (dependencies) {\n      var result = {\n        scene: dependencies[0][json.scene || 0],\n        scenes: dependencies[0],\n        animations: dependencies[1],\n        cameras: dependencies[2],\n        asset: json.asset,\n        parser: parser,\n        userData: {}\n      };\n      addUnknownExtensionsToUserData(extensions, result, json);\n      assignExtrasToUserData(result, json);\n      onLoad(result);\n    }).catch(onError);\n  };\n\n  /**\n   * Marks the special nodes/meshes in json for efficient parse.\n   */\n  GLTFParser.prototype.markDefs = function () {\n    var nodeDefs = this.json.nodes || [];\n    var skinDefs = this.json.skins || [];\n    var meshDefs = this.json.meshes || [];\n    var meshReferences = {};\n    var meshUses = {};\n\n    // Nothing in the node definition indicates whether it is a Bone or an\n    // Object3D. Use the skins' joint references to mark bones.\n    for (var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex++) {\n      var joints = skinDefs[skinIndex].joints;\n      for (var i = 0, il = joints.length; i < il; i++) {\n        nodeDefs[joints[i]].isBone = true;\n      }\n    }\n\n    // Meshes can (and should) be reused by multiple nodes in a glTF asset. To\n    // avoid having more than one THREE.Mesh with the same name, count\n    // references and rename instances below.\n    //\n    // Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n    for (var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex++) {\n      var nodeDef = nodeDefs[nodeIndex];\n      if (nodeDef.mesh !== undefined) {\n        if (meshReferences[nodeDef.mesh] === undefined) {\n          meshReferences[nodeDef.mesh] = meshUses[nodeDef.mesh] = 0;\n        }\n        meshReferences[nodeDef.mesh]++;\n\n        // Nothing in the mesh definition indicates whether it is\n        // a SkinnedMesh or Mesh. Use the node's mesh reference\n        // to mark SkinnedMesh if node has skin.\n        if (nodeDef.skin !== undefined) {\n          meshDefs[nodeDef.mesh].isSkinnedMesh = true;\n        }\n      }\n    }\n    this.json.meshReferences = meshReferences;\n    this.json.meshUses = meshUses;\n  };\n\n  /**\n   * Requests the specified dependency asynchronously, with caching.\n   * @param {string} type\n   * @param {number} index\n   * @return {Promise<THREE.Object3D|THREE.Material|THREE.Texture|THREE.AnimationClip|ArrayBuffer|Object>}\n   */\n  GLTFParser.prototype.getDependency = function (type, index) {\n    var cacheKey = type + ':' + index;\n    var dependency = this.cache.get(cacheKey);\n    if (!dependency) {\n      switch (type) {\n        case 'scene':\n          dependency = this.loadScene(index);\n          break;\n        case 'node':\n          dependency = this.loadNode(index);\n          break;\n        case 'mesh':\n          dependency = this.loadMesh(index);\n          break;\n        case 'accessor':\n          dependency = this.loadAccessor(index);\n          break;\n        case 'bufferView':\n          dependency = this.loadBufferView(index);\n          break;\n        case 'buffer':\n          dependency = this.loadBuffer(index);\n          break;\n        case 'material':\n          dependency = this.loadMaterial(index);\n          break;\n        case 'texture':\n          dependency = this.loadTexture(index);\n          break;\n        case 'skin':\n          dependency = this.loadSkin(index);\n          break;\n        case 'animation':\n          dependency = this.loadAnimation(index);\n          break;\n        case 'camera':\n          dependency = this.loadCamera(index);\n          break;\n        case 'light':\n          dependency = this.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].loadLight(index);\n          break;\n        default:\n          throw new Error('Unknown type: ' + type);\n      }\n      this.cache.add(cacheKey, dependency);\n    }\n    return dependency;\n  };\n\n  /**\n   * Requests all dependencies of the specified type asynchronously, with caching.\n   * @param {string} type\n   * @return {Promise<Array<Object>>}\n   */\n  GLTFParser.prototype.getDependencies = function (type) {\n    var dependencies = this.cache.get(type);\n    if (!dependencies) {\n      var parser = this;\n      var defs = this.json[type + (type === 'mesh' ? 'es' : 's')] || [];\n      dependencies = Promise.all(defs.map(function (def, index) {\n        return parser.getDependency(type, index);\n      }));\n      this.cache.add(type, dependencies);\n    }\n    return dependencies;\n  };\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n   * @param {number} bufferIndex\n   * @return {Promise<ArrayBuffer>}\n   */\n  GLTFParser.prototype.loadBuffer = function (bufferIndex) {\n    var bufferDef = this.json.buffers[bufferIndex];\n    var loader = this.fileLoader;\n    if (bufferDef.type && bufferDef.type !== 'arraybuffer') {\n      throw new Error('THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.');\n    }\n\n    // If present, GLB container is required to be the first buffer.\n    if (bufferDef.uri === undefined && bufferIndex === 0) {\n      return Promise.resolve(this.extensions[EXTENSIONS.KHR_BINARY_GLTF].body);\n    }\n    var options = this.options;\n    return new Promise(function (resolve, reject) {\n      loader.load(resolveURL(bufferDef.uri, options.path), resolve, undefined, function () {\n        reject(new Error('THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".'));\n      });\n    });\n  };\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n   * @param {number} bufferViewIndex\n   * @return {Promise<ArrayBuffer>}\n   */\n  GLTFParser.prototype.loadBufferView = function (bufferViewIndex) {\n    var bufferViewDef = this.json.bufferViews[bufferViewIndex];\n    return this.getDependency('buffer', bufferViewDef.buffer).then(function (buffer) {\n      var byteLength = bufferViewDef.byteLength || 0;\n      var byteOffset = bufferViewDef.byteOffset || 0;\n      return buffer.slice(byteOffset, byteOffset + byteLength);\n    });\n  };\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n   * @param {number} accessorIndex\n   * @return {Promise<THREE.BufferAttribute|THREE.InterleavedBufferAttribute>}\n   */\n  GLTFParser.prototype.loadAccessor = function (accessorIndex) {\n    var parser = this;\n    var json = this.json;\n    var accessorDef = this.json.accessors[accessorIndex];\n    if (accessorDef.bufferView === undefined && accessorDef.sparse === undefined) {\n      // Ignore empty accessors, which may be used to declare runtime\n      // information about attributes coming from another source (e.g. Draco\n      // compression extension).\n      return Promise.resolve(null);\n    }\n    var pendingBufferViews = [];\n    if (accessorDef.bufferView !== undefined) {\n      pendingBufferViews.push(this.getDependency('bufferView', accessorDef.bufferView));\n    } else {\n      pendingBufferViews.push(null);\n    }\n    if (accessorDef.sparse !== undefined) {\n      pendingBufferViews.push(this.getDependency('bufferView', accessorDef.sparse.indices.bufferView));\n      pendingBufferViews.push(this.getDependency('bufferView', accessorDef.sparse.values.bufferView));\n    }\n    return Promise.all(pendingBufferViews).then(function (bufferViews) {\n      var bufferView = bufferViews[0];\n      var itemSize = WEBGL_TYPE_SIZES[accessorDef.type];\n      var TypedArray = WEBGL_COMPONENT_TYPES[accessorDef.componentType];\n\n      // For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n      var elementBytes = TypedArray.BYTES_PER_ELEMENT;\n      var itemBytes = elementBytes * itemSize;\n      var byteOffset = accessorDef.byteOffset || 0;\n      var byteStride = accessorDef.bufferView !== undefined ? json.bufferViews[accessorDef.bufferView].byteStride : undefined;\n      var normalized = accessorDef.normalized === true;\n      var array, bufferAttribute;\n\n      // The buffer is not interleaved if the stride is the item size in bytes.\n      if (byteStride && byteStride !== itemBytes) {\n        // Each \"slice\" of the buffer, as defined by 'count' elements of 'byteStride' bytes, gets its own InterleavedBuffer\n        // This makes sure that IBA.count reflects accessor.count properly\n        var ibSlice = Math.floor(byteOffset / byteStride);\n        var ibCacheKey = 'InterleavedBuffer:' + accessorDef.bufferView + ':' + accessorDef.componentType + ':' + ibSlice + ':' + accessorDef.count;\n        var ib = parser.cache.get(ibCacheKey);\n        if (!ib) {\n          array = new TypedArray(bufferView, ibSlice * byteStride, accessorDef.count * byteStride / elementBytes);\n\n          // Integer parameters to IB/IBA are in array elements, not bytes.\n          ib = new THREE.InterleavedBuffer(array, byteStride / elementBytes);\n          parser.cache.add(ibCacheKey, ib);\n        }\n        bufferAttribute = new THREE.InterleavedBufferAttribute(ib, itemSize, byteOffset % byteStride / elementBytes, normalized);\n      } else {\n        if (bufferView === null) {\n          array = new TypedArray(accessorDef.count * itemSize);\n        } else {\n          array = new TypedArray(bufferView, byteOffset, accessorDef.count * itemSize);\n        }\n        bufferAttribute = new THREE.BufferAttribute(array, itemSize, normalized);\n      }\n\n      // https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n      if (accessorDef.sparse !== undefined) {\n        var itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n        var TypedArrayIndices = WEBGL_COMPONENT_TYPES[accessorDef.sparse.indices.componentType];\n        var byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n        var byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n        var sparseIndices = new TypedArrayIndices(bufferViews[1], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices);\n        var sparseValues = new TypedArray(bufferViews[2], byteOffsetValues, accessorDef.sparse.count * itemSize);\n        if (bufferView !== null) {\n          // Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n          bufferAttribute = new THREE.BufferAttribute(bufferAttribute.array.slice(), bufferAttribute.itemSize, bufferAttribute.normalized);\n        }\n        for (var i = 0, il = sparseIndices.length; i < il; i++) {\n          var index = sparseIndices[i];\n          bufferAttribute.setX(index, sparseValues[i * itemSize]);\n          if (itemSize >= 2) bufferAttribute.setY(index, sparseValues[i * itemSize + 1]);\n          if (itemSize >= 3) bufferAttribute.setZ(index, sparseValues[i * itemSize + 2]);\n          if (itemSize >= 4) bufferAttribute.setW(index, sparseValues[i * itemSize + 3]);\n          if (itemSize >= 5) throw new Error('THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.');\n        }\n      }\n      return bufferAttribute;\n    });\n  };\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n   * @param {number} textureIndex\n   * @return {Promise<THREE.Texture>}\n   */\n  GLTFParser.prototype.loadTexture = function (textureIndex) {\n    var parser = this;\n    var json = this.json;\n    var options = this.options;\n    var textureLoader = this.textureLoader;\n    var URL = window.URL || window.webkitURL;\n    var textureDef = json.textures[textureIndex];\n    var textureExtensions = textureDef.extensions || {};\n    var source;\n    if (textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS]) {\n      source = json.images[textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS].source];\n    } else {\n      source = json.images[textureDef.source];\n    }\n    var sourceURI = source.uri;\n    var isObjectURL = false;\n    if (source.bufferView !== undefined) {\n      // Load binary image data from bufferView, if provided.\n\n      sourceURI = parser.getDependency('bufferView', source.bufferView).then(function (bufferView) {\n        isObjectURL = true;\n        var blob = new Blob([bufferView], {\n          type: source.mimeType\n        });\n        sourceURI = URL.createObjectURL(blob);\n        return sourceURI;\n      });\n    }\n    return Promise.resolve(sourceURI).then(function (sourceURI) {\n      // Load Texture resource.\n\n      var loader = options.manager.getHandler(sourceURI);\n      if (!loader) {\n        loader = textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS] ? parser.extensions[EXTENSIONS.MSFT_TEXTURE_DDS].ddsLoader : textureLoader;\n      }\n      return new Promise(function (resolve, reject) {\n        loader.load(resolveURL(sourceURI, options.path), resolve, undefined, reject);\n      });\n    }).then(function (texture) {\n      // Clean up resources and configure Texture.\n\n      if (isObjectURL === true) {\n        URL.revokeObjectURL(sourceURI);\n      }\n      texture.flipY = false;\n      if (textureDef.name) texture.name = textureDef.name;\n\n      // Ignore unknown mime types, like DDS files.\n      if (source.mimeType in MIME_TYPE_FORMATS) {\n        texture.format = MIME_TYPE_FORMATS[source.mimeType];\n      }\n      var samplers = json.samplers || {};\n      var sampler = samplers[textureDef.sampler] || {};\n      texture.magFilter = WEBGL_FILTERS[sampler.magFilter] || THREE.LinearFilter;\n      texture.minFilter = WEBGL_FILTERS[sampler.minFilter] || THREE.LinearMipmapLinearFilter;\n      texture.wrapS = WEBGL_WRAPPINGS[sampler.wrapS] || THREE.RepeatWrapping;\n      texture.wrapT = WEBGL_WRAPPINGS[sampler.wrapT] || THREE.RepeatWrapping;\n      return texture;\n    });\n  };\n\n  /**\n   * Asynchronously assigns a texture to the given material parameters.\n   * @param {Object} materialParams\n   * @param {string} mapName\n   * @param {Object} mapDef\n   * @return {Promise}\n   */\n  GLTFParser.prototype.assignTexture = function (materialParams, mapName, mapDef) {\n    var parser = this;\n    return this.getDependency('texture', mapDef.index).then(function (texture) {\n      if (!texture.isCompressedTexture) {\n        switch (mapName) {\n          case 'aoMap':\n          case 'emissiveMap':\n          case 'metalnessMap':\n          case 'normalMap':\n          case 'roughnessMap':\n            texture.format = THREE.RGBFormat;\n            break;\n        }\n      }\n\n      // Materials sample aoMap from UV set 1 and other maps from UV set 0 - this can't be configured\n      // However, we will copy UV set 0 to UV set 1 on demand for aoMap\n      if (mapDef.texCoord !== undefined && mapDef.texCoord != 0 && !(mapName === 'aoMap' && mapDef.texCoord == 1)) {\n        console.warn('THREE.GLTFLoader: Custom UV set ' + mapDef.texCoord + ' for texture ' + mapName + ' not yet supported.');\n      }\n      if (parser.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM]) {\n        var transform = mapDef.extensions !== undefined ? mapDef.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM] : undefined;\n        if (transform) {\n          texture = parser.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM].extendTexture(texture, transform);\n        }\n      }\n      materialParams[mapName] = texture;\n    });\n  };\n\n  /**\n   * Assigns final material to a Mesh, Line, or Points instance. The instance\n   * already has a material (generated from the glTF material options alone)\n   * but reuse of the same glTF material may require multiple threejs materials\n   * to accomodate different primitive types, defines, etc. New materials will\n   * be created if necessary, and reused from a cache.\n   * @param  {THREE.Object3D} mesh Mesh, Line, or Points instance.\n   */\n  GLTFParser.prototype.assignFinalMaterial = function (mesh) {\n    var geometry = mesh.geometry;\n    var material = mesh.material;\n    var extensions = this.extensions;\n    var useVertexTangents = geometry.attributes.tangent !== undefined;\n    var useVertexColors = geometry.attributes.color !== undefined;\n    var useFlatShading = geometry.attributes.normal === undefined;\n    var useSkinning = mesh.isSkinnedMesh === true;\n    var useMorphTargets = Object.keys(geometry.morphAttributes).length > 0;\n    var useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined;\n    if (mesh.isPoints) {\n      var cacheKey = 'PointsMaterial:' + material.uuid;\n      var pointsMaterial = this.cache.get(cacheKey);\n      if (!pointsMaterial) {\n        pointsMaterial = new THREE.PointsMaterial();\n        THREE.Material.prototype.copy.call(pointsMaterial, material);\n        pointsMaterial.color.copy(material.color);\n        pointsMaterial.map = material.map;\n        pointsMaterial.sizeAttenuation = false; // glTF spec says points should be 1px\n\n        this.cache.add(cacheKey, pointsMaterial);\n      }\n      material = pointsMaterial;\n    } else if (mesh.isLine) {\n      var cacheKey = 'LineBasicMaterial:' + material.uuid;\n      var lineMaterial = this.cache.get(cacheKey);\n      if (!lineMaterial) {\n        lineMaterial = new THREE.LineBasicMaterial();\n        THREE.Material.prototype.copy.call(lineMaterial, material);\n        lineMaterial.color.copy(material.color);\n        this.cache.add(cacheKey, lineMaterial);\n      }\n      material = lineMaterial;\n    }\n\n    // Clone the material if it will be modified\n    if (useVertexTangents || useVertexColors || useFlatShading || useSkinning || useMorphTargets) {\n      var cacheKey = 'ClonedMaterial:' + material.uuid + ':';\n      if (material.isGLTFSpecularGlossinessMaterial) cacheKey += 'specular-glossiness:';\n      if (useSkinning) cacheKey += 'skinning:';\n      if (useVertexTangents) cacheKey += 'vertex-tangents:';\n      if (useVertexColors) cacheKey += 'vertex-colors:';\n      if (useFlatShading) cacheKey += 'flat-shading:';\n      if (useMorphTargets) cacheKey += 'morph-targets:';\n      if (useMorphNormals) cacheKey += 'morph-normals:';\n      var cachedMaterial = this.cache.get(cacheKey);\n      if (!cachedMaterial) {\n        cachedMaterial = material.clone();\n        if (useSkinning) cachedMaterial.skinning = true;\n        if (useVertexTangents) cachedMaterial.vertexTangents = true;\n        if (useVertexColors) cachedMaterial.vertexColors = true;\n        if (useFlatShading) cachedMaterial.flatShading = true;\n        if (useMorphTargets) cachedMaterial.morphTargets = true;\n        if (useMorphNormals) cachedMaterial.morphNormals = true;\n        this.cache.add(cacheKey, cachedMaterial);\n      }\n      material = cachedMaterial;\n    }\n\n    // workarounds for mesh and geometry\n\n    if (material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined) {\n      geometry.setAttribute('uv2', new THREE.BufferAttribute(geometry.attributes.uv.array, 2));\n    }\n\n    // https://github.com/mrdoob/three.js/issues/11438#issuecomment-507003995\n    if (material.normalScale && !useVertexTangents) {\n      material.normalScale.y = -material.normalScale.y;\n    }\n    mesh.material = material;\n  };\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n   * @param {number} materialIndex\n   * @return {Promise<THREE.Material>}\n   */\n  GLTFParser.prototype.loadMaterial = function (materialIndex) {\n    var parser = this;\n    var json = this.json;\n    var extensions = this.extensions;\n    var materialDef = json.materials[materialIndex];\n    var materialType;\n    var materialParams = {};\n    var materialExtensions = materialDef.extensions || {};\n    var pending = [];\n    if (materialExtensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]) {\n      var sgExtension = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS];\n      materialType = sgExtension.getMaterialType();\n      pending.push(sgExtension.extendParams(materialParams, materialDef, parser));\n    } else if (materialExtensions[EXTENSIONS.KHR_MATERIALS_UNLIT]) {\n      var kmuExtension = extensions[EXTENSIONS.KHR_MATERIALS_UNLIT];\n      materialType = kmuExtension.getMaterialType();\n      pending.push(kmuExtension.extendParams(materialParams, materialDef, parser));\n    } else {\n      // Specification:\n      // https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n\n      materialType = THREE.MeshStandardMaterial;\n      var metallicRoughness = materialDef.pbrMetallicRoughness || {};\n      materialParams.color = new THREE.Color(1.0, 1.0, 1.0);\n      materialParams.opacity = 1.0;\n      if (Array.isArray(metallicRoughness.baseColorFactor)) {\n        var array = metallicRoughness.baseColorFactor;\n        materialParams.color.fromArray(array);\n        materialParams.opacity = array[3];\n      }\n      if (metallicRoughness.baseColorTexture !== undefined) {\n        pending.push(parser.assignTexture(materialParams, 'map', metallicRoughness.baseColorTexture));\n      }\n      materialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n      materialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n      if (metallicRoughness.metallicRoughnessTexture !== undefined) {\n        pending.push(parser.assignTexture(materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture));\n        pending.push(parser.assignTexture(materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture));\n      }\n    }\n    if (materialDef.doubleSided === true) {\n      materialParams.side = THREE.DoubleSide;\n    }\n    var alphaMode = materialDef.alphaMode;\n    if (alphaMode === ALPHA_MODES.BLEND) {\n      materialParams.transparent = true;\n    } else if (alphaMode === ALPHA_MODES.MASK) {\n      materialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n    }\n    if (materialDef.normalTexture !== undefined && materialType !== THREE.MeshBasicMaterial) {\n      pending.push(parser.assignTexture(materialParams, 'normalMap', materialDef.normalTexture));\n      materialParams.normalScale = new THREE.Vector2(1, 1);\n      if (materialDef.normalTexture.scale !== undefined) {\n        materialParams.normalScale.set(materialDef.normalTexture.scale, materialDef.normalTexture.scale);\n      }\n    }\n    if (materialDef.occlusionTexture !== undefined && materialType !== THREE.MeshBasicMaterial) {\n      pending.push(parser.assignTexture(materialParams, 'aoMap', materialDef.occlusionTexture));\n      if (materialDef.occlusionTexture.strength !== undefined) {\n        materialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n      }\n    }\n    if (materialDef.emissiveFactor !== undefined && materialType !== THREE.MeshBasicMaterial) {\n      materialParams.emissive = new THREE.Color().fromArray(materialDef.emissiveFactor);\n    }\n    if (materialDef.emissiveTexture !== undefined && materialType !== THREE.MeshBasicMaterial) {\n      pending.push(parser.assignTexture(materialParams, 'emissiveMap', materialDef.emissiveTexture));\n    }\n    return Promise.all(pending).then(function () {\n      var material;\n      if (materialType === GLTFMeshStandardSGMaterial) {\n        material = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].createMaterial(materialParams);\n      } else {\n        material = new materialType(materialParams);\n      }\n      if (materialDef.name) material.name = materialDef.name;\n\n      // baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\n      if (material.map) material.map.encoding = THREE.sRGBEncoding;\n      if (material.emissiveMap) material.emissiveMap.encoding = THREE.sRGBEncoding;\n      assignExtrasToUserData(material, materialDef);\n      if (materialDef.extensions) addUnknownExtensionsToUserData(extensions, material, materialDef);\n      return material;\n    });\n  };\n\n  /**\n   * @param {THREE.BufferGeometry} geometry\n   * @param {GLTF.Primitive} primitiveDef\n   * @param {GLTFParser} parser\n   */\n  function computeBounds(geometry, primitiveDef, parser) {\n    var attributes = primitiveDef.attributes;\n    var box = new THREE.Box3();\n    if (attributes.POSITION !== undefined) {\n      var accessor = parser.json.accessors[attributes.POSITION];\n      var min = accessor.min;\n      var max = accessor.max;\n\n      // glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n      if (min !== undefined && max !== undefined) {\n        box.set(new THREE.Vector3(min[0], min[1], min[2]), new THREE.Vector3(max[0], max[1], max[2]));\n      } else {\n        console.warn('THREE.GLTFLoader: Missing min/max properties for accessor POSITION.');\n        return;\n      }\n    } else {\n      return;\n    }\n    var targets = primitiveDef.targets;\n    if (targets !== undefined) {\n      var vector = new THREE.Vector3();\n      for (var i = 0, il = targets.length; i < il; i++) {\n        var target = targets[i];\n        if (target.POSITION !== undefined) {\n          var accessor = parser.json.accessors[target.POSITION];\n          var min = accessor.min;\n          var max = accessor.max;\n\n          // glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n          if (min !== undefined && max !== undefined) {\n            // we need to get max of absolute components because target weight is [-1,1]\n            vector.setX(Math.max(Math.abs(min[0]), Math.abs(max[0])));\n            vector.setY(Math.max(Math.abs(min[1]), Math.abs(max[1])));\n            vector.setZ(Math.max(Math.abs(min[2]), Math.abs(max[2])));\n            box.expandByVector(vector);\n          } else {\n            console.warn('THREE.GLTFLoader: Missing min/max properties for accessor POSITION.');\n          }\n        }\n      }\n    }\n    geometry.boundingBox = box;\n    var sphere = new THREE.Sphere();\n    box.getCenter(sphere.center);\n    sphere.radius = box.min.distanceTo(box.max) / 2;\n    geometry.boundingSphere = sphere;\n  }\n\n  /**\n   * @param {THREE.BufferGeometry} geometry\n   * @param {GLTF.Primitive} primitiveDef\n   * @param {GLTFParser} parser\n   * @return {Promise<THREE.BufferGeometry>}\n   */\n  function addPrimitiveAttributes(geometry, primitiveDef, parser) {\n    var attributes = primitiveDef.attributes;\n    var pending = [];\n    function assignAttributeAccessor(accessorIndex, attributeName) {\n      return parser.getDependency('accessor', accessorIndex).then(function (accessor) {\n        geometry.setAttribute(attributeName, accessor);\n      });\n    }\n    for (var gltfAttributeName in attributes) {\n      var threeAttributeName = ATTRIBUTES[gltfAttributeName] || gltfAttributeName.toLowerCase();\n\n      // Skip attributes already provided by e.g. Draco extension.\n      if (threeAttributeName in geometry.attributes) continue;\n      pending.push(assignAttributeAccessor(attributes[gltfAttributeName], threeAttributeName));\n    }\n    if (primitiveDef.indices !== undefined && !geometry.index) {\n      var accessor = parser.getDependency('accessor', primitiveDef.indices).then(function (accessor) {\n        geometry.setIndex(accessor);\n      });\n      pending.push(accessor);\n    }\n    assignExtrasToUserData(geometry, primitiveDef);\n    computeBounds(geometry, primitiveDef, parser);\n    return Promise.all(pending).then(function () {\n      return primitiveDef.targets !== undefined ? addMorphTargets(geometry, primitiveDef.targets, parser) : geometry;\n    });\n  }\n\n  /**\n   * @param {THREE.BufferGeometry} geometry\n   * @param {Number} drawMode\n   * @return {THREE.BufferGeometry}\n   */\n  function toTrianglesDrawMode(geometry, drawMode) {\n    var index = geometry.getIndex();\n\n    // generate index if not present\n\n    if (index === null) {\n      var indices = [];\n      var position = geometry.getAttribute('position');\n      if (position !== undefined) {\n        for (var i = 0; i < position.count; i++) {\n          indices.push(i);\n        }\n        geometry.setIndex(indices);\n        index = geometry.getIndex();\n      } else {\n        console.error('THREE.GLTFLoader.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.');\n        return geometry;\n      }\n    }\n\n    //\n\n    var numberOfTriangles = index.count - 2;\n    var newIndices = [];\n    if (drawMode === THREE.TriangleFanDrawMode) {\n      // gl.TRIANGLE_FAN\n\n      for (var i = 1; i <= numberOfTriangles; i++) {\n        newIndices.push(index.getX(0));\n        newIndices.push(index.getX(i));\n        newIndices.push(index.getX(i + 1));\n      }\n    } else {\n      // gl.TRIANGLE_STRIP\n\n      for (var i = 0; i < numberOfTriangles; i++) {\n        if (i % 2 === 0) {\n          newIndices.push(index.getX(i));\n          newIndices.push(index.getX(i + 1));\n          newIndices.push(index.getX(i + 2));\n        } else {\n          newIndices.push(index.getX(i + 2));\n          newIndices.push(index.getX(i + 1));\n          newIndices.push(index.getX(i));\n        }\n      }\n    }\n    if (newIndices.length / 3 !== numberOfTriangles) {\n      console.error('THREE.GLTFLoader.toTrianglesDrawMode(): Unable to generate correct amount of triangles.');\n    }\n\n    // build final geometry\n\n    var newGeometry = geometry.clone();\n    newGeometry.setIndex(newIndices);\n    return newGeometry;\n  }\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n   *\n   * Creates BufferGeometries from primitives.\n   *\n   * @param {Array<GLTF.Primitive>} primitives\n   * @return {Promise<Array<THREE.BufferGeometry>>}\n   */\n  GLTFParser.prototype.loadGeometries = function (primitives) {\n    var parser = this;\n    var extensions = this.extensions;\n    var cache = this.primitiveCache;\n    function createDracoPrimitive(primitive) {\n      return extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION].decodePrimitive(primitive, parser).then(function (geometry) {\n        return addPrimitiveAttributes(geometry, primitive, parser);\n      });\n    }\n    var pending = [];\n    for (var i = 0, il = primitives.length; i < il; i++) {\n      var primitive = primitives[i];\n      var cacheKey = createPrimitiveKey(primitive);\n\n      // See if we've already created this geometry\n      var cached = cache[cacheKey];\n      if (cached) {\n        // Use the cached geometry if it exists\n        pending.push(cached.promise);\n      } else {\n        var geometryPromise;\n        if (primitive.extensions && primitive.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION]) {\n          // Use DRACO geometry if available\n          geometryPromise = createDracoPrimitive(primitive);\n        } else {\n          // Otherwise create a new geometry\n          geometryPromise = addPrimitiveAttributes(new THREE.BufferGeometry(), primitive, parser);\n        }\n\n        // Cache this geometry\n        cache[cacheKey] = {\n          primitive: primitive,\n          promise: geometryPromise\n        };\n        pending.push(geometryPromise);\n      }\n    }\n    return Promise.all(pending);\n  };\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n   * @param {number} meshIndex\n   * @return {Promise<THREE.Group|THREE.Mesh|THREE.SkinnedMesh>}\n   */\n  GLTFParser.prototype.loadMesh = function (meshIndex) {\n    var parser = this;\n    var json = this.json;\n    var meshDef = json.meshes[meshIndex];\n    var primitives = meshDef.primitives;\n    var pending = [];\n    for (var i = 0, il = primitives.length; i < il; i++) {\n      var material = primitives[i].material === undefined ? createDefaultMaterial(this.cache) : this.getDependency('material', primitives[i].material);\n      pending.push(material);\n    }\n    pending.push(parser.loadGeometries(primitives));\n    return Promise.all(pending).then(function (results) {\n      var materials = results.slice(0, results.length - 1);\n      var geometries = results[results.length - 1];\n      var meshes = [];\n      for (var i = 0, il = geometries.length; i < il; i++) {\n        var geometry = geometries[i];\n        var primitive = primitives[i];\n\n        // 1. create Mesh\n\n        var mesh;\n        var material = materials[i];\n        if (primitive.mode === WEBGL_CONSTANTS.TRIANGLES || primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP || primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN || primitive.mode === undefined) {\n          // .isSkinnedMesh isn't in glTF spec. See .markDefs()\n          mesh = meshDef.isSkinnedMesh === true ? new THREE.SkinnedMesh(geometry, material) : new THREE.Mesh(geometry, material);\n          if (mesh.isSkinnedMesh === true && !mesh.geometry.attributes.skinWeight.normalized) {\n            // we normalize floating point skin weight array to fix malformed assets (see #15319)\n            // it's important to skip this for non-float32 data since normalizeSkinWeights assumes non-normalized inputs\n            mesh.normalizeSkinWeights();\n          }\n          if (primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP) {\n            mesh.geometry = toTrianglesDrawMode(mesh.geometry, THREE.TriangleStripDrawMode);\n          } else if (primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN) {\n            mesh.geometry = toTrianglesDrawMode(mesh.geometry, THREE.TriangleFanDrawMode);\n          }\n        } else if (primitive.mode === WEBGL_CONSTANTS.LINES) {\n          mesh = new THREE.LineSegments(geometry, material);\n        } else if (primitive.mode === WEBGL_CONSTANTS.LINE_STRIP) {\n          mesh = new THREE.Line(geometry, material);\n        } else if (primitive.mode === WEBGL_CONSTANTS.LINE_LOOP) {\n          mesh = new THREE.LineLoop(geometry, material);\n        } else if (primitive.mode === WEBGL_CONSTANTS.POINTS) {\n          mesh = new THREE.Points(geometry, material);\n        } else {\n          throw new Error('THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode);\n        }\n        if (Object.keys(mesh.geometry.morphAttributes).length > 0) {\n          updateMorphTargets(mesh, meshDef);\n        }\n        mesh.name = meshDef.name || 'mesh_' + meshIndex;\n        if (geometries.length > 1) mesh.name += '_' + i;\n        assignExtrasToUserData(mesh, meshDef);\n        parser.assignFinalMaterial(mesh);\n        meshes.push(mesh);\n      }\n      if (meshes.length === 1) {\n        return meshes[0];\n      }\n      var group = new THREE.Group();\n      for (var i = 0, il = meshes.length; i < il; i++) {\n        group.add(meshes[i]);\n      }\n      return group;\n    });\n  };\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n   * @param {number} cameraIndex\n   * @return {Promise<THREE.Camera>}\n   */\n  GLTFParser.prototype.loadCamera = function (cameraIndex) {\n    var camera;\n    var cameraDef = this.json.cameras[cameraIndex];\n    var params = cameraDef[cameraDef.type];\n    if (!params) {\n      console.warn('THREE.GLTFLoader: Missing camera parameters.');\n      return;\n    }\n    if (cameraDef.type === 'perspective') {\n      camera = new THREE.PerspectiveCamera(THREE.MathUtils.radToDeg(params.yfov), params.aspectRatio || 1, params.znear || 1, params.zfar || 2e6);\n    } else if (cameraDef.type === 'orthographic') {\n      camera = new THREE.OrthographicCamera(params.xmag / -2, params.xmag / 2, params.ymag / 2, params.ymag / -2, params.znear, params.zfar);\n    }\n    if (cameraDef.name) camera.name = cameraDef.name;\n    assignExtrasToUserData(camera, cameraDef);\n    return Promise.resolve(camera);\n  };\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n   * @param {number} skinIndex\n   * @return {Promise<Object>}\n   */\n  GLTFParser.prototype.loadSkin = function (skinIndex) {\n    var skinDef = this.json.skins[skinIndex];\n    var skinEntry = {\n      joints: skinDef.joints\n    };\n    if (skinDef.inverseBindMatrices === undefined) {\n      return Promise.resolve(skinEntry);\n    }\n    return this.getDependency('accessor', skinDef.inverseBindMatrices).then(function (accessor) {\n      skinEntry.inverseBindMatrices = accessor;\n      return skinEntry;\n    });\n  };\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n   * @param {number} animationIndex\n   * @return {Promise<THREE.AnimationClip>}\n   */\n  GLTFParser.prototype.loadAnimation = function (animationIndex) {\n    var json = this.json;\n    var animationDef = json.animations[animationIndex];\n    var pendingNodes = [];\n    var pendingInputAccessors = [];\n    var pendingOutputAccessors = [];\n    var pendingSamplers = [];\n    var pendingTargets = [];\n    for (var i = 0, il = animationDef.channels.length; i < il; i++) {\n      var channel = animationDef.channels[i];\n      var sampler = animationDef.samplers[channel.sampler];\n      var target = channel.target;\n      var name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\n      var input = animationDef.parameters !== undefined ? animationDef.parameters[sampler.input] : sampler.input;\n      var output = animationDef.parameters !== undefined ? animationDef.parameters[sampler.output] : sampler.output;\n      pendingNodes.push(this.getDependency('node', name));\n      pendingInputAccessors.push(this.getDependency('accessor', input));\n      pendingOutputAccessors.push(this.getDependency('accessor', output));\n      pendingSamplers.push(sampler);\n      pendingTargets.push(target);\n    }\n    return Promise.all([Promise.all(pendingNodes), Promise.all(pendingInputAccessors), Promise.all(pendingOutputAccessors), Promise.all(pendingSamplers), Promise.all(pendingTargets)]).then(function (dependencies) {\n      var nodes = dependencies[0];\n      var inputAccessors = dependencies[1];\n      var outputAccessors = dependencies[2];\n      var samplers = dependencies[3];\n      var targets = dependencies[4];\n      var tracks = [];\n      for (var i = 0, il = nodes.length; i < il; i++) {\n        var node = nodes[i];\n        var inputAccessor = inputAccessors[i];\n        var outputAccessor = outputAccessors[i];\n        var sampler = samplers[i];\n        var target = targets[i];\n        if (node === undefined) continue;\n        node.updateMatrix();\n        node.matrixAutoUpdate = true;\n        var TypedKeyframeTrack;\n        switch (PATH_PROPERTIES[target.path]) {\n          case PATH_PROPERTIES.weights:\n            TypedKeyframeTrack = THREE.NumberKeyframeTrack;\n            break;\n          case PATH_PROPERTIES.rotation:\n            TypedKeyframeTrack = THREE.QuaternionKeyframeTrack;\n            break;\n          case PATH_PROPERTIES.position:\n          case PATH_PROPERTIES.scale:\n          default:\n            TypedKeyframeTrack = THREE.VectorKeyframeTrack;\n            break;\n        }\n        var targetName = node.name ? node.name : node.uuid;\n        var interpolation = sampler.interpolation !== undefined ? INTERPOLATION[sampler.interpolation] : THREE.InterpolateLinear;\n        var targetNames = [];\n        if (PATH_PROPERTIES[target.path] === PATH_PROPERTIES.weights) {\n          // Node may be a THREE.Group (glTF mesh with several primitives) or a THREE.Mesh.\n          node.traverse(function (object) {\n            if (object.isMesh === true && object.morphTargetInfluences) {\n              targetNames.push(object.name ? object.name : object.uuid);\n            }\n          });\n        } else {\n          targetNames.push(targetName);\n        }\n        var outputArray = outputAccessor.array;\n        if (outputAccessor.normalized) {\n          var scale;\n          if (outputArray.constructor === Int8Array) {\n            scale = 1 / 127;\n          } else if (outputArray.constructor === Uint8Array) {\n            scale = 1 / 255;\n          } else if (outputArray.constructor == Int16Array) {\n            scale = 1 / 32767;\n          } else if (outputArray.constructor === Uint16Array) {\n            scale = 1 / 65535;\n          } else {\n            throw new Error('THREE.GLTFLoader: Unsupported output accessor component type.');\n          }\n          var scaled = new Float32Array(outputArray.length);\n          for (var j = 0, jl = outputArray.length; j < jl; j++) {\n            scaled[j] = outputArray[j] * scale;\n          }\n          outputArray = scaled;\n        }\n        for (var j = 0, jl = targetNames.length; j < jl; j++) {\n          var track = new TypedKeyframeTrack(targetNames[j] + '.' + PATH_PROPERTIES[target.path], inputAccessor.array, outputArray, interpolation);\n\n          // Override interpolation with custom factory method.\n          if (sampler.interpolation === 'CUBICSPLINE') {\n            track.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline(result) {\n              // A CUBICSPLINE keyframe in glTF has three output values for each input value,\n              // representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n              // must be divided by three to get the interpolant's sampleSize argument.\n\n              return new GLTFCubicSplineInterpolant(this.times, this.values, this.getValueSize() / 3, result);\n            };\n\n            // Mark as CUBICSPLINE. `track.getInterpolation()` doesn't support custom interpolants.\n            track.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n          }\n          tracks.push(track);\n        }\n      }\n      var name = animationDef.name ? animationDef.name : 'animation_' + animationIndex;\n      return new THREE.AnimationClip(name, undefined, tracks);\n    });\n  };\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n   * @param {number} nodeIndex\n   * @return {Promise<THREE.Object3D>}\n   */\n  GLTFParser.prototype.loadNode = function (nodeIndex) {\n    var json = this.json;\n    var extensions = this.extensions;\n    var parser = this;\n    var meshReferences = json.meshReferences;\n    var meshUses = json.meshUses;\n    var nodeDef = json.nodes[nodeIndex];\n    return function () {\n      var pending = [];\n      if (nodeDef.mesh !== undefined) {\n        pending.push(parser.getDependency('mesh', nodeDef.mesh).then(function (mesh) {\n          var node;\n          if (meshReferences[nodeDef.mesh] > 1) {\n            var instanceNum = meshUses[nodeDef.mesh]++;\n            node = mesh.clone();\n            node.name += '_instance_' + instanceNum;\n          } else {\n            node = mesh;\n          }\n\n          // if weights are provided on the node, override weights on the mesh.\n          if (nodeDef.weights !== undefined) {\n            node.traverse(function (o) {\n              if (!o.isMesh) return;\n              for (var i = 0, il = nodeDef.weights.length; i < il; i++) {\n                o.morphTargetInfluences[i] = nodeDef.weights[i];\n              }\n            });\n          }\n          return node;\n        }));\n      }\n      if (nodeDef.camera !== undefined) {\n        pending.push(parser.getDependency('camera', nodeDef.camera));\n      }\n      if (nodeDef.extensions && nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL] && nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].light !== undefined) {\n        pending.push(parser.getDependency('light', nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].light));\n      }\n      return Promise.all(pending);\n    }().then(function (objects) {\n      var node;\n\n      // .isBone isn't in glTF spec. See .markDefs\n      if (nodeDef.isBone === true) {\n        node = new THREE.Bone();\n      } else if (objects.length > 1) {\n        node = new THREE.Group();\n      } else if (objects.length === 1) {\n        node = objects[0];\n      } else {\n        node = new THREE.Object3D();\n      }\n      if (node !== objects[0]) {\n        for (var i = 0, il = objects.length; i < il; i++) {\n          node.add(objects[i]);\n        }\n      }\n      if (nodeDef.name) {\n        node.userData.name = nodeDef.name;\n        node.name = THREE.PropertyBinding.sanitizeNodeName(nodeDef.name);\n      }\n      assignExtrasToUserData(node, nodeDef);\n      if (nodeDef.extensions) addUnknownExtensionsToUserData(extensions, node, nodeDef);\n      if (nodeDef.matrix !== undefined) {\n        var matrix = new THREE.Matrix4();\n        matrix.fromArray(nodeDef.matrix);\n        node.applyMatrix4(matrix);\n      } else {\n        if (nodeDef.translation !== undefined) {\n          node.position.fromArray(nodeDef.translation);\n        }\n        if (nodeDef.rotation !== undefined) {\n          node.quaternion.fromArray(nodeDef.rotation);\n        }\n        if (nodeDef.scale !== undefined) {\n          node.scale.fromArray(nodeDef.scale);\n        }\n      }\n      return node;\n    });\n  };\n\n  /**\n   * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n   * @param {number} sceneIndex\n   * @return {Promise<THREE.Group>}\n   */\n  GLTFParser.prototype.loadScene = function () {\n    // scene node hierachy builder\n\n    function buildNodeHierachy(nodeId, parentObject, json, parser) {\n      var nodeDef = json.nodes[nodeId];\n      return parser.getDependency('node', nodeId).then(function (node) {\n        if (nodeDef.skin === undefined) return node;\n\n        // build skeleton here as well\n\n        var skinEntry;\n        return parser.getDependency('skin', nodeDef.skin).then(function (skin) {\n          skinEntry = skin;\n          var pendingJoints = [];\n          for (var i = 0, il = skinEntry.joints.length; i < il; i++) {\n            pendingJoints.push(parser.getDependency('node', skinEntry.joints[i]));\n          }\n          return Promise.all(pendingJoints);\n        }).then(function (jointNodes) {\n          node.traverse(function (mesh) {\n            if (!mesh.isMesh) return;\n            var bones = [];\n            var boneInverses = [];\n            for (var j = 0, jl = jointNodes.length; j < jl; j++) {\n              var jointNode = jointNodes[j];\n              if (jointNode) {\n                bones.push(jointNode);\n                var mat = new THREE.Matrix4();\n                if (skinEntry.inverseBindMatrices !== undefined) {\n                  mat.fromArray(skinEntry.inverseBindMatrices.array, j * 16);\n                }\n                boneInverses.push(mat);\n              } else {\n                console.warn('THREE.GLTFLoader: Joint \"%s\" could not be found.', skinEntry.joints[j]);\n              }\n            }\n            mesh.bind(new THREE.Skeleton(bones, boneInverses), mesh.matrixWorld);\n          });\n          return node;\n        });\n      }).then(function (node) {\n        // build node hierachy\n\n        parentObject.add(node);\n        var pending = [];\n        if (nodeDef.children) {\n          var children = nodeDef.children;\n          for (var i = 0, il = children.length; i < il; i++) {\n            var child = children[i];\n            pending.push(buildNodeHierachy(child, node, json, parser));\n          }\n        }\n        return Promise.all(pending);\n      });\n    }\n    return function loadScene(sceneIndex) {\n      var json = this.json;\n      var extensions = this.extensions;\n      var sceneDef = this.json.scenes[sceneIndex];\n      var parser = this;\n\n      // Loader returns Group, not Scene.\n      // See: https://github.com/mrdoob/three.js/issues/18342#issuecomment-578981172\n      var scene = new THREE.Group();\n      if (sceneDef.name) scene.name = sceneDef.name;\n      assignExtrasToUserData(scene, sceneDef);\n      if (sceneDef.extensions) addUnknownExtensionsToUserData(extensions, scene, sceneDef);\n      var nodeIds = sceneDef.nodes || [];\n      var pending = [];\n      for (var i = 0, il = nodeIds.length; i < il; i++) {\n        pending.push(buildNodeHierachy(nodeIds[i], scene, json, parser));\n      }\n      return Promise.all(pending).then(function () {\n        return scene;\n      });\n    };\n  }();\n  return GLTFLoader;\n}();","map":{"version":3,"names":["THREE","GLTFLoader","manager","Loader","call","dracoLoader","ddsLoader","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","scope","resourcePath","path","LoaderUtils","extractUrlBase","itemStart","_onError","e","console","error","itemError","itemEnd","loader","FileLoader","setPath","setResponseType","crossOrigin","setWithCredentials","data","parse","gltf","setDRACOLoader","setDDSLoader","content","extensions","magic","decodeText","Uint8Array","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","KHR_BINARY_GLTF","GLTFBinaryExtension","json","JSON","asset","undefined","version","Error","extensionsUsed","i","length","extensionName","extensionsRequired","KHR_LIGHTS_PUNCTUAL","GLTFLightsExtension","KHR_MATERIALS_UNLIT","GLTFMaterialsUnlitExtension","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","GLTFMaterialsPbrSpecularGlossinessExtension","KHR_DRACO_MESH_COMPRESSION","GLTFDracoMeshCompressionExtension","MSFT_TEXTURE_DDS","GLTFTextureDDSExtension","KHR_TEXTURE_TRANSFORM","GLTFTextureTransformExtension","KHR_MESH_QUANTIZATION","GLTFMeshQuantizationExtension","indexOf","warn","parser","GLTFParser","GLTFRegistry","objects","get","key","add","object","remove","removeAll","name","extension","lightDefs","lights","loadLight","lightIndex","lightDef","lightNode","color","Color","fromArray","range","type","DirectionalLight","target","position","set","PointLight","distance","SpotLight","spot","innerConeAngle","outerConeAngle","Math","PI","angle","penumbra","decay","intensity","Promise","resolve","getMaterialType","MeshBasicMaterial","extendParams","materialParams","materialDef","pending","opacity","metallicRoughness","pbrMetallicRoughness","Array","isArray","baseColorFactor","array","baseColorTexture","push","assignTexture","all","BINARY_EXTENSION_HEADER_LENGTH","BINARY_EXTENSION_CHUNK_TYPES","BIN","body","headerView","DataView","header","slice","getUint32","chunkView","chunkIndex","byteLength","chunkLength","chunkType","contentArray","byteOffset","preload","decodePrimitive","primitive","bufferViewIndex","bufferView","gltfAttributeMap","attributes","threeAttributeMap","attributeNormalizedMap","attributeTypeMap","attributeName","threeAttributeName","ATTRIBUTES","toLowerCase","accessorDef","accessors","componentType","WEBGL_COMPONENT_TYPES","normalized","getDependency","then","decodeDracoFile","geometry","attribute","extendTexture","texture","transform","clone","offset","rotation","scale","repeat","texCoord","needsUpdate","GLTFMeshStandardSGMaterial","params","MeshStandardMaterial","isGLTFSpecularGlossinessMaterial","specularMapParsFragmentChunk","join","glossinessMapParsFragmentChunk","specularMapFragmentChunk","glossinessMapFragmentChunk","lightPhysicalFragmentChunk","uniforms","specular","value","setHex","glossiness","specularMap","glossinessMap","_extraUniforms","onBeforeCompile","shader","uniformName","fragmentShader","replace","defineProperties","v","defines","USE_GLOSSINESSMAP","USE_ROUGHNESSMAP","metalness","roughness","metalnessMap","roughnessMap","setValues","copy","source","specularGlossinessParams","pbrSpecularGlossiness","diffuseFactor","diffuseTexture","emissive","glossinessFactor","specularFactor","specularGlossinessTexture","specGlossMapDef","createMaterial","material","fog","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","normalMapType","TangentSpaceNormalMap","normalScale","displacementMap","displacementScale","displacementBias","alphaMap","envMap","envMapIntensity","refractionRatio","GLTFCubicSplineInterpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","Interpolant","copySampleValue_","index","result","values","valueSize","beforeStart_","afterEnd_","interpolate_","i1","t0","t","t1","stride","stride2","stride3","td","p","pp","ppp","offset1","offset0","s2","s3","s0","s1","p0","m0","p1","m1","WEBGL_CONSTANTS","FLOAT","FLOAT_MAT3","FLOAT_MAT4","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","LINEAR","REPEAT","SAMPLER_2D","POINTS","LINES","LINE_LOOP","LINE_STRIP","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","UNSIGNED_BYTE","UNSIGNED_SHORT","Int8Array","Int16Array","Uint16Array","Uint32Array","Float32Array","WEBGL_FILTERS","NearestFilter","LinearFilter","NearestMipmapNearestFilter","LinearMipmapNearestFilter","NearestMipmapLinearFilter","LinearMipmapLinearFilter","WEBGL_WRAPPINGS","ClampToEdgeWrapping","MirroredRepeatWrapping","RepeatWrapping","WEBGL_TYPE_SIZES","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","PATH_PROPERTIES","translation","weights","INTERPOLATION","CUBICSPLINE","InterpolateLinear","STEP","InterpolateDiscrete","ALPHA_MODES","OPAQUE","MASK","BLEND","MIME_TYPE_FORMATS","RGBAFormat","RGBFormat","resolveURL","test","createDefaultMaterial","cache","transparent","depthTest","side","FrontSide","addUnknownExtensionsToUserData","knownExtensions","objectDef","userData","gltfExtensions","assignExtrasToUserData","gltfDef","extras","addMorphTargets","targets","hasMorphPosition","hasMorphNormal","il","pendingPositionAccessors","pendingNormalAccessors","pendingAccessor","normal","morphPositions","morphNormals","morphAttributes","morphTargetsRelative","updateMorphTargets","mesh","meshDef","morphTargetInfluences","targetNames","morphTargetDictionary","createPrimitiveKey","primitiveDef","dracoExtension","geometryKey","indices","createAttributesKey","mode","attributesKey","keys","sort","options","primitiveCache","textureLoader","TextureLoader","setCrossOrigin","fileLoader","markDefs","getDependencies","dependencies","scene","scenes","animations","cameras","catch","nodeDefs","nodes","skinDefs","skins","meshDefs","meshes","meshReferences","meshUses","skinIndex","skinLength","joints","isBone","nodeIndex","nodeLength","nodeDef","skin","isSkinnedMesh","cacheKey","dependency","loadScene","loadNode","loadMesh","loadAccessor","loadBufferView","loadBuffer","loadMaterial","loadTexture","loadSkin","loadAnimation","loadCamera","defs","def","bufferIndex","bufferDef","buffers","uri","reject","bufferViewDef","bufferViews","buffer","accessorIndex","sparse","pendingBufferViews","itemSize","TypedArray","elementBytes","BYTES_PER_ELEMENT","itemBytes","byteStride","bufferAttribute","ibSlice","floor","ibCacheKey","count","ib","InterleavedBuffer","InterleavedBufferAttribute","BufferAttribute","itemSizeIndices","SCALAR","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","setX","setY","setZ","setW","textureIndex","URL","window","webkitURL","textureDef","textures","textureExtensions","images","sourceURI","isObjectURL","blob","Blob","mimeType","createObjectURL","getHandler","revokeObjectURL","flipY","format","samplers","sampler","magFilter","minFilter","wrapS","wrapT","mapName","mapDef","isCompressedTexture","assignFinalMaterial","useVertexTangents","tangent","useVertexColors","useFlatShading","useSkinning","useMorphTargets","useMorphNormals","isPoints","uuid","pointsMaterial","PointsMaterial","Material","sizeAttenuation","isLine","lineMaterial","LineBasicMaterial","cachedMaterial","skinning","vertexTangents","vertexColors","flatShading","morphTargets","uv2","uv","setAttribute","y","materialIndex","materials","materialType","materialExtensions","sgExtension","kmuExtension","metallicFactor","roughnessFactor","metallicRoughnessTexture","doubleSided","DoubleSide","alphaMode","alphaTest","alphaCutoff","normalTexture","Vector2","occlusionTexture","strength","emissiveFactor","emissiveTexture","encoding","sRGBEncoding","computeBounds","box","Box3","accessor","min","max","Vector3","vector","abs","expandByVector","boundingBox","sphere","Sphere","getCenter","center","radius","distanceTo","boundingSphere","addPrimitiveAttributes","assignAttributeAccessor","gltfAttributeName","setIndex","toTrianglesDrawMode","drawMode","getIndex","getAttribute","numberOfTriangles","newIndices","TriangleFanDrawMode","getX","newGeometry","loadGeometries","primitives","createDracoPrimitive","cached","promise","geometryPromise","BufferGeometry","meshIndex","results","geometries","SkinnedMesh","Mesh","skinWeight","normalizeSkinWeights","TriangleStripDrawMode","LineSegments","Line","LineLoop","Points","group","Group","cameraIndex","camera","cameraDef","PerspectiveCamera","MathUtils","radToDeg","yfov","aspectRatio","znear","zfar","OrthographicCamera","xmag","ymag","skinDef","skinEntry","inverseBindMatrices","animationIndex","animationDef","pendingNodes","pendingInputAccessors","pendingOutputAccessors","pendingSamplers","pendingTargets","channels","channel","node","id","input","parameters","output","inputAccessors","outputAccessors","tracks","inputAccessor","outputAccessor","updateMatrix","matrixAutoUpdate","TypedKeyframeTrack","NumberKeyframeTrack","QuaternionKeyframeTrack","VectorKeyframeTrack","targetName","interpolation","traverse","isMesh","outputArray","scaled","j","jl","track","createInterpolant","InterpolantFactoryMethodGLTFCubicSpline","times","getValueSize","isInterpolantFactoryMethodGLTFCubicSpline","AnimationClip","instanceNum","o","light","Bone","Object3D","PropertyBinding","sanitizeNodeName","matrix","Matrix4","applyMatrix4","quaternion","buildNodeHierachy","nodeId","parentObject","pendingJoints","jointNodes","bones","boneInverses","jointNode","mat","bind","Skeleton","matrixWorld","children","child","sceneIndex","sceneDef","nodeIds"],"sources":["/Users/rahilshaik/parch/par.ch-web/src/vendor/GLTFLoader.js"],"sourcesContent":["/**\n * @author Rich Tibbett / https://github.com/richtr\n * @author mrdoob / http://mrdoob.com/\n * @author Tony Parisi / http://www.tonyparisi.com/\n * @author Takahiro / https://github.com/takahirox\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nTHREE.GLTFLoader = ( function () {\n\n\tfunction GLTFLoader( manager ) {\n\n\t\tTHREE.Loader.call( this, manager );\n\n\t\tthis.dracoLoader = null;\n\t\tthis.ddsLoader = null;\n\n\t}\n\n\tGLTFLoader.prototype = Object.assign( Object.create( THREE.Loader.prototype ), {\n\n\t\tconstructor: GLTFLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar resourcePath;\n\n\t\t\tif ( this.resourcePath !== '' ) {\n\n\t\t\t\tresourcePath = this.resourcePath;\n\n\t\t\t} else if ( this.path !== '' ) {\n\n\t\t\t\tresourcePath = this.path;\n\n\t\t\t} else {\n\n\t\t\t\tresourcePath = THREE.LoaderUtils.extractUrlBase( url );\n\n\t\t\t}\n\n\t\t\t// Tells the LoadingManager to track an extra item, which resolves after\n\t\t\t// the model is fully loaded. This means the count of items loaded will\n\t\t\t// be incorrect, but ensures manager.onLoad() does not fire early.\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tvar _onError = function ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t};\n\n\t\t\tvar loader = new THREE.FileLoader( scope.manager );\n\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tif ( scope.crossOrigin === 'use-credentials' ) {\n\n\t\t\t\tloader.setWithCredentials( true );\n\n\t\t\t}\n\n\t\t\tloader.load( url, function ( data ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tscope.parse( data, resourcePath, function ( gltf ) {\n\n\t\t\t\t\t\tonLoad( gltf );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}, _onError );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t_onError( e );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, _onError );\n\n\t\t},\n\n\t\tsetDRACOLoader: function ( dracoLoader ) {\n\n\t\t\tthis.dracoLoader = dracoLoader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetDDSLoader: function ( ddsLoader ) {\n\n\t\t\tthis.ddsLoader = ddsLoader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tparse: function ( data, path, onLoad, onError ) {\n\n\t\t\tvar content;\n\t\t\tvar extensions = {};\n\n\t\t\tif ( typeof data === 'string' ) {\n\n\t\t\t\tcontent = data;\n\n\t\t\t} else {\n\n\t\t\t\tvar magic = THREE.LoaderUtils.decodeText( new Uint8Array( data, 0, 4 ) );\n\n\t\t\t\tif ( magic === BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\textensions[ EXTENSIONS.KHR_BINARY_GLTF ] = new GLTFBinaryExtension( data );\n\n\t\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t\tif ( onError ) onError( error );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontent = extensions[ EXTENSIONS.KHR_BINARY_GLTF ].content;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontent = THREE.LoaderUtils.decodeText( new Uint8Array( data ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar json = JSON.parse( content );\n\n\t\t\tif ( json.asset === undefined || json.asset.version[ 0 ] < 2 ) {\n\n\t\t\t\tif ( onError ) onError( new Error( 'THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported.' ) );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( json.extensionsUsed ) {\n\n\t\t\t\tfor ( var i = 0; i < json.extensionsUsed.length; ++ i ) {\n\n\t\t\t\t\tvar extensionName = json.extensionsUsed[ i ];\n\t\t\t\t\tvar extensionsRequired = json.extensionsRequired || [];\n\n\t\t\t\t\tswitch ( extensionName ) {\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_LIGHTS_PUNCTUAL:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFLightsExtension( json );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_UNLIT:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsUnlitExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsPbrSpecularGlossinessExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFDracoMeshCompressionExtension( json, this.dracoLoader );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.MSFT_TEXTURE_DDS:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFTextureDDSExtension( this.ddsLoader );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_TEXTURE_TRANSFORM:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFTextureTransformExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MESH_QUANTIZATION:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMeshQuantizationExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tif ( extensionsRequired.indexOf( extensionName ) >= 0 ) {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar parser = new GLTFParser( json, extensions, {\n\n\t\t\t\tpath: path || this.resourcePath || '',\n\t\t\t\tcrossOrigin: this.crossOrigin,\n\t\t\t\tmanager: this.manager\n\n\t\t\t} );\n\n\t\t\tparser.parse( onLoad, onError );\n\n\t\t}\n\n\t} );\n\n\t/* GLTFREGISTRY */\n\n\tfunction GLTFRegistry() {\n\n\t\tvar objects = {};\n\n\t\treturn\t{\n\n\t\t\tget: function ( key ) {\n\n\t\t\t\treturn objects[ key ];\n\n\t\t\t},\n\n\t\t\tadd: function ( key, object ) {\n\n\t\t\t\tobjects[ key ] = object;\n\n\t\t\t},\n\n\t\t\tremove: function ( key ) {\n\n\t\t\t\tdelete objects[ key ];\n\n\t\t\t},\n\n\t\t\tremoveAll: function () {\n\n\t\t\t\tobjects = {};\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/*********************************/\n\t/********** EXTENSIONS ***********/\n\t/*********************************/\n\n\tvar EXTENSIONS = {\n\t\tKHR_BINARY_GLTF: 'KHR_binary_glTF',\n\t\tKHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n\t\tKHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n\t\tKHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\n\t\tKHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n\t\tKHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\n\t\tKHR_MESH_QUANTIZATION: 'KHR_mesh_quantization',\n\t\tMSFT_TEXTURE_DDS: 'MSFT_texture_dds'\n\t};\n\n\t/**\n\t * DDS Texture Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\n\t *\n\t */\n\tfunction GLTFTextureDDSExtension( ddsLoader ) {\n\n\t\tif ( ! ddsLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Attempting to load .dds texture without importing THREE.DDSLoader' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.MSFT_TEXTURE_DDS;\n\t\tthis.ddsLoader = ddsLoader;\n\n\t}\n\n\t/**\n\t * Punctual Lights Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_lights_punctual\n\t */\n\tfunction GLTFLightsExtension( json ) {\n\n\t\tthis.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\n\n\t\tvar extension = ( json.extensions && json.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ] ) || {};\n\t\tthis.lightDefs = extension.lights || [];\n\n\t}\n\n\tGLTFLightsExtension.prototype.loadLight = function ( lightIndex ) {\n\n\t\tvar lightDef = this.lightDefs[ lightIndex ];\n\t\tvar lightNode;\n\n\t\tvar color = new THREE.Color( 0xffffff );\n\t\tif ( lightDef.color !== undefined ) color.fromArray( lightDef.color );\n\n\t\tvar range = lightDef.range !== undefined ? lightDef.range : 0;\n\n\t\tswitch ( lightDef.type ) {\n\n\t\t\tcase 'directional':\n\t\t\t\tlightNode = new THREE.DirectionalLight( color );\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tcase 'point':\n\t\t\t\tlightNode = new THREE.PointLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\tbreak;\n\n\t\t\tcase 'spot':\n\t\t\t\tlightNode = new THREE.SpotLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\t// Handle spotlight properties.\n\t\t\t\tlightDef.spot = lightDef.spot || {};\n\t\t\t\tlightDef.spot.innerConeAngle = lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\n\t\t\t\tlightDef.spot.outerConeAngle = lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\n\t\t\t\tlightNode.angle = lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".' );\n\n\t\t}\n\n\t\t// Some lights (e.g. spot) default to a position other than the origin. Reset the position\n\t\t// here, because node-level parsing will only override position if explicitly specified.\n\t\tlightNode.position.set( 0, 0, 0 );\n\n\t\tlightNode.decay = 2;\n\n\t\tif ( lightDef.intensity !== undefined ) lightNode.intensity = lightDef.intensity;\n\n\t\tlightNode.name = lightDef.name || ( 'light_' + lightIndex );\n\n\t\treturn Promise.resolve( lightNode );\n\n\t};\n\n\t/**\n\t * Unlit Materials Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit\n\t */\n\tfunction GLTFMaterialsUnlitExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n\n\t}\n\n\tGLTFMaterialsUnlitExtension.prototype.getMaterialType = function () {\n\n\t\treturn THREE.MeshBasicMaterial;\n\n\t};\n\n\tGLTFMaterialsUnlitExtension.prototype.extendParams = function ( materialParams, materialDef, parser ) {\n\n\t\tvar pending = [];\n\n\t\tmaterialParams.color = new THREE.Color( 1.0, 1.0, 1.0 );\n\t\tmaterialParams.opacity = 1.0;\n\n\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness;\n\n\t\tif ( metallicRoughness ) {\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/* BINARY EXTENSION */\n\tvar BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\n\tvar BINARY_EXTENSION_HEADER_LENGTH = 12;\n\tvar BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };\n\n\tfunction GLTFBinaryExtension( data ) {\n\n\t\tthis.name = EXTENSIONS.KHR_BINARY_GLTF;\n\t\tthis.content = null;\n\t\tthis.body = null;\n\n\t\tvar headerView = new DataView( data, 0, BINARY_EXTENSION_HEADER_LENGTH );\n\n\t\tthis.header = {\n\t\t\tmagic: THREE.LoaderUtils.decodeText( new Uint8Array( data.slice( 0, 4 ) ) ),\n\t\t\tversion: headerView.getUint32( 4, true ),\n\t\t\tlength: headerView.getUint32( 8, true )\n\t\t};\n\n\t\tif ( this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported glTF-Binary header.' );\n\n\t\t} else if ( this.header.version < 2.0 ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Legacy binary file detected.' );\n\n\t\t}\n\n\t\tvar chunkView = new DataView( data, BINARY_EXTENSION_HEADER_LENGTH );\n\t\tvar chunkIndex = 0;\n\n\t\twhile ( chunkIndex < chunkView.byteLength ) {\n\n\t\t\tvar chunkLength = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tvar chunkType = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tif ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON ) {\n\n\t\t\t\tvar contentArray = new Uint8Array( data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength );\n\t\t\t\tthis.content = THREE.LoaderUtils.decodeText( contentArray );\n\n\t\t\t} else if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN ) {\n\n\t\t\t\tvar byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n\t\t\t\tthis.body = data.slice( byteOffset, byteOffset + chunkLength );\n\n\t\t\t}\n\n\t\t\t// Clients must ignore chunks with unknown types.\n\n\t\t\tchunkIndex += chunkLength;\n\n\t\t}\n\n\t\tif ( this.content === null ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: JSON content not found.' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * DRACO Mesh Compression Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression\n\t */\n\tfunction GLTFDracoMeshCompressionExtension( json, dracoLoader ) {\n\n\t\tif ( ! dracoLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: No DRACOLoader instance provided.' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n\t\tthis.json = json;\n\t\tthis.dracoLoader = dracoLoader;\n\t\tthis.dracoLoader.preload();\n\n\t}\n\n\tGLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function ( primitive, parser ) {\n\n\t\tvar json = this.json;\n\t\tvar dracoLoader = this.dracoLoader;\n\t\tvar bufferViewIndex = primitive.extensions[ this.name ].bufferView;\n\t\tvar gltfAttributeMap = primitive.extensions[ this.name ].attributes;\n\t\tvar threeAttributeMap = {};\n\t\tvar attributeNormalizedMap = {};\n\t\tvar attributeTypeMap = {};\n\n\t\tfor ( var attributeName in gltfAttributeMap ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tthreeAttributeMap[ threeAttributeName ] = gltfAttributeMap[ attributeName ];\n\n\t\t}\n\n\t\tfor ( attributeName in primitive.attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tif ( gltfAttributeMap[ attributeName ] !== undefined ) {\n\n\t\t\t\tvar accessorDef = json.accessors[ primitive.attributes[ attributeName ] ];\n\t\t\t\tvar componentType = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t\tattributeTypeMap[ threeAttributeName ] = componentType;\n\t\t\t\tattributeNormalizedMap[ threeAttributeName ] = accessorDef.normalized === true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn parser.getDependency( 'bufferView', bufferViewIndex ).then( function ( bufferView ) {\n\n\t\t\treturn new Promise( function ( resolve ) {\n\n\t\t\t\tdracoLoader.decodeDracoFile( bufferView, function ( geometry ) {\n\n\t\t\t\t\tfor ( var attributeName in geometry.attributes ) {\n\n\t\t\t\t\t\tvar attribute = geometry.attributes[ attributeName ];\n\t\t\t\t\t\tvar normalized = attributeNormalizedMap[ attributeName ];\n\n\t\t\t\t\t\tif ( normalized !== undefined ) attribute.normalized = normalized;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve( geometry );\n\n\t\t\t\t}, threeAttributeMap, attributeTypeMap );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Texture Transform Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_transform\n\t */\n\tfunction GLTFTextureTransformExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\n\n\t}\n\n\tGLTFTextureTransformExtension.prototype.extendTexture = function ( texture, transform ) {\n\n\t\ttexture = texture.clone();\n\n\t\tif ( transform.offset !== undefined ) {\n\n\t\t\ttexture.offset.fromArray( transform.offset );\n\n\t\t}\n\n\t\tif ( transform.rotation !== undefined ) {\n\n\t\t\ttexture.rotation = transform.rotation;\n\n\t\t}\n\n\t\tif ( transform.scale !== undefined ) {\n\n\t\t\ttexture.repeat.fromArray( transform.scale );\n\n\t\t}\n\n\t\tif ( transform.texCoord !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Custom UV sets in \"' + this.name + '\" extension not yet supported.' );\n\n\t\t}\n\n\t\ttexture.needsUpdate = true;\n\n\t\treturn texture;\n\n\t};\n\n\t/**\n\t * Specular-Glossiness Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\n\t */\n\n\t/**\n\t * A sub class of THREE.StandardMaterial with some of the functionality\n\t * changed via the `onBeforeCompile` callback\n\t * @pailhead\n\t */\n\n\tfunction GLTFMeshStandardSGMaterial( params ) {\n\n\t\tTHREE.MeshStandardMaterial.call( this );\n\n\t\tthis.isGLTFSpecularGlossinessMaterial = true;\n\n\t\t//various chunks that need replacing\n\t\tvar specularMapParsFragmentChunk = [\n\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t'\tuniform sampler2D specularMap;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar glossinessMapParsFragmentChunk = [\n\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t'\tuniform sampler2D glossinessMap;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar specularMapFragmentChunk = [\n\t\t\t'vec3 specularFactor = specular;',\n\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t'\tvec4 texelSpecular = texture2D( specularMap, vUv );',\n\t\t\t'\ttexelSpecular = sRGBToLinear( texelSpecular );',\n\t\t\t'\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t'\tspecularFactor *= texelSpecular.rgb;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar glossinessMapFragmentChunk = [\n\t\t\t'float glossinessFactor = glossiness;',\n\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t'\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\n\t\t\t'\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t'\tglossinessFactor *= texelGlossiness.a;',\n\t\t\t'#endif'\n\t\t].join( '\\n' );\n\n\t\tvar lightPhysicalFragmentChunk = [\n\t\t\t'PhysicalMaterial material;',\n\t\t\t'material.diffuseColor = diffuseColor.rgb;',\n\t\t\t'vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );',\n\t\t\t'float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );',\n\t\t\t'material.specularRoughness = max( 1.0 - glossinessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.',\n\t\t\t'material.specularRoughness += geometryRoughness;',\n\t\t\t'material.specularRoughness = min( material.specularRoughness, 1.0 );',\n\t\t\t'material.specularColor = specularFactor.rgb;',\n\t\t].join( '\\n' );\n\n\t\tvar uniforms = {\n\t\t\tspecular: { value: new THREE.Color().setHex( 0xffffff ) },\n\t\t\tglossiness: { value: 1 },\n\t\t\tspecularMap: { value: null },\n\t\t\tglossinessMap: { value: null }\n\t\t};\n\n\t\tthis._extraUniforms = uniforms;\n\n\t\t// please see #14031 or #13198 for an alternate approach\n\t\tthis.onBeforeCompile = function ( shader ) {\n\n\t\t\tfor ( var uniformName in uniforms ) {\n\n\t\t\t\tshader.uniforms[ uniformName ] = uniforms[ uniformName ];\n\n\t\t\t}\n\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( 'uniform float roughness;', 'uniform vec3 specular;' );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( 'uniform float metalness;', 'uniform float glossiness;' );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <roughnessmap_pars_fragment>', specularMapParsFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <metalnessmap_pars_fragment>', glossinessMapParsFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <roughnessmap_fragment>', specularMapFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <metalnessmap_fragment>', glossinessMapFragmentChunk );\n\t\t\tshader.fragmentShader = shader.fragmentShader.replace( '#include <lights_physical_fragment>', lightPhysicalFragmentChunk );\n\n\t\t};\n\n\t\t/*eslint-disable*/\n\t\tObject.defineProperties(\n\t\t\tthis,\n\t\t\t{\n\t\t\t\tspecular: {\n\t\t\t\t\tget: function () { return uniforms.specular.value; },\n\t\t\t\t\tset: function ( v ) { uniforms.specular.value = v; }\n\t\t\t\t},\n\t\t\t\tspecularMap: {\n\t\t\t\t\tget: function () { return uniforms.specularMap.value; },\n\t\t\t\t\tset: function ( v ) { uniforms.specularMap.value = v; }\n\t\t\t\t},\n\t\t\t\tglossiness: {\n\t\t\t\t\tget: function () { return uniforms.glossiness.value; },\n\t\t\t\t\tset: function ( v ) { uniforms.glossiness.value = v; }\n\t\t\t\t},\n\t\t\t\tglossinessMap: {\n\t\t\t\t\tget: function () { return uniforms.glossinessMap.value; },\n\t\t\t\t\tset: function ( v ) {\n\n\t\t\t\t\t\tuniforms.glossinessMap.value = v;\n\t\t\t\t\t\t//how about something like this - @pailhead\n\t\t\t\t\t\tif ( v ) {\n\n\t\t\t\t\t\t\tthis.defines.USE_GLOSSINESSMAP = '';\n\t\t\t\t\t\t\t// set USE_ROUGHNESSMAP to enable vUv\n\t\t\t\t\t\t\tthis.defines.USE_ROUGHNESSMAP = '';\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tdelete this.defines.USE_ROUGHNESSMAP;\n\t\t\t\t\t\t\tdelete this.defines.USE_GLOSSINESSMAP;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\t/*eslint-enable*/\n\t\tdelete this.metalness;\n\t\tdelete this.roughness;\n\t\tdelete this.metalnessMap;\n\t\tdelete this.roughnessMap;\n\n\t\tthis.setValues( params );\n\n\t}\n\n\tGLTFMeshStandardSGMaterial.prototype = Object.create( THREE.MeshStandardMaterial.prototype );\n\tGLTFMeshStandardSGMaterial.prototype.constructor = GLTFMeshStandardSGMaterial;\n\n\tGLTFMeshStandardSGMaterial.prototype.copy = function ( source ) {\n\n\t\tTHREE.MeshStandardMaterial.prototype.copy.call( this, source );\n\t\tthis.specularMap = source.specularMap;\n\t\tthis.specular.copy( source.specular );\n\t\tthis.glossinessMap = source.glossinessMap;\n\t\tthis.glossiness = source.glossiness;\n\t\tdelete this.metalness;\n\t\tdelete this.roughness;\n\t\tdelete this.metalnessMap;\n\t\tdelete this.roughnessMap;\n\t\treturn this;\n\n\t};\n\n\tfunction GLTFMaterialsPbrSpecularGlossinessExtension() {\n\n\t\treturn {\n\n\t\t\tname: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\n\n\t\t\tspecularGlossinessParams: [\n\t\t\t\t'color',\n\t\t\t\t'map',\n\t\t\t\t'lightMap',\n\t\t\t\t'lightMapIntensity',\n\t\t\t\t'aoMap',\n\t\t\t\t'aoMapIntensity',\n\t\t\t\t'emissive',\n\t\t\t\t'emissiveIntensity',\n\t\t\t\t'emissiveMap',\n\t\t\t\t'bumpMap',\n\t\t\t\t'bumpScale',\n\t\t\t\t'normalMap',\n\t\t\t\t'normalMapType',\n\t\t\t\t'displacementMap',\n\t\t\t\t'displacementScale',\n\t\t\t\t'displacementBias',\n\t\t\t\t'specularMap',\n\t\t\t\t'specular',\n\t\t\t\t'glossinessMap',\n\t\t\t\t'glossiness',\n\t\t\t\t'alphaMap',\n\t\t\t\t'envMap',\n\t\t\t\t'envMapIntensity',\n\t\t\t\t'refractionRatio',\n\t\t\t],\n\n\t\t\tgetMaterialType: function () {\n\n\t\t\t\treturn GLTFMeshStandardSGMaterial;\n\n\t\t\t},\n\n\t\t\textendParams: function ( materialParams, materialDef, parser ) {\n\n\t\t\t\tvar pbrSpecularGlossiness = materialDef.extensions[ this.name ];\n\n\t\t\t\tmaterialParams.color = new THREE.Color( 1.0, 1.0, 1.0 );\n\t\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.diffuseFactor ) ) {\n\n\t\t\t\t\tvar array = pbrSpecularGlossiness.diffuseFactor;\n\n\t\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.diffuseTexture !== undefined ) {\n\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', pbrSpecularGlossiness.diffuseTexture ) );\n\n\t\t\t\t}\n\n\t\t\t\tmaterialParams.emissive = new THREE.Color( 0.0, 0.0, 0.0 );\n\t\t\t\tmaterialParams.glossiness = pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\n\t\t\t\tmaterialParams.specular = new THREE.Color( 1.0, 1.0, 1.0 );\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.specularFactor ) ) {\n\n\t\t\t\t\tmaterialParams.specular.fromArray( pbrSpecularGlossiness.specularFactor );\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.specularGlossinessTexture !== undefined ) {\n\n\t\t\t\t\tvar specGlossMapDef = pbrSpecularGlossiness.specularGlossinessTexture;\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'glossinessMap', specGlossMapDef ) );\n\t\t\t\t\tpending.push( parser.assignTexture( materialParams, 'specularMap', specGlossMapDef ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t},\n\n\t\t\tcreateMaterial: function ( materialParams ) {\n\n\t\t\t\tvar material = new GLTFMeshStandardSGMaterial( materialParams );\n\t\t\t\tmaterial.fog = true;\n\n\t\t\t\tmaterial.color = materialParams.color;\n\n\t\t\t\tmaterial.map = materialParams.map === undefined ? null : materialParams.map;\n\n\t\t\t\tmaterial.lightMap = null;\n\t\t\t\tmaterial.lightMapIntensity = 1.0;\n\n\t\t\t\tmaterial.aoMap = materialParams.aoMap === undefined ? null : materialParams.aoMap;\n\t\t\t\tmaterial.aoMapIntensity = 1.0;\n\n\t\t\t\tmaterial.emissive = materialParams.emissive;\n\t\t\t\tmaterial.emissiveIntensity = 1.0;\n\t\t\t\tmaterial.emissiveMap = materialParams.emissiveMap === undefined ? null : materialParams.emissiveMap;\n\n\t\t\t\tmaterial.bumpMap = materialParams.bumpMap === undefined ? null : materialParams.bumpMap;\n\t\t\t\tmaterial.bumpScale = 1;\n\n\t\t\t\tmaterial.normalMap = materialParams.normalMap === undefined ? null : materialParams.normalMap;\n\t\t\t\tmaterial.normalMapType = THREE.TangentSpaceNormalMap;\n\n\t\t\t\tif ( materialParams.normalScale ) material.normalScale = materialParams.normalScale;\n\n\t\t\t\tmaterial.displacementMap = null;\n\t\t\t\tmaterial.displacementScale = 1;\n\t\t\t\tmaterial.displacementBias = 0;\n\n\t\t\t\tmaterial.specularMap = materialParams.specularMap === undefined ? null : materialParams.specularMap;\n\t\t\t\tmaterial.specular = materialParams.specular;\n\n\t\t\t\tmaterial.glossinessMap = materialParams.glossinessMap === undefined ? null : materialParams.glossinessMap;\n\t\t\t\tmaterial.glossiness = materialParams.glossiness;\n\n\t\t\t\tmaterial.alphaMap = null;\n\n\t\t\t\tmaterial.envMap = materialParams.envMap === undefined ? null : materialParams.envMap;\n\t\t\t\tmaterial.envMapIntensity = 1.0;\n\n\t\t\t\tmaterial.refractionRatio = 0.98;\n\n\t\t\t\treturn material;\n\n\t\t\t},\n\n\t\t};\n\n\t}\n\n\t/**\n\t * Mesh Quantization Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_mesh_quantization\n\t */\n\tfunction GLTFMeshQuantizationExtension() {\n\n\t\tthis.name = EXTENSIONS.KHR_MESH_QUANTIZATION;\n\n\t}\n\n\t/*********************************/\n\t/********** INTERPOLATION ********/\n\t/*********************************/\n\n\t// Spline Interpolation\n\t// Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\n\tfunction GLTFCubicSplineInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tTHREE.Interpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tGLTFCubicSplineInterpolant.prototype = Object.create( THREE.Interpolant.prototype );\n\tGLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\n\n\tGLTFCubicSplineInterpolant.prototype.copySampleValue_ = function ( index ) {\n\n\t\t// Copies a sample value to the result buffer. See description of glTF\n\t\t// CUBICSPLINE values layout in interpolate_() function below.\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tvalueSize = this.valueSize,\n\t\t\toffset = index * valueSize * 3 + valueSize;\n\n\t\tfor ( var i = 0; i !== valueSize; i ++ ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\tGLTFCubicSplineInterpolant.prototype.beforeStart_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.afterEnd_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.interpolate_ = function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer;\n\t\tvar values = this.sampleValues;\n\t\tvar stride = this.valueSize;\n\n\t\tvar stride2 = stride * 2;\n\t\tvar stride3 = stride * 3;\n\n\t\tvar td = t1 - t0;\n\n\t\tvar p = ( t - t0 ) / td;\n\t\tvar pp = p * p;\n\t\tvar ppp = pp * p;\n\n\t\tvar offset1 = i1 * stride3;\n\t\tvar offset0 = offset1 - stride3;\n\n\t\tvar s2 = - 2 * ppp + 3 * pp;\n\t\tvar s3 = ppp - pp;\n\t\tvar s0 = 1 - s2;\n\t\tvar s1 = s3 - pp + p;\n\n\t\t// Layout of keyframe output values for CUBICSPLINE animations:\n\t\t//   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n\t\tfor ( var i = 0; i !== stride; i ++ ) {\n\n\t\t\tvar p0 = values[ offset0 + i + stride ]; // splineVertex_k\n\t\t\tvar m0 = values[ offset0 + i + stride2 ] * td; // outTangent_k * (t_k+1 - t_k)\n\t\t\tvar p1 = values[ offset1 + i + stride ]; // splineVertex_k+1\n\t\t\tvar m1 = values[ offset1 + i ] * td; // inTangent_k+1 * (t_k+1 - t_k)\n\n\t\t\tresult[ i ] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\t/*********************************/\n\t/********** INTERNALS ************/\n\t/*********************************/\n\n\t/* CONSTANTS */\n\n\tvar WEBGL_CONSTANTS = {\n\t\tFLOAT: 5126,\n\t\t//FLOAT_MAT2: 35674,\n\t\tFLOAT_MAT3: 35675,\n\t\tFLOAT_MAT4: 35676,\n\t\tFLOAT_VEC2: 35664,\n\t\tFLOAT_VEC3: 35665,\n\t\tFLOAT_VEC4: 35666,\n\t\tLINEAR: 9729,\n\t\tREPEAT: 10497,\n\t\tSAMPLER_2D: 35678,\n\t\tPOINTS: 0,\n\t\tLINES: 1,\n\t\tLINE_LOOP: 2,\n\t\tLINE_STRIP: 3,\n\t\tTRIANGLES: 4,\n\t\tTRIANGLE_STRIP: 5,\n\t\tTRIANGLE_FAN: 6,\n\t\tUNSIGNED_BYTE: 5121,\n\t\tUNSIGNED_SHORT: 5123\n\t};\n\n\tvar WEBGL_COMPONENT_TYPES = {\n\t\t5120: Int8Array,\n\t\t5121: Uint8Array,\n\t\t5122: Int16Array,\n\t\t5123: Uint16Array,\n\t\t5125: Uint32Array,\n\t\t5126: Float32Array\n\t};\n\n\tvar WEBGL_FILTERS = {\n\t\t9728: THREE.NearestFilter,\n\t\t9729: THREE.LinearFilter,\n\t\t9984: THREE.NearestMipmapNearestFilter,\n\t\t9985: THREE.LinearMipmapNearestFilter,\n\t\t9986: THREE.NearestMipmapLinearFilter,\n\t\t9987: THREE.LinearMipmapLinearFilter\n\t};\n\n\tvar WEBGL_WRAPPINGS = {\n\t\t33071: THREE.ClampToEdgeWrapping,\n\t\t33648: THREE.MirroredRepeatWrapping,\n\t\t10497: THREE.RepeatWrapping\n\t};\n\n\tvar WEBGL_TYPE_SIZES = {\n\t\t'SCALAR': 1,\n\t\t'VEC2': 2,\n\t\t'VEC3': 3,\n\t\t'VEC4': 4,\n\t\t'MAT2': 4,\n\t\t'MAT3': 9,\n\t\t'MAT4': 16\n\t};\n\n\tvar ATTRIBUTES = {\n\t\tPOSITION: 'position',\n\t\tNORMAL: 'normal',\n\t\tTANGENT: 'tangent',\n\t\tTEXCOORD_0: 'uv',\n\t\tTEXCOORD_1: 'uv2',\n\t\tCOLOR_0: 'color',\n\t\tWEIGHTS_0: 'skinWeight',\n\t\tJOINTS_0: 'skinIndex',\n\t};\n\n\tvar PATH_PROPERTIES = {\n\t\tscale: 'scale',\n\t\ttranslation: 'position',\n\t\trotation: 'quaternion',\n\t\tweights: 'morphTargetInfluences'\n\t};\n\n\tvar INTERPOLATION = {\n\t\tCUBICSPLINE: undefined, // We use a custom interpolant (GLTFCubicSplineInterpolation) for CUBICSPLINE tracks. Each\n\t\t                        // keyframe track will be initialized with a default interpolation type, then modified.\n\t\tLINEAR: THREE.InterpolateLinear,\n\t\tSTEP: THREE.InterpolateDiscrete\n\t};\n\n\tvar ALPHA_MODES = {\n\t\tOPAQUE: 'OPAQUE',\n\t\tMASK: 'MASK',\n\t\tBLEND: 'BLEND'\n\t};\n\n\tvar MIME_TYPE_FORMATS = {\n\t\t'image/png': THREE.RGBAFormat,\n\t\t'image/jpeg': THREE.RGBFormat\n\t};\n\n\t/* UTILITY FUNCTIONS */\n\n\tfunction resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n\t */\n\tfunction createDefaultMaterial( cache ) {\n\n\t\tif ( cache[ 'DefaultMaterial' ] === undefined ) {\n\n\t\t\tcache[ 'DefaultMaterial' ] = new THREE.MeshStandardMaterial( {\n\t\t\t\tcolor: 0xFFFFFF,\n\t\t\t\temissive: 0x000000,\n\t\t\t\tmetalness: 1,\n\t\t\t\troughness: 1,\n\t\t\t\ttransparent: false,\n\t\t\t\tdepthTest: true,\n\t\t\t\tside: THREE.FrontSide\n\t\t\t} );\n\n\t\t}\n\n\t\treturn cache[ 'DefaultMaterial' ];\n\n\t}\n\n\tfunction addUnknownExtensionsToUserData( knownExtensions, object, objectDef ) {\n\n\t\t// Add unknown glTF extensions to an object's userData.\n\n\t\tfor ( var name in objectDef.extensions ) {\n\n\t\t\tif ( knownExtensions[ name ] === undefined ) {\n\n\t\t\t\tobject.userData.gltfExtensions = object.userData.gltfExtensions || {};\n\t\t\t\tobject.userData.gltfExtensions[ name ] = objectDef.extensions[ name ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @param {THREE.Object3D|THREE.Material|THREE.BufferGeometry} object\n\t * @param {GLTF.definition} gltfDef\n\t */\n\tfunction assignExtrasToUserData( object, gltfDef ) {\n\n\t\tif ( gltfDef.extras !== undefined ) {\n\n\t\t\tif ( typeof gltfDef.extras === 'object' ) {\n\n\t\t\t\tObject.assign( object.userData, gltfDef.extras );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n\t *\n\t * @param {THREE.BufferGeometry} geometry\n\t * @param {Array<GLTF.Target>} targets\n\t * @param {GLTFParser} parser\n\t * @return {Promise<THREE.BufferGeometry>}\n\t */\n\tfunction addMorphTargets( geometry, targets, parser ) {\n\n\t\tvar hasMorphPosition = false;\n\t\tvar hasMorphNormal = false;\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( target.POSITION !== undefined ) hasMorphPosition = true;\n\t\t\tif ( target.NORMAL !== undefined ) hasMorphNormal = true;\n\n\t\t\tif ( hasMorphPosition && hasMorphNormal ) break;\n\n\t\t}\n\n\t\tif ( ! hasMorphPosition && ! hasMorphNormal ) return Promise.resolve( geometry );\n\n\t\tvar pendingPositionAccessors = [];\n\t\tvar pendingNormalAccessors = [];\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( hasMorphPosition ) {\n\n\t\t\t\tvar pendingAccessor = target.POSITION !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.POSITION )\n\t\t\t\t\t: geometry.attributes.position;\n\n\t\t\t\tpendingPositionAccessors.push( pendingAccessor );\n\n\t\t\t}\n\n\t\t\tif ( hasMorphNormal ) {\n\n\t\t\t\tvar pendingAccessor = target.NORMAL !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.NORMAL )\n\t\t\t\t\t: geometry.attributes.normal;\n\n\t\t\t\tpendingNormalAccessors.push( pendingAccessor );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( [\n\t\t\tPromise.all( pendingPositionAccessors ),\n\t\t\tPromise.all( pendingNormalAccessors )\n\t\t] ).then( function ( accessors ) {\n\n\t\t\tvar morphPositions = accessors[ 0 ];\n\t\t\tvar morphNormals = accessors[ 1 ];\n\n\t\t\tif ( hasMorphPosition ) geometry.morphAttributes.position = morphPositions;\n\t\t\tif ( hasMorphNormal ) geometry.morphAttributes.normal = morphNormals;\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t\treturn geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * @param {THREE.Mesh} mesh\n\t * @param {GLTF.Mesh} meshDef\n\t */\n\tfunction updateMorphTargets( mesh, meshDef ) {\n\n\t\tmesh.updateMorphTargets();\n\n\t\tif ( meshDef.weights !== undefined ) {\n\n\t\t\tfor ( var i = 0, il = meshDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\tmesh.morphTargetInfluences[ i ] = meshDef.weights[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// .extras has user-defined data, so check that .extras.targetNames is an array.\n\t\tif ( meshDef.extras && Array.isArray( meshDef.extras.targetNames ) ) {\n\n\t\t\tvar targetNames = meshDef.extras.targetNames;\n\n\t\t\tif ( mesh.morphTargetInfluences.length === targetNames.length ) {\n\n\t\t\t\tmesh.morphTargetDictionary = {};\n\n\t\t\t\tfor ( var i = 0, il = targetNames.length; i < il; i ++ ) {\n\n\t\t\t\t\tmesh.morphTargetDictionary[ targetNames[ i ] ] = i;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createPrimitiveKey( primitiveDef ) {\n\n\t\tvar dracoExtension = primitiveDef.extensions && primitiveDef.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ];\n\t\tvar geometryKey;\n\n\t\tif ( dracoExtension ) {\n\n\t\t\tgeometryKey = 'draco:' + dracoExtension.bufferView\n\t\t\t\t+ ':' + dracoExtension.indices\n\t\t\t\t+ ':' + createAttributesKey( dracoExtension.attributes );\n\n\t\t} else {\n\n\t\t\tgeometryKey = primitiveDef.indices + ':' + createAttributesKey( primitiveDef.attributes ) + ':' + primitiveDef.mode;\n\n\t\t}\n\n\t\treturn geometryKey;\n\n\t}\n\n\tfunction createAttributesKey( attributes ) {\n\n\t\tvar attributesKey = '';\n\n\t\tvar keys = Object.keys( attributes ).sort();\n\n\t\tfor ( var i = 0, il = keys.length; i < il; i ++ ) {\n\n\t\t\tattributesKey += keys[ i ] + ':' + attributes[ keys[ i ] ] + ';';\n\n\t\t}\n\n\t\treturn attributesKey;\n\n\t}\n\n\t/* GLTF PARSER */\n\n\tfunction GLTFParser( json, extensions, options ) {\n\n\t\tthis.json = json || {};\n\t\tthis.extensions = extensions || {};\n\t\tthis.options = options || {};\n\n\t\t// loader object cache\n\t\tthis.cache = new GLTFRegistry();\n\n\t\t// BufferGeometry caching\n\t\tthis.primitiveCache = {};\n\n\t\tthis.textureLoader = new THREE.TextureLoader( this.options.manager );\n\t\tthis.textureLoader.setCrossOrigin( this.options.crossOrigin );\n\n\t\tthis.fileLoader = new THREE.FileLoader( this.options.manager );\n\t\tthis.fileLoader.setResponseType( 'arraybuffer' );\n\n\t\tif ( this.options.crossOrigin === 'use-credentials' ) {\n\n\t\t\tthis.fileLoader.setWithCredentials( true );\n\n\t\t}\n\n\t}\n\n\tGLTFParser.prototype.parse = function ( onLoad, onError ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\n\t\t// Clear the loader cache\n\t\tthis.cache.removeAll();\n\n\t\t// Mark the special nodes/meshes in json for efficient parse\n\t\tthis.markDefs();\n\n\t\tPromise.all( [\n\n\t\t\tthis.getDependencies( 'scene' ),\n\t\t\tthis.getDependencies( 'animation' ),\n\t\t\tthis.getDependencies( 'camera' ),\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar result = {\n\t\t\t\tscene: dependencies[ 0 ][ json.scene || 0 ],\n\t\t\t\tscenes: dependencies[ 0 ],\n\t\t\t\tanimations: dependencies[ 1 ],\n\t\t\t\tcameras: dependencies[ 2 ],\n\t\t\t\tasset: json.asset,\n\t\t\t\tparser: parser,\n\t\t\t\tuserData: {}\n\t\t\t};\n\n\t\t\taddUnknownExtensionsToUserData( extensions, result, json );\n\n\t\t\tassignExtrasToUserData( result, json );\n\n\t\t\tonLoad( result );\n\n\t\t} ).catch( onError );\n\n\t};\n\n\t/**\n\t * Marks the special nodes/meshes in json for efficient parse.\n\t */\n\tGLTFParser.prototype.markDefs = function () {\n\n\t\tvar nodeDefs = this.json.nodes || [];\n\t\tvar skinDefs = this.json.skins || [];\n\t\tvar meshDefs = this.json.meshes || [];\n\n\t\tvar meshReferences = {};\n\t\tvar meshUses = {};\n\n\t\t// Nothing in the node definition indicates whether it is a Bone or an\n\t\t// Object3D. Use the skins' joint references to mark bones.\n\t\tfor ( var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex ++ ) {\n\n\t\t\tvar joints = skinDefs[ skinIndex ].joints;\n\n\t\t\tfor ( var i = 0, il = joints.length; i < il; i ++ ) {\n\n\t\t\t\tnodeDefs[ joints[ i ] ].isBone = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Meshes can (and should) be reused by multiple nodes in a glTF asset. To\n\t\t// avoid having more than one THREE.Mesh with the same name, count\n\t\t// references and rename instances below.\n\t\t//\n\t\t// Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n\t\tfor ( var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex ++ ) {\n\n\t\t\tvar nodeDef = nodeDefs[ nodeIndex ];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tif ( meshReferences[ nodeDef.mesh ] === undefined ) {\n\n\t\t\t\t\tmeshReferences[ nodeDef.mesh ] = meshUses[ nodeDef.mesh ] = 0;\n\n\t\t\t\t}\n\n\t\t\t\tmeshReferences[ nodeDef.mesh ] ++;\n\n\t\t\t\t// Nothing in the mesh definition indicates whether it is\n\t\t\t\t// a SkinnedMesh or Mesh. Use the node's mesh reference\n\t\t\t\t// to mark SkinnedMesh if node has skin.\n\t\t\t\tif ( nodeDef.skin !== undefined ) {\n\n\t\t\t\t\tmeshDefs[ nodeDef.mesh ].isSkinnedMesh = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.json.meshReferences = meshReferences;\n\t\tthis.json.meshUses = meshUses;\n\n\t};\n\n\t/**\n\t * Requests the specified dependency asynchronously, with caching.\n\t * @param {string} type\n\t * @param {number} index\n\t * @return {Promise<THREE.Object3D|THREE.Material|THREE.Texture|THREE.AnimationClip|ArrayBuffer|Object>}\n\t */\n\tGLTFParser.prototype.getDependency = function ( type, index ) {\n\n\t\tvar cacheKey = type + ':' + index;\n\t\tvar dependency = this.cache.get( cacheKey );\n\n\t\tif ( ! dependency ) {\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'scene':\n\t\t\t\t\tdependency = this.loadScene( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'node':\n\t\t\t\t\tdependency = this.loadNode( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'mesh':\n\t\t\t\t\tdependency = this.loadMesh( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'accessor':\n\t\t\t\t\tdependency = this.loadAccessor( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bufferView':\n\t\t\t\t\tdependency = this.loadBufferView( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'buffer':\n\t\t\t\t\tdependency = this.loadBuffer( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'material':\n\t\t\t\t\tdependency = this.loadMaterial( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'texture':\n\t\t\t\t\tdependency = this.loadTexture( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'skin':\n\t\t\t\t\tdependency = this.loadSkin( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'animation':\n\t\t\t\t\tdependency = this.loadAnimation( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'camera':\n\t\t\t\t\tdependency = this.loadCamera( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'light':\n\t\t\t\t\tdependency = this.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].loadLight( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'Unknown type: ' + type );\n\n\t\t\t}\n\n\t\t\tthis.cache.add( cacheKey, dependency );\n\n\t\t}\n\n\t\treturn dependency;\n\n\t};\n\n\t/**\n\t * Requests all dependencies of the specified type asynchronously, with caching.\n\t * @param {string} type\n\t * @return {Promise<Array<Object>>}\n\t */\n\tGLTFParser.prototype.getDependencies = function ( type ) {\n\n\t\tvar dependencies = this.cache.get( type );\n\n\t\tif ( ! dependencies ) {\n\n\t\t\tvar parser = this;\n\t\t\tvar defs = this.json[ type + ( type === 'mesh' ? 'es' : 's' ) ] || [];\n\n\t\t\tdependencies = Promise.all( defs.map( function ( def, index ) {\n\n\t\t\t\treturn parser.getDependency( type, index );\n\n\t\t\t} ) );\n\n\t\t\tthis.cache.add( type, dependencies );\n\n\t\t}\n\n\t\treturn dependencies;\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBuffer = function ( bufferIndex ) {\n\n\t\tvar bufferDef = this.json.buffers[ bufferIndex ];\n\t\tvar loader = this.fileLoader;\n\n\t\tif ( bufferDef.type && bufferDef.type !== 'arraybuffer' ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.' );\n\n\t\t}\n\n\t\t// If present, GLB container is required to be the first buffer.\n\t\tif ( bufferDef.uri === undefined && bufferIndex === 0 ) {\n\n\t\t\treturn Promise.resolve( this.extensions[ EXTENSIONS.KHR_BINARY_GLTF ].body );\n\n\t\t}\n\n\t\tvar options = this.options;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tloader.load( resolveURL( bufferDef.uri, options.path ), resolve, undefined, function () {\n\n\t\t\t\treject( new Error( 'THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".' ) );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferViewIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBufferView = function ( bufferViewIndex ) {\n\n\t\tvar bufferViewDef = this.json.bufferViews[ bufferViewIndex ];\n\n\t\treturn this.getDependency( 'buffer', bufferViewDef.buffer ).then( function ( buffer ) {\n\n\t\t\tvar byteLength = bufferViewDef.byteLength || 0;\n\t\t\tvar byteOffset = bufferViewDef.byteOffset || 0;\n\t\t\treturn buffer.slice( byteOffset, byteOffset + byteLength );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n\t * @param {number} accessorIndex\n\t * @return {Promise<THREE.BufferAttribute|THREE.InterleavedBufferAttribute>}\n\t */\n\tGLTFParser.prototype.loadAccessor = function ( accessorIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar accessorDef = this.json.accessors[ accessorIndex ];\n\n\t\tif ( accessorDef.bufferView === undefined && accessorDef.sparse === undefined ) {\n\n\t\t\t// Ignore empty accessors, which may be used to declare runtime\n\t\t\t// information about attributes coming from another source (e.g. Draco\n\t\t\t// compression extension).\n\t\t\treturn Promise.resolve( null );\n\n\t\t}\n\n\t\tvar pendingBufferViews = [];\n\n\t\tif ( accessorDef.bufferView !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.bufferView ) );\n\n\t\t} else {\n\n\t\t\tpendingBufferViews.push( null );\n\n\t\t}\n\n\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.indices.bufferView ) );\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.values.bufferView ) );\n\n\t\t}\n\n\t\treturn Promise.all( pendingBufferViews ).then( function ( bufferViews ) {\n\n\t\t\tvar bufferView = bufferViews[ 0 ];\n\n\t\t\tvar itemSize = WEBGL_TYPE_SIZES[ accessorDef.type ];\n\t\t\tvar TypedArray = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t// For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n\t\t\tvar elementBytes = TypedArray.BYTES_PER_ELEMENT;\n\t\t\tvar itemBytes = elementBytes * itemSize;\n\t\t\tvar byteOffset = accessorDef.byteOffset || 0;\n\t\t\tvar byteStride = accessorDef.bufferView !== undefined ? json.bufferViews[ accessorDef.bufferView ].byteStride : undefined;\n\t\t\tvar normalized = accessorDef.normalized === true;\n\t\t\tvar array, bufferAttribute;\n\n\t\t\t// The buffer is not interleaved if the stride is the item size in bytes.\n\t\t\tif ( byteStride && byteStride !== itemBytes ) {\n\n\t\t\t\t// Each \"slice\" of the buffer, as defined by 'count' elements of 'byteStride' bytes, gets its own InterleavedBuffer\n\t\t\t\t// This makes sure that IBA.count reflects accessor.count properly\n\t\t\t\tvar ibSlice = Math.floor( byteOffset / byteStride );\n\t\t\t\tvar ibCacheKey = 'InterleavedBuffer:' + accessorDef.bufferView + ':' + accessorDef.componentType + ':' + ibSlice + ':' + accessorDef.count;\n\t\t\t\tvar ib = parser.cache.get( ibCacheKey );\n\n\t\t\t\tif ( ! ib ) {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, ibSlice * byteStride, accessorDef.count * byteStride / elementBytes );\n\n\t\t\t\t\t// Integer parameters to IB/IBA are in array elements, not bytes.\n\t\t\t\t\tib = new THREE.InterleavedBuffer( array, byteStride / elementBytes );\n\n\t\t\t\t\tparser.cache.add( ibCacheKey, ib );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new THREE.InterleavedBufferAttribute( ib, itemSize, ( byteOffset % byteStride ) / elementBytes, normalized );\n\n\t\t\t} else {\n\n\t\t\t\tif ( bufferView === null ) {\n\n\t\t\t\t\tarray = new TypedArray( accessorDef.count * itemSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, byteOffset, accessorDef.count * itemSize );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new THREE.BufferAttribute( array, itemSize, normalized );\n\n\t\t\t}\n\n\t\t\t// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n\t\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\t\tvar itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n\t\t\t\tvar TypedArrayIndices = WEBGL_COMPONENT_TYPES[ accessorDef.sparse.indices.componentType ];\n\n\t\t\t\tvar byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n\t\t\t\tvar byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n\n\t\t\t\tvar sparseIndices = new TypedArrayIndices( bufferViews[ 1 ], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices );\n\t\t\t\tvar sparseValues = new TypedArray( bufferViews[ 2 ], byteOffsetValues, accessorDef.sparse.count * itemSize );\n\n\t\t\t\tif ( bufferView !== null ) {\n\n\t\t\t\t\t// Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n\t\t\t\t\tbufferAttribute = new THREE.BufferAttribute( bufferAttribute.array.slice(), bufferAttribute.itemSize, bufferAttribute.normalized );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, il = sparseIndices.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar index = sparseIndices[ i ];\n\n\t\t\t\t\tbufferAttribute.setX( index, sparseValues[ i * itemSize ] );\n\t\t\t\t\tif ( itemSize >= 2 ) bufferAttribute.setY( index, sparseValues[ i * itemSize + 1 ] );\n\t\t\t\t\tif ( itemSize >= 3 ) bufferAttribute.setZ( index, sparseValues[ i * itemSize + 2 ] );\n\t\t\t\t\tif ( itemSize >= 4 ) bufferAttribute.setW( index, sparseValues[ i * itemSize + 3 ] );\n\t\t\t\t\tif ( itemSize >= 5 ) throw new Error( 'THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn bufferAttribute;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n\t * @param {number} textureIndex\n\t * @return {Promise<THREE.Texture>}\n\t */\n\tGLTFParser.prototype.loadTexture = function ( textureIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar options = this.options;\n\t\tvar textureLoader = this.textureLoader;\n\n\t\tvar URL = window.URL || window.webkitURL;\n\n\t\tvar textureDef = json.textures[ textureIndex ];\n\n\t\tvar textureExtensions = textureDef.extensions || {};\n\n\t\tvar source;\n\n\t\tif ( textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ] ) {\n\n\t\t\tsource = json.images[ textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].source ];\n\n\t\t} else {\n\n\t\t\tsource = json.images[ textureDef.source ];\n\n\t\t}\n\n\t\tvar sourceURI = source.uri;\n\t\tvar isObjectURL = false;\n\n\t\tif ( source.bufferView !== undefined ) {\n\n\t\t\t// Load binary image data from bufferView, if provided.\n\n\t\t\tsourceURI = parser.getDependency( 'bufferView', source.bufferView ).then( function ( bufferView ) {\n\n\t\t\t\tisObjectURL = true;\n\t\t\t\tvar blob = new Blob( [ bufferView ], { type: source.mimeType } );\n\t\t\t\tsourceURI = URL.createObjectURL( blob );\n\t\t\t\treturn sourceURI;\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn Promise.resolve( sourceURI ).then( function ( sourceURI ) {\n\n\t\t\t// Load Texture resource.\n\n\t\t\tvar loader = options.manager.getHandler( sourceURI );\n\n\t\t\tif ( ! loader ) {\n\n\t\t\t\tloader = textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ]\n\t\t\t\t\t? parser.extensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].ddsLoader\n\t\t\t\t\t: textureLoader;\n\n\t\t\t}\n\n\t\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\t\tloader.load( resolveURL( sourceURI, options.path ), resolve, undefined, reject );\n\n\t\t\t} );\n\n\t\t} ).then( function ( texture ) {\n\n\t\t\t// Clean up resources and configure Texture.\n\n\t\t\tif ( isObjectURL === true ) {\n\n\t\t\t\tURL.revokeObjectURL( sourceURI );\n\n\t\t\t}\n\n\t\t\ttexture.flipY = false;\n\n\t\t\tif ( textureDef.name ) texture.name = textureDef.name;\n\n\t\t\t// Ignore unknown mime types, like DDS files.\n\t\t\tif ( source.mimeType in MIME_TYPE_FORMATS ) {\n\n\t\t\t\ttexture.format = MIME_TYPE_FORMATS[ source.mimeType ];\n\n\t\t\t}\n\n\t\t\tvar samplers = json.samplers || {};\n\t\t\tvar sampler = samplers[ textureDef.sampler ] || {};\n\n\t\t\ttexture.magFilter = WEBGL_FILTERS[ sampler.magFilter ] || THREE.LinearFilter;\n\t\t\ttexture.minFilter = WEBGL_FILTERS[ sampler.minFilter ] || THREE.LinearMipmapLinearFilter;\n\t\t\ttexture.wrapS = WEBGL_WRAPPINGS[ sampler.wrapS ] || THREE.RepeatWrapping;\n\t\t\ttexture.wrapT = WEBGL_WRAPPINGS[ sampler.wrapT ] || THREE.RepeatWrapping;\n\n\t\t\treturn texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Asynchronously assigns a texture to the given material parameters.\n\t * @param {Object} materialParams\n\t * @param {string} mapName\n\t * @param {Object} mapDef\n\t * @return {Promise}\n\t */\n\tGLTFParser.prototype.assignTexture = function ( materialParams, mapName, mapDef ) {\n\n\t\tvar parser = this;\n\n\t\treturn this.getDependency( 'texture', mapDef.index ).then( function ( texture ) {\n\n\t\t\tif ( ! texture.isCompressedTexture ) {\n\n\t\t\t\tswitch ( mapName ) {\n\n\t\t\t\t\tcase 'aoMap':\n\t\t\t\t\tcase 'emissiveMap':\n\t\t\t\t\tcase 'metalnessMap':\n\t\t\t\t\tcase 'normalMap':\n\t\t\t\t\tcase 'roughnessMap':\n\t\t\t\t\t\ttexture.format = THREE.RGBFormat;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Materials sample aoMap from UV set 1 and other maps from UV set 0 - this can't be configured\n\t\t\t// However, we will copy UV set 0 to UV set 1 on demand for aoMap\n\t\t\tif ( mapDef.texCoord !== undefined && mapDef.texCoord != 0 && ! ( mapName === 'aoMap' && mapDef.texCoord == 1 ) ) {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Custom UV set ' + mapDef.texCoord + ' for texture ' + mapName + ' not yet supported.' );\n\n\t\t\t}\n\n\t\t\tif ( parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] ) {\n\n\t\t\t\tvar transform = mapDef.extensions !== undefined ? mapDef.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] : undefined;\n\n\t\t\t\tif ( transform ) {\n\n\t\t\t\t\ttexture = parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ].extendTexture( texture, transform );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmaterialParams[ mapName ] = texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Assigns final material to a Mesh, Line, or Points instance. The instance\n\t * already has a material (generated from the glTF material options alone)\n\t * but reuse of the same glTF material may require multiple threejs materials\n\t * to accomodate different primitive types, defines, etc. New materials will\n\t * be created if necessary, and reused from a cache.\n\t * @param  {THREE.Object3D} mesh Mesh, Line, or Points instance.\n\t */\n\tGLTFParser.prototype.assignFinalMaterial = function ( mesh ) {\n\n\t\tvar geometry = mesh.geometry;\n\t\tvar material = mesh.material;\n\t\tvar extensions = this.extensions;\n\n\t\tvar useVertexTangents = geometry.attributes.tangent !== undefined;\n\t\tvar useVertexColors = geometry.attributes.color !== undefined;\n\t\tvar useFlatShading = geometry.attributes.normal === undefined;\n\t\tvar useSkinning = mesh.isSkinnedMesh === true;\n\t\tvar useMorphTargets = Object.keys( geometry.morphAttributes ).length > 0;\n\t\tvar useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined;\n\n\t\tif ( mesh.isPoints ) {\n\n\t\t\tvar cacheKey = 'PointsMaterial:' + material.uuid;\n\n\t\t\tvar pointsMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! pointsMaterial ) {\n\n\t\t\t\tpointsMaterial = new THREE.PointsMaterial();\n\t\t\t\tTHREE.Material.prototype.copy.call( pointsMaterial, material );\n\t\t\t\tpointsMaterial.color.copy( material.color );\n\t\t\t\tpointsMaterial.map = material.map;\n\t\t\t\tpointsMaterial.sizeAttenuation = false; // glTF spec says points should be 1px\n\n\t\t\t\tthis.cache.add( cacheKey, pointsMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = pointsMaterial;\n\n\t\t} else if ( mesh.isLine ) {\n\n\t\t\tvar cacheKey = 'LineBasicMaterial:' + material.uuid;\n\n\t\t\tvar lineMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! lineMaterial ) {\n\n\t\t\t\tlineMaterial = new THREE.LineBasicMaterial();\n\t\t\t\tTHREE.Material.prototype.copy.call( lineMaterial, material );\n\t\t\t\tlineMaterial.color.copy( material.color );\n\n\t\t\t\tthis.cache.add( cacheKey, lineMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = lineMaterial;\n\n\t\t}\n\n\t\t// Clone the material if it will be modified\n\t\tif ( useVertexTangents || useVertexColors || useFlatShading || useSkinning || useMorphTargets ) {\n\n\t\t\tvar cacheKey = 'ClonedMaterial:' + material.uuid + ':';\n\n\t\t\tif ( material.isGLTFSpecularGlossinessMaterial ) cacheKey += 'specular-glossiness:';\n\t\t\tif ( useSkinning ) cacheKey += 'skinning:';\n\t\t\tif ( useVertexTangents ) cacheKey += 'vertex-tangents:';\n\t\t\tif ( useVertexColors ) cacheKey += 'vertex-colors:';\n\t\t\tif ( useFlatShading ) cacheKey += 'flat-shading:';\n\t\t\tif ( useMorphTargets ) cacheKey += 'morph-targets:';\n\t\t\tif ( useMorphNormals ) cacheKey += 'morph-normals:';\n\n\t\t\tvar cachedMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! cachedMaterial ) {\n\n\t\t\t\tcachedMaterial = material.clone();\n\n\t\t\t\tif ( useSkinning ) cachedMaterial.skinning = true;\n\t\t\t\tif ( useVertexTangents ) cachedMaterial.vertexTangents = true;\n\t\t\t\tif ( useVertexColors ) cachedMaterial.vertexColors = true;\n\t\t\t\tif ( useFlatShading ) cachedMaterial.flatShading = true;\n\t\t\t\tif ( useMorphTargets ) cachedMaterial.morphTargets = true;\n\t\t\t\tif ( useMorphNormals ) cachedMaterial.morphNormals = true;\n\n\t\t\t\tthis.cache.add( cacheKey, cachedMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = cachedMaterial;\n\n\t\t}\n\n\t\t// workarounds for mesh and geometry\n\n\t\tif ( material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined ) {\n\n\t\t\tgeometry.setAttribute( 'uv2', new THREE.BufferAttribute( geometry.attributes.uv.array, 2 ) );\n\n\t\t}\n\n\t\t// https://github.com/mrdoob/three.js/issues/11438#issuecomment-507003995\n\t\tif ( material.normalScale && ! useVertexTangents ) {\n\n\t\t\tmaterial.normalScale.y = - material.normalScale.y;\n\n\t\t}\n\n\t\tmesh.material = material;\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n\t * @param {number} materialIndex\n\t * @return {Promise<THREE.Material>}\n\t */\n\tGLTFParser.prototype.loadMaterial = function ( materialIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar materialDef = json.materials[ materialIndex ];\n\n\t\tvar materialType;\n\t\tvar materialParams = {};\n\t\tvar materialExtensions = materialDef.extensions || {};\n\n\t\tvar pending = [];\n\n\t\tif ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ] ) {\n\n\t\t\tvar sgExtension = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ];\n\t\t\tmaterialType = sgExtension.getMaterialType();\n\t\t\tpending.push( sgExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else if ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ] ) {\n\n\t\t\tvar kmuExtension = extensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ];\n\t\t\tmaterialType = kmuExtension.getMaterialType();\n\t\t\tpending.push( kmuExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else {\n\n\t\t\t// Specification:\n\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n\n\t\t\tmaterialType = THREE.MeshStandardMaterial;\n\n\t\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness || {};\n\n\t\t\tmaterialParams.color = new THREE.Color( 1.0, 1.0, 1.0 );\n\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t\tmaterialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n\t\t\tmaterialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n\n\t\t\tif ( metallicRoughness.metallicRoughnessTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.doubleSided === true ) {\n\n\t\t\tmaterialParams.side = THREE.DoubleSide;\n\n\t\t}\n\n\t\tvar alphaMode = materialDef.alphaMode;\n\n\t\tif ( alphaMode === ALPHA_MODES.BLEND ) {\n\n\t\t\tmaterialParams.transparent = true;\n\n\t\t} else if ( alphaMode === ALPHA_MODES.MASK ) {\n\n\t\t\tmaterialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n\n\t\t}\n\n\t\tif ( materialDef.normalTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'normalMap', materialDef.normalTexture ) );\n\n\t\t\tmaterialParams.normalScale = new THREE.Vector2( 1, 1 );\n\n\t\t\tif ( materialDef.normalTexture.scale !== undefined ) {\n\n\t\t\t\tmaterialParams.normalScale.set( materialDef.normalTexture.scale, materialDef.normalTexture.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.occlusionTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'aoMap', materialDef.occlusionTexture ) );\n\n\t\t\tif ( materialDef.occlusionTexture.strength !== undefined ) {\n\n\t\t\t\tmaterialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.emissiveFactor !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\tmaterialParams.emissive = new THREE.Color().fromArray( materialDef.emissiveFactor );\n\n\t\t}\n\n\t\tif ( materialDef.emissiveTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'emissiveMap', materialDef.emissiveTexture ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\tvar material;\n\n\t\t\tif ( materialType === GLTFMeshStandardSGMaterial ) {\n\n\t\t\t\tmaterial = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].createMaterial( materialParams );\n\n\t\t\t} else {\n\n\t\t\t\tmaterial = new materialType( materialParams );\n\n\t\t\t}\n\n\t\t\tif ( materialDef.name ) material.name = materialDef.name;\n\n\t\t\t// baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\n\t\t\tif ( material.map ) material.map.encoding = THREE.sRGBEncoding;\n\t\t\tif ( material.emissiveMap ) material.emissiveMap.encoding = THREE.sRGBEncoding;\n\n\t\t\tassignExtrasToUserData( material, materialDef );\n\n\t\t\tif ( materialDef.extensions ) addUnknownExtensionsToUserData( extensions, material, materialDef );\n\n\t\t\treturn material;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * @param {THREE.BufferGeometry} geometry\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {GLTFParser} parser\n\t */\n\tfunction computeBounds( geometry, primitiveDef, parser ) {\n\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tvar box = new THREE.Box3();\n\n\t\tif ( attributes.POSITION !== undefined ) {\n\n\t\t\tvar accessor = parser.json.accessors[ attributes.POSITION ];\n\n\t\t\tvar min = accessor.min;\n\t\t\tvar max = accessor.max;\n\n\t\t\t// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n\t\t\tif ( min !== undefined && max !== undefined ) {\n\n\t\t\t\tbox.set(\n\t\t\t\t\tnew THREE.Vector3( min[ 0 ], min[ 1 ], min[ 2 ] ),\n\t\t\t\t\tnew THREE.Vector3( max[ 0 ], max[ 1 ], max[ 2 ] ) );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing min/max properties for accessor POSITION.' );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar targets = primitiveDef.targets;\n\n\t\tif ( targets !== undefined ) {\n\n\t\t\tvar vector = new THREE.Vector3();\n\n\t\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\tif ( target.POSITION !== undefined ) {\n\n\t\t\t\t\tvar accessor = parser.json.accessors[ target.POSITION ];\n\t\t\t\t\tvar min = accessor.min;\n\t\t\t\t\tvar max = accessor.max;\n\n\t\t\t\t\t// glTF requires 'min' and 'max', but VRM (which extends glTF) currently ignores that requirement.\n\n\t\t\t\t\tif ( min !== undefined && max !== undefined ) {\n\n\t\t\t\t\t\t// we need to get max of absolute components because target weight is [-1,1]\n\t\t\t\t\t\tvector.setX( Math.max( Math.abs( min[ 0 ] ), Math.abs( max[ 0 ] ) ) );\n\t\t\t\t\t\tvector.setY( Math.max( Math.abs( min[ 1 ] ), Math.abs( max[ 1 ] ) ) );\n\t\t\t\t\t\tvector.setZ( Math.max( Math.abs( min[ 2 ] ), Math.abs( max[ 2 ] ) ) );\n\n\t\t\t\t\t\tbox.expandByVector( vector );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing min/max properties for accessor POSITION.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.boundingBox = box;\n\n\t\tvar sphere = new THREE.Sphere();\n\n\t\tbox.getCenter( sphere.center );\n\t\tsphere.radius = box.min.distanceTo( box.max ) / 2;\n\n\t\tgeometry.boundingSphere = sphere;\n\n\t}\n\n\t/**\n\t * @param {THREE.BufferGeometry} geometry\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {GLTFParser} parser\n\t * @return {Promise<THREE.BufferGeometry>}\n\t */\n\tfunction addPrimitiveAttributes( geometry, primitiveDef, parser ) {\n\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tvar pending = [];\n\n\t\tfunction assignAttributeAccessor( accessorIndex, attributeName ) {\n\n\t\t\treturn parser.getDependency( 'accessor', accessorIndex )\n\t\t\t\t.then( function ( accessor ) {\n\n\t\t\t\t\tgeometry.setAttribute( attributeName, accessor );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tfor ( var gltfAttributeName in attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ gltfAttributeName ] || gltfAttributeName.toLowerCase();\n\n\t\t\t// Skip attributes already provided by e.g. Draco extension.\n\t\t\tif ( threeAttributeName in geometry.attributes ) continue;\n\n\t\t\tpending.push( assignAttributeAccessor( attributes[ gltfAttributeName ], threeAttributeName ) );\n\n\t\t}\n\n\t\tif ( primitiveDef.indices !== undefined && ! geometry.index ) {\n\n\t\t\tvar accessor = parser.getDependency( 'accessor', primitiveDef.indices ).then( function ( accessor ) {\n\n\t\t\t\tgeometry.setIndex( accessor );\n\n\t\t\t} );\n\n\t\t\tpending.push( accessor );\n\n\t\t}\n\n\t\tassignExtrasToUserData( geometry, primitiveDef );\n\n\t\tcomputeBounds( geometry, primitiveDef, parser );\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\treturn primitiveDef.targets !== undefined\n\t\t\t\t? addMorphTargets( geometry, primitiveDef.targets, parser )\n\t\t\t\t: geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * @param {THREE.BufferGeometry} geometry\n\t * @param {Number} drawMode\n\t * @return {THREE.BufferGeometry}\n\t */\n\tfunction toTrianglesDrawMode( geometry, drawMode ) {\n\n\t\tvar index = geometry.getIndex();\n\n\t\t// generate index if not present\n\n\t\tif ( index === null ) {\n\n\t\t\tvar indices = [];\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < position.count; i ++ ) {\n\n\t\t\t\t\tindices.push( i );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.setIndex( indices );\n\t\t\t\tindex = geometry.getIndex();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.GLTFLoader.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.' );\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar numberOfTriangles = index.count - 2;\n\t\tvar newIndices = [];\n\n\t\tif ( drawMode === THREE.TriangleFanDrawMode ) {\n\n\t\t\t// gl.TRIANGLE_FAN\n\n\t\t\tfor ( var i = 1; i <= numberOfTriangles; i ++ ) {\n\n\t\t\t\tnewIndices.push( index.getX( 0 ) );\n\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// gl.TRIANGLE_STRIP\n\n\t\t\tfor ( var i = 0; i < numberOfTriangles; i ++ ) {\n\n\t\t\t\tif ( i % 2 === 0 ) {\n\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( ( newIndices.length / 3 ) !== numberOfTriangles ) {\n\n\t\t\tconsole.error( 'THREE.GLTFLoader.toTrianglesDrawMode(): Unable to generate correct amount of triangles.' );\n\n\t\t}\n\n\t\t// build final geometry\n\n\t\tvar newGeometry = geometry.clone();\n\t\tnewGeometry.setIndex( newIndices );\n\n\t\treturn newGeometry;\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n\t *\n\t * Creates BufferGeometries from primitives.\n\t *\n\t * @param {Array<GLTF.Primitive>} primitives\n\t * @return {Promise<Array<THREE.BufferGeometry>>}\n\t */\n\tGLTFParser.prototype.loadGeometries = function ( primitives ) {\n\n\t\tvar parser = this;\n\t\tvar extensions = this.extensions;\n\t\tvar cache = this.primitiveCache;\n\n\t\tfunction createDracoPrimitive( primitive ) {\n\n\t\t\treturn extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ]\n\t\t\t\t.decodePrimitive( primitive, parser )\n\t\t\t\t.then( function ( geometry ) {\n\n\t\t\t\t\treturn addPrimitiveAttributes( geometry, primitive, parser );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar primitive = primitives[ i ];\n\t\t\tvar cacheKey = createPrimitiveKey( primitive );\n\n\t\t\t// See if we've already created this geometry\n\t\t\tvar cached = cache[ cacheKey ];\n\n\t\t\tif ( cached ) {\n\n\t\t\t\t// Use the cached geometry if it exists\n\t\t\t\tpending.push( cached.promise );\n\n\t\t\t} else {\n\n\t\t\t\tvar geometryPromise;\n\n\t\t\t\tif ( primitive.extensions && primitive.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ] ) {\n\n\t\t\t\t\t// Use DRACO geometry if available\n\t\t\t\t\tgeometryPromise = createDracoPrimitive( primitive );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise create a new geometry\n\t\t\t\t\tgeometryPromise = addPrimitiveAttributes( new THREE.BufferGeometry(), primitive, parser );\n\n\t\t\t\t}\n\n\t\t\t\t// Cache this geometry\n\t\t\t\tcache[ cacheKey ] = { primitive: primitive, promise: geometryPromise };\n\n\t\t\t\tpending.push( geometryPromise );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n\t * @param {number} meshIndex\n\t * @return {Promise<THREE.Group|THREE.Mesh|THREE.SkinnedMesh>}\n\t */\n\tGLTFParser.prototype.loadMesh = function ( meshIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar meshDef = json.meshes[ meshIndex ];\n\t\tvar primitives = meshDef.primitives;\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar material = primitives[ i ].material === undefined\n\t\t\t\t? createDefaultMaterial( this.cache )\n\t\t\t\t: this.getDependency( 'material', primitives[ i ].material );\n\n\t\t\tpending.push( material );\n\n\t\t}\n\n\t\tpending.push( parser.loadGeometries( primitives ) );\n\n\t\treturn Promise.all( pending ).then( function ( results ) {\n\n\t\t\tvar materials = results.slice( 0, results.length - 1 );\n\t\t\tvar geometries = results[ results.length - 1 ];\n\n\t\t\tvar meshes = [];\n\n\t\t\tfor ( var i = 0, il = geometries.length; i < il; i ++ ) {\n\n\t\t\t\tvar geometry = geometries[ i ];\n\t\t\t\tvar primitive = primitives[ i ];\n\n\t\t\t\t// 1. create Mesh\n\n\t\t\t\tvar mesh;\n\n\t\t\t\tvar material = materials[ i ];\n\n\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\n\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\n\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\n\t\t\t\t\tprimitive.mode === undefined ) {\n\n\t\t\t\t\t// .isSkinnedMesh isn't in glTF spec. See .markDefs()\n\t\t\t\t\tmesh = meshDef.isSkinnedMesh === true\n\t\t\t\t\t\t? new THREE.SkinnedMesh( geometry, material )\n\t\t\t\t\t\t: new THREE.Mesh( geometry, material );\n\n\t\t\t\t\tif ( mesh.isSkinnedMesh === true && ! mesh.geometry.attributes.skinWeight.normalized ) {\n\n\t\t\t\t\t\t// we normalize floating point skin weight array to fix malformed assets (see #15319)\n\t\t\t\t\t\t// it's important to skip this for non-float32 data since normalizeSkinWeights assumes non-normalized inputs\n\t\t\t\t\t\tmesh.normalizeSkinWeights();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ) {\n\n\t\t\t\t\t\tmesh.geometry = toTrianglesDrawMode( mesh.geometry, THREE.TriangleStripDrawMode );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ) {\n\n\t\t\t\t\t\tmesh.geometry = toTrianglesDrawMode( mesh.geometry, THREE.TriangleFanDrawMode );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINES ) {\n\n\t\t\t\t\tmesh = new THREE.LineSegments( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_STRIP ) {\n\n\t\t\t\t\tmesh = new THREE.Line( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_LOOP ) {\n\n\t\t\t\t\tmesh = new THREE.LineLoop( geometry, material );\n\n\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.POINTS ) {\n\n\t\t\t\t\tmesh = new THREE.Points( geometry, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode );\n\n\t\t\t\t}\n\n\t\t\t\tif ( Object.keys( mesh.geometry.morphAttributes ).length > 0 ) {\n\n\t\t\t\t\tupdateMorphTargets( mesh, meshDef );\n\n\t\t\t\t}\n\n\t\t\t\tmesh.name = meshDef.name || ( 'mesh_' + meshIndex );\n\n\t\t\t\tif ( geometries.length > 1 ) mesh.name += '_' + i;\n\n\t\t\t\tassignExtrasToUserData( mesh, meshDef );\n\n\t\t\t\tparser.assignFinalMaterial( mesh );\n\n\t\t\t\tmeshes.push( mesh );\n\n\t\t\t}\n\n\t\t\tif ( meshes.length === 1 ) {\n\n\t\t\t\treturn meshes[ 0 ];\n\n\t\t\t}\n\n\t\t\tvar group = new THREE.Group();\n\n\t\t\tfor ( var i = 0, il = meshes.length; i < il; i ++ ) {\n\n\t\t\t\tgroup.add( meshes[ i ] );\n\n\t\t\t}\n\n\t\t\treturn group;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n\t * @param {number} cameraIndex\n\t * @return {Promise<THREE.Camera>}\n\t */\n\tGLTFParser.prototype.loadCamera = function ( cameraIndex ) {\n\n\t\tvar camera;\n\t\tvar cameraDef = this.json.cameras[ cameraIndex ];\n\t\tvar params = cameraDef[ cameraDef.type ];\n\n\t\tif ( ! params ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing camera parameters.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( cameraDef.type === 'perspective' ) {\n\n\t\t\tcamera = new THREE.PerspectiveCamera( THREE.MathUtils.radToDeg( params.yfov ), params.aspectRatio || 1, params.znear || 1, params.zfar || 2e6 );\n\n\t\t} else if ( cameraDef.type === 'orthographic' ) {\n\n\t\t\tcamera = new THREE.OrthographicCamera( params.xmag / - 2, params.xmag / 2, params.ymag / 2, params.ymag / - 2, params.znear, params.zfar );\n\n\t\t}\n\n\t\tif ( cameraDef.name ) camera.name = cameraDef.name;\n\n\t\tassignExtrasToUserData( camera, cameraDef );\n\n\t\treturn Promise.resolve( camera );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n\t * @param {number} skinIndex\n\t * @return {Promise<Object>}\n\t */\n\tGLTFParser.prototype.loadSkin = function ( skinIndex ) {\n\n\t\tvar skinDef = this.json.skins[ skinIndex ];\n\n\t\tvar skinEntry = { joints: skinDef.joints };\n\n\t\tif ( skinDef.inverseBindMatrices === undefined ) {\n\n\t\t\treturn Promise.resolve( skinEntry );\n\n\t\t}\n\n\t\treturn this.getDependency( 'accessor', skinDef.inverseBindMatrices ).then( function ( accessor ) {\n\n\t\t\tskinEntry.inverseBindMatrices = accessor;\n\n\t\t\treturn skinEntry;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n\t * @param {number} animationIndex\n\t * @return {Promise<THREE.AnimationClip>}\n\t */\n\tGLTFParser.prototype.loadAnimation = function ( animationIndex ) {\n\n\t\tvar json = this.json;\n\n\t\tvar animationDef = json.animations[ animationIndex ];\n\n\t\tvar pendingNodes = [];\n\t\tvar pendingInputAccessors = [];\n\t\tvar pendingOutputAccessors = [];\n\t\tvar pendingSamplers = [];\n\t\tvar pendingTargets = [];\n\n\t\tfor ( var i = 0, il = animationDef.channels.length; i < il; i ++ ) {\n\n\t\t\tvar channel = animationDef.channels[ i ];\n\t\t\tvar sampler = animationDef.samplers[ channel.sampler ];\n\t\t\tvar target = channel.target;\n\t\t\tvar name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\n\t\t\tvar input = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.input ] : sampler.input;\n\t\t\tvar output = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.output ] : sampler.output;\n\n\t\t\tpendingNodes.push( this.getDependency( 'node', name ) );\n\t\t\tpendingInputAccessors.push( this.getDependency( 'accessor', input ) );\n\t\t\tpendingOutputAccessors.push( this.getDependency( 'accessor', output ) );\n\t\t\tpendingSamplers.push( sampler );\n\t\t\tpendingTargets.push( target );\n\n\t\t}\n\n\t\treturn Promise.all( [\n\n\t\t\tPromise.all( pendingNodes ),\n\t\t\tPromise.all( pendingInputAccessors ),\n\t\t\tPromise.all( pendingOutputAccessors ),\n\t\t\tPromise.all( pendingSamplers ),\n\t\t\tPromise.all( pendingTargets )\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar nodes = dependencies[ 0 ];\n\t\t\tvar inputAccessors = dependencies[ 1 ];\n\t\t\tvar outputAccessors = dependencies[ 2 ];\n\t\t\tvar samplers = dependencies[ 3 ];\n\t\t\tvar targets = dependencies[ 4 ];\n\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0, il = nodes.length; i < il; i ++ ) {\n\n\t\t\t\tvar node = nodes[ i ];\n\t\t\t\tvar inputAccessor = inputAccessors[ i ];\n\t\t\t\tvar outputAccessor = outputAccessors[ i ];\n\t\t\t\tvar sampler = samplers[ i ];\n\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\tif ( node === undefined ) continue;\n\n\t\t\t\tnode.updateMatrix();\n\t\t\t\tnode.matrixAutoUpdate = true;\n\n\t\t\t\tvar TypedKeyframeTrack;\n\n\t\t\t\tswitch ( PATH_PROPERTIES[ target.path ] ) {\n\n\t\t\t\t\tcase PATH_PROPERTIES.weights:\n\n\t\t\t\t\t\tTypedKeyframeTrack = THREE.NumberKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.rotation:\n\n\t\t\t\t\t\tTypedKeyframeTrack = THREE.QuaternionKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.position:\n\t\t\t\t\tcase PATH_PROPERTIES.scale:\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tTypedKeyframeTrack = THREE.VectorKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tvar targetName = node.name ? node.name : node.uuid;\n\n\t\t\t\tvar interpolation = sampler.interpolation !== undefined ? INTERPOLATION[ sampler.interpolation ] : THREE.InterpolateLinear;\n\n\t\t\t\tvar targetNames = [];\n\n\t\t\t\tif ( PATH_PROPERTIES[ target.path ] === PATH_PROPERTIES.weights ) {\n\n\t\t\t\t\t// Node may be a THREE.Group (glTF mesh with several primitives) or a THREE.Mesh.\n\t\t\t\t\tnode.traverse( function ( object ) {\n\n\t\t\t\t\t\tif ( object.isMesh === true && object.morphTargetInfluences ) {\n\n\t\t\t\t\t\t\ttargetNames.push( object.name ? object.name : object.uuid );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttargetNames.push( targetName );\n\n\t\t\t\t}\n\n\t\t\t\tvar outputArray = outputAccessor.array;\n\n\t\t\t\tif ( outputAccessor.normalized ) {\n\n\t\t\t\t\tvar scale;\n\n\t\t\t\t\tif ( outputArray.constructor === Int8Array ) {\n\n\t\t\t\t\t\tscale = 1 / 127;\n\n\t\t\t\t\t} else if ( outputArray.constructor === Uint8Array ) {\n\n\t\t\t\t\t\tscale = 1 / 255;\n\n\t\t\t\t\t} else if ( outputArray.constructor == Int16Array ) {\n\n\t\t\t\t\t\tscale = 1 / 32767;\n\n\t\t\t\t\t} else if ( outputArray.constructor === Uint16Array ) {\n\n\t\t\t\t\t\tscale = 1 / 65535;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported output accessor component type.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar scaled = new Float32Array( outputArray.length );\n\n\t\t\t\t\tfor ( var j = 0, jl = outputArray.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tscaled[ j ] = outputArray[ j ] * scale;\n\n\t\t\t\t\t}\n\n\t\t\t\t\toutputArray = scaled;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = targetNames.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar track = new TypedKeyframeTrack(\n\t\t\t\t\t\ttargetNames[ j ] + '.' + PATH_PROPERTIES[ target.path ],\n\t\t\t\t\t\tinputAccessor.array,\n\t\t\t\t\t\toutputArray,\n\t\t\t\t\t\tinterpolation\n\t\t\t\t\t);\n\n\t\t\t\t\t// Override interpolation with custom factory method.\n\t\t\t\t\tif ( sampler.interpolation === 'CUBICSPLINE' ) {\n\n\t\t\t\t\t\ttrack.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline( result ) {\n\n\t\t\t\t\t\t\t// A CUBICSPLINE keyframe in glTF has three output values for each input value,\n\t\t\t\t\t\t\t// representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n\t\t\t\t\t\t\t// must be divided by three to get the interpolant's sampleSize argument.\n\n\t\t\t\t\t\t\treturn new GLTFCubicSplineInterpolant( this.times, this.values, this.getValueSize() / 3, result );\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// Mark as CUBICSPLINE. `track.getInterpolation()` doesn't support custom interpolants.\n\t\t\t\t\t\ttrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( track );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar name = animationDef.name ? animationDef.name : 'animation_' + animationIndex;\n\n\t\t\treturn new THREE.AnimationClip( name, undefined, tracks );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n\t * @param {number} nodeIndex\n\t * @return {Promise<THREE.Object3D>}\n\t */\n\tGLTFParser.prototype.loadNode = function ( nodeIndex ) {\n\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar parser = this;\n\n\t\tvar meshReferences = json.meshReferences;\n\t\tvar meshUses = json.meshUses;\n\n\t\tvar nodeDef = json.nodes[ nodeIndex ];\n\n\t\treturn ( function () {\n\n\t\t\tvar pending = [];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'mesh', nodeDef.mesh ).then( function ( mesh ) {\n\n\t\t\t\t\tvar node;\n\n\t\t\t\t\tif ( meshReferences[ nodeDef.mesh ] > 1 ) {\n\n\t\t\t\t\t\tvar instanceNum = meshUses[ nodeDef.mesh ] ++;\n\n\t\t\t\t\t\tnode = mesh.clone();\n\t\t\t\t\t\tnode.name += '_instance_' + instanceNum;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tnode = mesh;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if weights are provided on the node, override weights on the mesh.\n\t\t\t\t\tif ( nodeDef.weights !== undefined ) {\n\n\t\t\t\t\t\tnode.traverse( function ( o ) {\n\n\t\t\t\t\t\t\tif ( ! o.isMesh ) return;\n\n\t\t\t\t\t\t\tfor ( var i = 0, il = nodeDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\to.morphTargetInfluences[ i ] = nodeDef.weights[ i ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} ) );\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.camera !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'camera', nodeDef.camera ) );\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.extensions\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ]\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light !== undefined ) {\n\n\t\t\t\tpending.push( parser.getDependency( 'light', nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light ) );\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending );\n\n\t\t}() ).then( function ( objects ) {\n\n\t\t\tvar node;\n\n\t\t\t// .isBone isn't in glTF spec. See .markDefs\n\t\t\tif ( nodeDef.isBone === true ) {\n\n\t\t\t\tnode = new THREE.Bone();\n\n\t\t\t} else if ( objects.length > 1 ) {\n\n\t\t\t\tnode = new THREE.Group();\n\n\t\t\t} else if ( objects.length === 1 ) {\n\n\t\t\t\tnode = objects[ 0 ];\n\n\t\t\t} else {\n\n\t\t\t\tnode = new THREE.Object3D();\n\n\t\t\t}\n\n\t\t\tif ( node !== objects[ 0 ] ) {\n\n\t\t\t\tfor ( var i = 0, il = objects.length; i < il; i ++ ) {\n\n\t\t\t\t\tnode.add( objects[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.name ) {\n\n\t\t\t\tnode.userData.name = nodeDef.name;\n\t\t\t\tnode.name = THREE.PropertyBinding.sanitizeNodeName( nodeDef.name );\n\n\t\t\t}\n\n\t\t\tassignExtrasToUserData( node, nodeDef );\n\n\t\t\tif ( nodeDef.extensions ) addUnknownExtensionsToUserData( extensions, node, nodeDef );\n\n\t\t\tif ( nodeDef.matrix !== undefined ) {\n\n\t\t\t\tvar matrix = new THREE.Matrix4();\n\t\t\t\tmatrix.fromArray( nodeDef.matrix );\n\t\t\t\tnode.applyMatrix4( matrix );\n\n\t\t\t} else {\n\n\t\t\t\tif ( nodeDef.translation !== undefined ) {\n\n\t\t\t\t\tnode.position.fromArray( nodeDef.translation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.rotation !== undefined ) {\n\n\t\t\t\t\tnode.quaternion.fromArray( nodeDef.rotation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.scale !== undefined ) {\n\n\t\t\t\t\tnode.scale.fromArray( nodeDef.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn node;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n\t * @param {number} sceneIndex\n\t * @return {Promise<THREE.Group>}\n\t */\n\tGLTFParser.prototype.loadScene = function () {\n\n\t\t// scene node hierachy builder\n\n\t\tfunction buildNodeHierachy( nodeId, parentObject, json, parser ) {\n\n\t\t\tvar nodeDef = json.nodes[ nodeId ];\n\n\t\t\treturn parser.getDependency( 'node', nodeId ).then( function ( node ) {\n\n\t\t\t\tif ( nodeDef.skin === undefined ) return node;\n\n\t\t\t\t// build skeleton here as well\n\n\t\t\t\tvar skinEntry;\n\n\t\t\t\treturn parser.getDependency( 'skin', nodeDef.skin ).then( function ( skin ) {\n\n\t\t\t\t\tskinEntry = skin;\n\n\t\t\t\t\tvar pendingJoints = [];\n\n\t\t\t\t\tfor ( var i = 0, il = skinEntry.joints.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tpendingJoints.push( parser.getDependency( 'node', skinEntry.joints[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Promise.all( pendingJoints );\n\n\t\t\t\t} ).then( function ( jointNodes ) {\n\n\t\t\t\t\tnode.traverse( function ( mesh ) {\n\n\t\t\t\t\t\tif ( ! mesh.isMesh ) return;\n\n\t\t\t\t\t\tvar bones = [];\n\t\t\t\t\t\tvar boneInverses = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = jointNodes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar jointNode = jointNodes[ j ];\n\n\t\t\t\t\t\t\tif ( jointNode ) {\n\n\t\t\t\t\t\t\t\tbones.push( jointNode );\n\n\t\t\t\t\t\t\t\tvar mat = new THREE.Matrix4();\n\n\t\t\t\t\t\t\t\tif ( skinEntry.inverseBindMatrices !== undefined ) {\n\n\t\t\t\t\t\t\t\t\tmat.fromArray( skinEntry.inverseBindMatrices.array, j * 16 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tboneInverses.push( mat );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Joint \"%s\" could not be found.', skinEntry.joints[ j ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmesh.bind( new THREE.Skeleton( bones, boneInverses ), mesh.matrixWorld );\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} );\n\n\t\t\t} ).then( function ( node ) {\n\n\t\t\t\t// build node hierachy\n\n\t\t\t\tparentObject.add( node );\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( nodeDef.children ) {\n\n\t\t\t\t\tvar children = nodeDef.children;\n\n\t\t\t\t\tfor ( var i = 0, il = children.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar child = children[ i ];\n\t\t\t\t\t\tpending.push( buildNodeHierachy( child, node, json, parser ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn function loadScene( sceneIndex ) {\n\n\t\t\tvar json = this.json;\n\t\t\tvar extensions = this.extensions;\n\t\t\tvar sceneDef = this.json.scenes[ sceneIndex ];\n\t\t\tvar parser = this;\n\n\t\t\t// Loader returns Group, not Scene.\n\t\t\t// See: https://github.com/mrdoob/three.js/issues/18342#issuecomment-578981172\n\t\t\tvar scene = new THREE.Group();\n\t\t\tif ( sceneDef.name ) scene.name = sceneDef.name;\n\n\t\t\tassignExtrasToUserData( scene, sceneDef );\n\n\t\t\tif ( sceneDef.extensions ) addUnknownExtensionsToUserData( extensions, scene, sceneDef );\n\n\t\t\tvar nodeIds = sceneDef.nodes || [];\n\n\t\t\tvar pending = [];\n\n\t\t\tfor ( var i = 0, il = nodeIds.length; i < il; i ++ ) {\n\n\t\t\t\tpending.push( buildNodeHierachy( nodeIds[ i ], scene, json, parser ) );\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\t\treturn scene;\n\n\t\t\t} );\n\n\t\t};\n\n\t}();\n\n\treturn GLTFLoader;\n\n} )();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}