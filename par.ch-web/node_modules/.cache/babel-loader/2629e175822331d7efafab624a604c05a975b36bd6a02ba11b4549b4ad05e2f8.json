{"ast":null,"code":"import * as THREE from 'three';\nconst geometry = new THREE.BufferGeometry();\nconst material = new THREE.MeshBasicMaterial();\nconst cube = new THREE.Mesh(geometry, material);\nconst scene = new THREE.Scene();\nconst renderer = new THREE.WebGLRenderer();\nconst ViewerBG = '#eee';\nconst ViewerUI = {\n  canvasWrapper: document.getElementById('viewerCanvasWrapper'),\n  cubeWrapper: document.getElementById('orientCubeWrapper'),\n  toggleZoom: document.getElementById('toggleZoom'),\n  togglePan: document.getElementById('togglePan'),\n  toggleOrbit: document.getElementById('toggleOrbit'),\n  resetBtn: document.getElementById('resetBtn'),\n  toggleModelBrowser: document.getElementById('toggleModelBrowser'),\n  modelBrowser: document.getElementById('modelBrowser'),\n  modelBrowserContent: document.getElementById('modelBrowserContent'),\n  fileInput: document.getElementById('fileInput'),\n  explodeSliderWrapper: document.getElementById('explodeSliderWrapper'),\n  explodeSlider: document.getElementById('explodeSlider'),\n  toggleExplode: document.getElementById('toggleExplode'),\n  toggleShare: document.getElementById('toggleShare'),\n  shareSidebar: document.getElementById('shareSidebar'),\n  loader: document.getElementById('loader'),\n  toggleMeasure: document.getElementById('toggleMeasure'),\n  loaderInfo: document.getElementById('loaderInfo'),\n  backToHome: document.getElementById('backToHome'),\n  webglContainer: document.getElementById('webglContainer'),\n  downloadScreen: document.getElementById('downloadScreen'),\n  explodeFace: document.getElementById('explodeFace')\n};\nfunction setItemSelected(ele, bool) {\n  if (bool) {\n    ele.classList.add('item-selected');\n  } else {\n    ele.classList.remove('item-selected');\n  }\n}\nfunction toggle(ele) {\n  if (ele.getBoundingClientRect().height > 0) {\n    ele.style.display = 'none';\n    return false;\n  } else {\n    ele.style.display = 'block';\n    return true;\n  }\n}\nfunction toggleThrough(ele, through, cb, selected = true) {\n  through.onclick = () => {\n    let bool = toggle(ele);\n    selected && setItemSelected(through, bool);\n    cb && cb(bool);\n  };\n}\nfunction show(ele) {\n  ele.style.display = 'block';\n}\nfunction hide(ele) {\n  ele.style.display = 'none';\n}\nfunction ModelViewer() {\n  ViewerUI.downloadScreen.onclick = function () {\n    const canvas = renderer.domElement;\n    renderAll();\n    const image = canvas.toDataURL(\"image/png\");\n    const a = document.createElement(\"a\");\n    a.href = image.replace(/^data:image\\/[^;]/, 'data:application/octet-stream');\n    a.download = \"image.png\";\n    a.click();\n  };\n  ViewerUI.explodeFace.onclick = function () {\n    explodeFace = this.checked;\n    resetExplode();\n    explode();\n  };\n  let cubeCameraDistance = 1.75;\n  let cubeWrapper = ViewerUI.cubeWrapper;\n  let cubeScene = new THREE.Scene();\n  let cubeCamera = new THREE.PerspectiveCamera(70, cubeWrapper.offsetWidth / cubeWrapper.offsetHeight, 0.1, 100);\n  let cubeRenderer = new THREE.WebGLRenderer({\n    alpha: true,\n    antialias: true,\n    preserveDrawingBuffer: true\n  });\n  cubeRenderer.setSize(cubeWrapper.offsetWidth, cubeWrapper.offsetHeight);\n  cubeRenderer.setPixelRatio(window.deivicePixelRatio);\n  cubeWrapper.appendChild(cubeRenderer.domElement);\n  let materials = [];\n  let texts = ['RIGHT', 'LEFT', 'TOP', 'BOTTOM', 'FRONT', 'BACK'];\n  let textureLoader = new THREE.TextureLoader();\n  let canvas = document.createElement('canvas');\n  let ctx = canvas.getContext('2d');\n  let size = 64;\n  canvas.width = size;\n  canvas.height = size;\n  ctx.font = 'bolder 12px \"Open sans\", Arial';\n  ctx.textBaseline = 'middle';\n  ctx.textAlign = 'center';\n  let mainColor = '#fff';\n  let otherColor = '#ccc';\n  let bg = ctx.createLinearGradient(0, 0, 0, size);\n  bg.addColorStop(0, mainColor);\n  bg.addColorStop(1, otherColor);\n  for (let i = 0; i < 6; i++) {\n    if (texts[i] == 'TOP') {\n      ctx.fillStyle = mainColor;\n    } else if (texts[i] == 'BOTTOM') {\n      ctx.fillStyle = otherColor;\n    } else {\n      ctx.fillStyle = bg;\n    }\n    ctx.fillRect(0, 0, size, size);\n    ctx.strokeStyle = '#aaa';\n    ctx.setLineDash([8, 8]);\n    ctx.lineWidth = 4;\n    ctx.strokeRect(0, 0, size, size);\n    ctx.fillStyle = '#999';\n    ctx.fillText(texts[i], size / 2, size / 2);\n    materials[i] = new THREE.MeshBasicMaterial({\n      map: textureLoader.load(canvas.toDataURL())\n    });\n  }\n  let planes = [];\n  let planeMaterial = new THREE.MeshBasicMaterial({\n    side: THREE.DoubleSide,\n    color: 0x00c0ff,\n    transparent: true,\n    opacity: 0,\n    depthTest: false\n  });\n  let planeSize = 0.7;\n  let planeGeometry = new THREE.PlaneGeometry(planeSize, planeSize);\n  let a = 0.51;\n  let plane1 = new THREE.Mesh(planeGeometry, planeMaterial.clone());\n  plane1.position.z = a;\n  cubeScene.add(plane1);\n  planes.push(plane1);\n  let plane2 = new THREE.Mesh(planeGeometry, planeMaterial.clone());\n  plane2.position.z = -a;\n  cubeScene.add(plane2);\n  planes.push(plane2);\n  let plane3 = new THREE.Mesh(planeGeometry, planeMaterial.clone());\n  plane3.rotation.y = Math.PI / 2;\n  plane3.position.x = a;\n  cubeScene.add(plane3);\n  planes.push(plane3);\n  let plane4 = new THREE.Mesh(planeGeometry, planeMaterial.clone());\n  plane4.rotation.y = Math.PI / 2;\n  plane4.position.x = -a;\n  cubeScene.add(plane4);\n  planes.push(plane4);\n  let plane5 = new THREE.Mesh(planeGeometry, planeMaterial.clone());\n  plane5.rotation.x = Math.PI / 2;\n  plane5.position.y = a;\n  cubeScene.add(plane5);\n  planes.push(plane5);\n  let plane6 = new THREE.Mesh(planeGeometry, planeMaterial.clone());\n  plane6.rotation.x = Math.PI / 2;\n  plane6.position.y = -a;\n  cubeScene.add(plane6);\n  planes.push(plane6);\n  let groundMaterial = new THREE.MeshBasicMaterial({\n    color: 0xaaaaaa\n  });\n  let groundGeometry = new THREE.PlaneGeometry(1, 1);\n  let groundPlane = new THREE.Mesh(groundGeometry, groundMaterial);\n  groundPlane.rotation.x = -Math.PI / 2;\n  groundPlane.position.y = -0.6;\n  cubeScene.add(groundPlane);\n  let cube = new THREE.Mesh(new THREE.BoxGeometry(1, 1, 1), materials);\n  cubeScene.add(cube);\n  function updateCubeCamera() {\n    cubeCamera.rotation.copy(camera.rotation);\n    let dir = camera.position.clone().sub(controller.target).normalize();\n    cubeCamera.position.copy(dir.multiplyScalar(cubeCameraDistance));\n  }\n  let activePlane = null;\n  cubeRenderer.domElement.onmousemove = function (evt) {\n    if (activePlane) {\n      activePlane.material.opacity = 0;\n      activePlane.material.needsUpdate = true;\n      activePlane = null;\n    }\n    let x = evt.offsetX;\n    let y = evt.offsetY;\n    let size = cubeRenderer.getSize(new THREE.Vector2());\n    let mouse = new THREE.Vector2(x / size.width * 2 - 1, -y / size.height * 2 + 1);\n    let raycaster = new THREE.Raycaster();\n    raycaster.setFromCamera(mouse, cubeCamera);\n    let intersects = raycaster.intersectObjects(planes.concat(cube));\n    if (intersects.length > 0 && intersects[0].object != cube) {\n      activePlane = intersects[0].object;\n      activePlane.material.opacity = 0.2;\n      activePlane.material.needsUpdate = true;\n    }\n  };\n  let startTime = 0;\n  let duration = 500;\n  let oldPosition = new THREE.Vector3();\n  let newPosition = new THREE.Vector3();\n  let play = false;\n  cubeRenderer.domElement.onclick = function (evt) {\n    cubeRenderer.domElement.onmousemove(evt);\n    if (!activePlane || hasMoved) {\n      return false;\n    }\n    oldPosition.copy(camera.position);\n    let distance = camera.position.clone().sub(controller.target).length();\n    newPosition.copy(controller.target);\n    if (activePlane.position.x !== 0) {\n      newPosition.x += activePlane.position.x < 0 ? -distance : distance;\n    } else if (activePlane.position.y !== 0) {\n      newPosition.y += activePlane.position.y < 0 ? -distance : distance;\n    } else if (activePlane.position.z !== 0) {\n      newPosition.z += activePlane.position.z < 0 ? -distance : distance;\n    }\n\n    //play = true;\n    //startTime = Date.now();\n    camera.position.copy(newPosition);\n  };\n  cubeRenderer.domElement.ontouchmove = function (e) {\n    let rect = e.target.getBoundingClientRect();\n    let x = e.targetTouches[0].pageX - rect.left;\n    let y = e.targetTouches[0].pageY - rect.top;\n    cubeRenderer.domElement.onmousemove({\n      offsetX: x,\n      offsetY: y\n    });\n  };\n  cubeRenderer.domElement.ontouchstart = function (e) {\n    let rect = e.target.getBoundingClientRect();\n    let x = e.targetTouches[0].pageX - rect.left;\n    let y = e.targetTouches[0].pageY - rect.top;\n    cubeRenderer.domElement.onclick({\n      offsetX: x,\n      offsetY: y\n    });\n  };\n  ViewerUI.fileInput.addEventListener('input', function (evt) {\n    let file = evt.target.files[0];\n    if (file) {\n      show(ViewerUI.loader);\n      ViewerUI.loaderInfo.innerHTML = 'Reading file...';\n      let reader = new FileReader();\n      reader.onload = function (e) {\n        loadModel(e.target.result);\n      };\n      reader.onerror = function (err) {\n        ViewerUI.loaderInfo.innerHTML = 'Error reading file! See console for more info.';\n        console.error(err);\n      };\n      reader.readAsDataURL(file);\n    }\n  });\n  hide(ViewerUI.loader);\n  let hasMoved = false;\n  function antiMoveOnDown(e) {\n    hasMoved = false;\n  }\n  function antiMoveOnMove(e) {\n    hasMoved = true;\n  }\n  window.addEventListener('mousedown', antiMoveOnDown, false);\n  window.addEventListener('mousemove', antiMoveOnMove, false);\n  window.addEventListener('touchstart', antiMoveOnDown, false);\n  window.addEventListener('touchmove', antiMoveOnMove, true);\n  let showExploded = false;\n  let explodeFactor = 0;\n  let explodeFace = !true;\n  toggleThrough(ViewerUI.explodeSliderWrapper, ViewerUI.toggleExplode, bool => {\n    if (!bool) {\n      resetExplode();\n    } else {\n      explodeFactor = ViewerUI.explodeSlider.value;\n      explode();\n    }\n  });\n  function resetExplode() {\n    let temp = explodeFactor;\n    let temp2 = explodeFace;\n    explodeFace = true;\n    explodeFactor = 0;\n    explode();\n    explodeFace = false;\n    explode();\n    explodeFactor = temp;\n    explodeFace = temp2;\n  }\n  toggleThrough(ViewerUI.shareSidebar, ViewerUI.toggleShare);\n  toggleThrough(ViewerUI.modelBrowser, ViewerUI.toggleModelBrowser);\n  ViewerUI.explodeSlider.oninput = function () {\n    explodeFactor = this.value;\n    explode();\n  };\n  function explode() {\n    for (let i = 0; i < loadedMeshes.length; i++) {\n      let node = loadedMeshes[i];\n      if (explodeFace) {\n        let defaultPositionArray = node.defaultPositionArray;\n        let positionArray = node.geometry.attributes.position.array;\n        let normalArray = node.geometry.attributes.normal.array;\n        let indexArray = node.geometry.index.array;\n        for (let j = 0; j < indexArray.length; j++) {\n          let index = indexArray[j];\n          let position = new THREE.Vector3(defaultPositionArray[index * 3], defaultPositionArray[index * 3 + 1], defaultPositionArray[index * 3 + 2]);\n          let normal = new THREE.Vector3(normalArray[index * 3], normalArray[index * 3 + 1], normalArray[index * 3 + 2]);\n          position.add(normal.multiplyScalar(explodeFactor));\n          positionArray[index * 3] = position.x;\n          positionArray[index * 3 + 1] = position.y;\n          positionArray[index * 3 + 2] = position.z;\n        }\n        node.geometry.attributes.position.needsUpdate = true;\n        node.geometry.computeBoundingBox();\n        node.geometry.computeBoundingSphere();\n      } else {\n        node.position.copy(node.defaultPosition).add(node.defaultPosition.clone().normalize().multiplyScalar(explodeFactor));\n      }\n    }\n  }\n  ViewerUI.toggleZoom.onclick = function () {\n    setZoomMode();\n    setItemSelected(selectedModeElement, false);\n    selectedModeElement = this;\n    setItemSelected(this, true);\n  };\n  ViewerUI.togglePan.onclick = function () {\n    setPanMode();\n    setItemSelected(selectedModeElement, false);\n    selectedModeElement = this;\n    setItemSelected(this, true);\n  };\n  ViewerUI.toggleOrbit.onclick = function () {\n    setOrbitMode();\n    setItemSelected(selectedModeElement, false);\n    selectedModeElement = this;\n    setItemSelected(this, true);\n  };\n  ViewerUI.toggleMeasure.onclick = function () {\n    isInMeasureMode = !isInMeasureMode;\n    if (!isInMeasureMode) {\n      lineScene.remove.apply(lineScene, lineScene.children);\n      spriteScene.remove.apply(spriteScene, spriteScene.children);\n    }\n    setItemSelected(this, isInMeasureMode);\n  };\n  ViewerUI.resetBtn.onclick = ViewerUI.backToHome.onclick = function () {\n    resetAll();\n  };\n  function resetAll() {\n    controller.reset();\n    lineScene.remove.apply(lineScene, lineScene.children);\n    spriteScene.remove.apply(spriteScene, spriteScene.children);\n    isInMeasureMode = false;\n    setItemSelected(ViewerUI.toggleMeasure, false);\n    ViewerUI.explodeSliderWrapper.style.display = 'none';\n    ViewerUI.explodeFace.checked = false;\n    explodeFace = false;\n    setItemSelected(ViewerUI.toggleExplode, false);\n    resetExplode();\n    resetSelect();\n  }\n  function updateSelectDom(child) {\n    if (child.itemWrapper) {\n      if (child.isSelected) {\n        child.itemWrapper.querySelector('.graph-name').style.color = '#03a9f4';\n      } else {\n        child.itemWrapper.querySelector('.graph-name').style.color = 'inherit';\n      }\n    }\n  }\n  function setOrbitMode() {\n    controller.enableZoom = true;\n    controller.enablePan = true;\n    controller.enableRotate = true;\n    controller.mouseButtons = {\n      LEFT: THREE.MOUSE.ROTATE,\n      MIDDLE: THREE.MOUSE.DOLLY,\n      RIGHT: THREE.MOUSE.PAN\n    };\n  }\n  function setPanMode() {\n    controller.enableZoom = false;\n    controller.enablePan = true;\n    controller.enableRotate = false;\n    controller.mouseButtons = {\n      LEFT: THREE.MOUSE.PAN,\n      MIDDLE: THREE.MOUSE.PAN,\n      RIGHT: THREE.MOUSE.PAN\n    };\n  }\n  function setZoomMode() {\n    controller.enableZoom = true;\n    controller.enablePan = false;\n    controller.enableRotate = false;\n    controller.mouseButtons = {\n      LEFT: THREE.MOUSE.DOLLY,\n      MIDDLE: THREE.MOUSE.DOLLY,\n      RIGHT: THREE.MOUSE.DOLLY\n    };\n  }\n  let wrapper = ViewerUI.canvasWrapper;\n  let scene = new THREE.Scene();\n  let camera = new THREE.PerspectiveCamera(70, wrapper.offsetWidth / wrapper.offsetHeight, 0.1, 1000);\n  let renderer = new THREE.WebGLRenderer({\n    antialias: true,\n    alpha: false\n  });\n  renderer.setClearColor(new THREE.Color(ViewerBG));\n  renderer.autoClear = false;\n  renderer.setPixelRatio(window.deivicePixelRatio);\n  let isInMeasureMode = false;\n  let lineScene = new THREE.Scene();\n  let spriteScene = new THREE.Scene();\n  function makeCircleImage() {\n    let canvas = document.createElement('canvas');\n    let ctx = canvas.getContext('2d');\n    let size = 32;\n    canvas.width = size;\n    canvas.height = size;\n    let r = size * 0.8 / 2;\n    let blur = size - r;\n    ctx.shadowBlur = 5;\n    ctx.shadowColor = '#555';\n    ctx.fillStyle = '#fff';\n    ctx.beginPath();\n    ctx.arc(size / 2, size / 2, r, 0, Math.PI * 2);\n    ctx.closePath();\n    ctx.fill();\n    ctx.shadowBlur = 0;\n    ctx.fillStyle = '#009bff';\n    ctx.beginPath();\n    ctx.arc(size / 2, size / 2, r * 0.5, 0, Math.PI * 2);\n    ctx.closePath();\n    ctx.fill();\n    return canvas;\n  }\n  let circleTexture = new THREE.CanvasTexture(makeCircleImage());\n  let circleMaterial = new THREE.SpriteMaterial({\n    map: circleTexture,\n    sizeAttenuation: false\n  });\n  let circleSprite = new THREE.Sprite(circleMaterial);\n  circleSprite.scale.setScalar(0.08);\n  let lineMaterial = new THREE.LineBasicMaterial({\n    color: 0x009bff,\n    linewidth: 10\n  });\n  let activeLine = null;\n  renderer.domElement.onclick = function (evt) {\n    if (hasMoved) {\n      return false;\n    }\n    evt = evt || window.event;\n    let x = evt.offsetX;\n    let y = evt.offsetY;\n    let size = renderer.getSize(new THREE.Vector2());\n    let mouse = new THREE.Vector2(x / size.width * 2 - 1, -y / size.height * 2 + 1);\n    let raycaster = new THREE.Raycaster();\n    raycaster.setFromCamera(mouse, camera);\n    let intersects = raycaster.intersectObjects(loadedMeshes);\n    if (!isInMeasureMode) {\n      resetSelect();\n    }\n    if (intersects.length > 0) {\n      if (isInMeasureMode) {\n        let point = intersects[0].point;\n        if (!activeLine) {\n          let sprite1 = circleSprite.clone();\n          let sprite2 = circleSprite.clone();\n          sprite1.position.copy(point.clone());\n          sprite2.position.copy(point.clone());\n          spriteScene.add(sprite1);\n          spriteScene.add(sprite2);\n          let lineGeometry = new THREE.Geometry();\n          lineGeometry.vertices.push(sprite1.position, sprite2.position);\n          let line = new THREE.Line(lineGeometry, lineMaterial);\n          line.sprite1 = sprite1;\n          line.sprite2 = sprite2;\n          lineScene.add(line);\n          activeLine = line;\n        } else {\n          activeLine.geometry.vertices[1].copy(point);\n          activeLine.geometry.verticesNeedUpdate = true;\n          makeDistanceSprite();\n          activeLine = null;\n        }\n      } else {\n        let mesh = intersects[0].object;\n        mesh.isSelected = true;\n        updateMeshInteractionMaterial(mesh);\n      }\n    } else {\n      if (isInMeasureMode) {\n        if (activeLine) {\n          lineScene.remove(activeLine);\n          spriteScene.remove(activeLine.sprite1);\n          spriteScene.remove(activeLine.sprite2);\n          activeLine = null;\n        }\n      }\n    }\n  };\n  function resetSelect() {\n    scene.traverse(child => {\n      child.isSelected = false;\n      if (child.isMesh && child.material) {\n        updateMeshInteractionMaterial(child);\n      }\n      updateSelectDom(child);\n    });\n  }\n  renderer.domElement.onmousemove = function (evt) {\n    evt = evt || window.event;\n    if (!isInMeasureMode) {\n      return;\n    }\n    let x = evt.offsetX;\n    let y = evt.offsetY;\n    let size = renderer.getSize(new THREE.Vector2());\n    let mouse = new THREE.Vector2(x / size.width * 2 - 1, -y / size.height * 2 + 1);\n    let raycaster = new THREE.Raycaster();\n    raycaster.setFromCamera(mouse, camera);\n    let intersects = raycaster.intersectObjects(loadedMeshes);\n    if (isInMeasureMode && activeLine) {\n      if (intersects.length > 0) {\n        let point = intersects[0].point;\n        activeLine.geometry.vertices[1].copy(point);\n        activeLine.geometry.verticesNeedUpdate = true;\n      } else {\n        activeLine.geometry.vertices[1].copy(activeLine.geometry.vertices[0]);\n        activeLine.geometry.verticesNeedUpdate = true;\n      }\n    }\n  };\n\n  /*renderer.domElement.ontouchmove = function(e) {\n  \tlet rect = e.target.getBoundingClientRect();\n  \tlet x = e.targetTouches[0].pageX - rect.left;\n  \tlet y = e.targetTouches[0].pageY - rect.top;\n  \trenderer.domElement.onmousemove({\n  \t\toffsetX: x,\n  \t\toffsetY: y\n  \t});\n  }*/\n\n  renderer.domElement.ontouchstart = function (e) {\n    let rect = e.target.getBoundingClientRect();\n    let x = e.targetTouches[0].pageX - rect.left;\n    let y = e.targetTouches[0].pageY - rect.top;\n    renderer.domElement.onclick({\n      offsetX: x,\n      offsetY: y\n    });\n  };\n  function makeDistanceSprite() {\n    let canvas = document.createElement('canvas');\n    let ctx = canvas.getContext('2d');\n    let fontsize = 32;\n    ctx.font = 'bolder ' + fontsize + 'px \"Open Sans\", Arial';\n    let v = activeLine.geometry.vertices;\n    let length = v[0].clone().sub(v[1]).length().toFixed(1);\n    let text = '~ ' + length;\n    let size = ctx.measureText(text);\n    let paddingLeft = 20;\n    let paddingTop = 10;\n    let margin = 10;\n    canvas.width = size.width + paddingLeft * 2 + margin * 2;\n    canvas.height = fontsize + paddingTop * 2 + margin * 2;\n    ctx.shadowBlur = 10;\n    ctx.shadowColor = '#555';\n    ctx.fillStyle = '#009bff';\n    roundRect(ctx, margin, margin, canvas.width - margin * 2, canvas.height - margin * 2, 10);\n    ctx.shadowBlur = 0;\n    ctx.fillStyle = '#fff';\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'top';\n    ctx.font = 'bolder ' + fontsize + 'px \"Open Sans\", Arial';\n    ctx.fillText(text, paddingLeft + margin, paddingTop + margin);\n    let texture = new THREE.CanvasTexture(canvas);\n    let sprite = new THREE.Sprite(new THREE.SpriteMaterial({\n      map: texture,\n      sizeAttenuation: false\n    }));\n    let h = 0.7;\n    sprite.scale.set(0.002 * canvas.width, 0.0025 * canvas.height).multiplyScalar(h);\n    sprite.position.copy(v[0].clone().add(v[1]).multiplyScalar(0.5));\n    spriteScene.add(sprite);\n  }\n  function roundRect(ctx, x, y, w, h, r) {\n    ctx.beginPath();\n    ctx.moveTo(x + r, y);\n    ctx.lineTo(x + w - r, y);\n    ctx.quadraticCurveTo(x + w, y, x + w, y + r);\n    ctx.lineTo(x + w, y + h - r);\n    ctx.quadraticCurveTo(x + w, y + h, x + w - r, y + h);\n    ctx.lineTo(x + r, y + h);\n    ctx.quadraticCurveTo(x, y + h, x, y + h - r);\n    ctx.lineTo(x, y + r);\n    ctx.quadraticCurveTo(x, y, x + r, y);\n    ctx.closePath();\n    ctx.fill();\n  }\n  function updateMeshInteractionMaterial(mesh) {\n    if (mesh.isHidden) {\n      mesh.interactionMaterial.color = hiddenColor;\n      mesh.interactionMaterial.opacity = hiddenAlpha;\n    } else {\n      mesh.interactionMaterial.opacity = 1;\n    }\n    if (mesh.isSelected) {\n      mesh.interactionMaterial.color = selectColor;\n      mesh.itemWrapper.querySelector('.graph-name').style.color = '#03a9f4';\n    } else {\n      mesh.itemWrapper.querySelector('.graph-name').style.color = 'inherit';\n    }\n    mesh.interactionMaterial.needsUpdate = true;\n    if (!mesh.isSelected && !mesh.isHidden) {\n      mesh.material = mesh.defaultMaterial;\n    } else {\n      mesh.material = mesh.interactionMaterial;\n    }\n  }\n  function onResize() {\n    let width = wrapper.offsetWidth;\n    let height = wrapper.offsetHeight;\n    renderer.setSize(width, height, false);\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n  }\n  onResize();\n  wrapper.appendChild(renderer.domElement);\n  window.addEventListener('resize', onResize, false);\n  let gltfLoader = new THREE.GLTFLoader();\n  let loadedScene = null;\n  let loadedMeshes = [];\n  let d = 5;\n  let selectColor = new THREE.Color('#42006b');\n  let hiddenColor = new THREE.Color('#555');\n  let hiddenAlpha = 0.3;\n  let interactionMaterial = new THREE.MeshPhongMaterial({\n    transparent: true,\n    color: selectColor,\n    side: THREE.DoubleSide,\n    precision: 'mediump'\n  });\n  function loadModel(url) {\n    resetAll();\n    if (loadedScene) {\n      scene.remove(loadedScene);\n      loadedScene = null;\n      loadedMeshes.length = 0;\n    }\n    show(ViewerUI.loader);\n    ViewerUI.modelBrowserContent.innerHTML = '';\n    ViewerUI.loaderInfo.innerHTML = 'Loading model...';\n    gltfLoader.load(url, function onLoad(gltf) {\n      loadedScene = gltf.scene;\n      scene.add(gltf.scene);\n      gltf.scene = gltf.scene || gltf.scenes[0];\n      let object = gltf.scene;\n      const box = new THREE.Box3().setFromObject(object);\n      const size = box.getSize(new THREE.Vector3()).length();\n      const center = box.getCenter(new THREE.Vector3());\n      controller.reset();\n      object.position.x += object.position.x - center.x;\n      object.position.y += object.position.y - center.y;\n      object.position.z += object.position.z - center.z;\n      controller.maxDistance = size * 10;\n      camera.near = size / 100;\n      camera.far = size * 100;\n      camera.updateProjectionMatrix();\n      camera.position.copy(center);\n      camera.position.x += size / 2.0;\n      camera.position.y += size / 5.0;\n      camera.position.z += size / 2.0;\n      directionalLight.position.setScalar(size);\n      camera.lookAt(center);\n      controller.saveState();\n      gltf.scene.traverse(node => {\n        if (node.isMesh && node.material) {\n          node.geometry.computeBoundingBox();\n          node.material.side = THREE.DoubleSide;\n          node.material.precision = 'mediump';\n          node.material.needsUpdate = true;\n          node.interactionMaterial = interactionMaterial.clone();\n          node.defaultMaterial = node.material;\n          node.defaultPositionArray = Array.from(node.geometry.attributes.position.array);\n          node.defaultPosition = node.position.clone();\n          loadedMeshes.push(node);\n        }\n      });\n      let content = ViewerUI.modelBrowserContent;\n      let counter = 0;\n      let parentLevel = 0;\n      function makeSceneGraph(obj) {\n        if (obj.children.length === 0 && !obj.isMesh) {\n          return;\n        }\n        let itemWrapper = document.createElement('div');\n        itemWrapper.classList.add('graph-item-wrapper');\n        let item = document.createElement('div');\n        item.classList.add('graph-item');\n        itemWrapper.appendChild(item);\n        content.appendChild(itemWrapper);\n        let n = 0;\n        let obj2 = obj;\n        while (obj2 != gltf.scene) {\n          obj2 = obj2.parent;\n          n++;\n        }\n        item.style.paddingLeft = n * 1.5 + 'em';\n        obj.itemWrapper = itemWrapper;\n        let left = document.createElement('div');\n        left.classList.add('graph-left');\n        let right = document.createElement('div');\n        right.classList.add('graph-right');\n        item.appendChild(left);\n        item.appendChild(right);\n        if (obj.children.length > 0) {\n          parentLevel++;\n          let folder = document.createElement('div');\n          folder.style.marginRight = '10px';\n          folder.classList.add('graph-folder');\n          folder.innerHTML = '<i class=\"fa fa-folder-open\"></i>';\n          left.appendChild(folder);\n          obj.isFolderOpen = true;\n          obj.openFolder = function () {\n            folder.innerHTML = obj.isFolderOpen ? '<i class=\"fa fa-folder-open\"></i>' : '<i class=\"fa fa-folder\"></i>';\n            obj.traverse(child => {\n              if (obj === child) {\n                return;\n              }\n              if (child.itemWrapper) {\n                if (child.parent.isFolderOpen && obj.isFolderOpen) {\n                  child.itemWrapper.style.display = 'block';\n                }\n                if (!obj.isFolderOpen) {\n                  child.itemWrapper.style.display = 'none';\n                }\n              }\n            });\n          };\n          folder.onclick = () => {\n            obj.isFolderOpen = !obj.isFolderOpen;\n            obj.openFolder();\n          };\n          for (let i = 0; i < obj.children.length; i++) {\n            makeSceneGraph(obj.children[i]);\n          }\n        }\n        let name = document.createElement('div');\n        name.classList.add('graph-name');\n        name.innerHTML = obj.name || 'None';\n        left.appendChild(name);\n        name.onclick = function () {\n          resetSelect();\n          obj.traverse(child => {\n            child.isSelected = true;\n            if (child.isMesh && child.material) {\n              updateMeshInteractionMaterial(child);\n            }\n            updateSelectDom(child);\n          });\n        };\n        let visible = document.createElement('div');\n        visible.classList.add('graph-visible');\n        visible.innerHTML = '<i class=\"fa fa-eye\"></i>';\n        obj.showMesh = function () {\n          visible.innerHTML = obj.isMeshVisible ? '<i class=\"fa fa-eye\"></i>' : '<i class=\"fa fa-eye-slash\"></i>';\n          obj.traverse(child => {\n            if (child.itemWrapper) {\n              let eye = child.itemWrapper.querySelector('.graph-visible');\n              eye.innerHTML = obj.isMeshVisible ? '<i class=\"fa fa-eye\"></i>' : '<i class=\"fa fa-eye-slash\"></i>';\n              eye.style.color = obj.isMeshVisible ? 'inherit' : 'rgba(0, 0, 0, 0.3)';\n            }\n            if (child.isMesh && child.material) {\n              child.isHidden = !obj.isMeshVisible;\n              updateMeshInteractionMaterial(child);\n            }\n          });\n        };\n        obj.isHidden = false;\n        obj.isSelected = false;\n        obj.isMeshVisible = true;\n        visible.onclick = function () {\n          obj.isMeshVisible = !obj.isMeshVisible;\n          obj.showMesh();\n        };\n        right.appendChild(visible);\n      }\n      makeSceneGraph(gltf.scene);\n      hide(ViewerUI.loader);\n    }, function onProgress(xhr) {\n      ViewerUI.loaderInfo.innerHTML = Math.round(xhr.loaded / xhr.total * 100) + '% loaded';\n    }, function onError(err) {\n      ViewerUI.loaderInfo.innerHTML = 'Error loading model! See console for more info.';\n      console.error('Error loading model!', err);\n    });\n  }\n  let controller = new THREE.OrbitControls(camera, renderer.domElement);\n  controller.enabled = true;\n  controller.enableDamping = true;\n  controller.dampingFactor = 0.5;\n  controller.screenSpacePanning = true;\n  let cubeController = new THREE.OrbitControls(camera, cubeRenderer.domElement);\n  cubeController.enablePan = false;\n  cubeController.enableZoom = false;\n  cubeController.rotateSpeed = 0.125;\n  let selectedModeElement = ViewerUI.toggleOrbit;\n  setOrbitMode();\n  camera.position.z = d;\n  camera.lookAt(scene.position);\n  controller.update();\n  controller.saveState();\n  let ambientLight = new THREE.AmbientLight();\n  ambientLight.intensity = 1;\n  scene.add(ambientLight);\n  let directionalLight = new THREE.DirectionalLight();\n  directionalLight.position.set(200, 200, 200);\n  directionalLight.intensity = 0.5;\n  scene.add(directionalLight);\n\n  /*let light1 = new THREE.PointLight(0xffffff);\n  light1.position.set(100, 100, 100);\n  scene.add(light1);\n  \n  let light2 = new THREE.PointLight(0xffffff);\n  light2.position.set(100, 100, -100);\n  scene.add(light2);\n  \n  let light3 = new THREE.PointLight(0xffffff);\n  light3.position.set(-100, 100, 100);\n  scene.add(light3);\n  \n  let light4 = new THREE.PointLight(0xffffff);\n  light4.position.set(-100, 100, -100);\n  scene.add(light4);\n  \n  light1.intensity = light2.intensity = light3.intensity = light4.intensity = 0.3;*/\n\n  let stop = false;\n  function renderAll() {\n    renderer.clear();\n    renderer.render(scene, camera);\n    updateCubeCamera();\n    cubeRenderer.render(cubeScene, cubeCamera);\n    renderer.clearDepth();\n    if (isInMeasureMode) {\n      renderer.clearDepth();\n      renderer.render(lineScene, camera);\n      renderer.clearDepth();\n      renderer.render(spriteScene, camera);\n    }\n  }\n  function animate(time) {\n    if (stop) {\n      return;\n    }\n    if (play) {\n      let now = Date.now();\n      let x = Math.min(1, (now - startTime) / duration);\n      camera.position.copy(oldPosition).lerp(newPosition, x);\n      if (x === 1) {\n        play = false;\n      }\n    }\n    requestAnimationFrame(animate);\n    controller.update();\n    renderAll();\n  }\n  requestAnimationFrame(animate);\n  return {\n    loadModel: loadModel\n  };\n}\n_c = ModelViewer;\nexport default ModelViewer;\n// export { ViewerUI };\nvar _c;\n$RefreshReg$(_c, \"ModelViewer\");","map":{"version":3,"names":["THREE","geometry","BufferGeometry","material","MeshBasicMaterial","cube","Mesh","scene","Scene","renderer","WebGLRenderer","ViewerBG","ViewerUI","canvasWrapper","document","getElementById","cubeWrapper","toggleZoom","togglePan","toggleOrbit","resetBtn","toggleModelBrowser","modelBrowser","modelBrowserContent","fileInput","explodeSliderWrapper","explodeSlider","toggleExplode","toggleShare","shareSidebar","loader","toggleMeasure","loaderInfo","backToHome","webglContainer","downloadScreen","explodeFace","setItemSelected","ele","bool","classList","add","remove","toggle","getBoundingClientRect","height","style","display","toggleThrough","through","cb","selected","onclick","show","hide","ModelViewer","canvas","domElement","renderAll","image","toDataURL","a","createElement","href","replace","download","click","checked","resetExplode","explode","cubeCameraDistance","cubeScene","cubeCamera","PerspectiveCamera","offsetWidth","offsetHeight","cubeRenderer","alpha","antialias","preserveDrawingBuffer","setSize","setPixelRatio","window","deivicePixelRatio","appendChild","materials","texts","textureLoader","TextureLoader","ctx","getContext","size","width","font","textBaseline","textAlign","mainColor","otherColor","bg","createLinearGradient","addColorStop","i","fillStyle","fillRect","strokeStyle","setLineDash","lineWidth","strokeRect","fillText","map","load","planes","planeMaterial","side","DoubleSide","color","transparent","opacity","depthTest","planeSize","planeGeometry","PlaneGeometry","plane1","clone","position","z","push","plane2","plane3","rotation","y","Math","PI","x","plane4","plane5","plane6","groundMaterial","groundGeometry","groundPlane","BoxGeometry","updateCubeCamera","copy","camera","dir","sub","controller","target","normalize","multiplyScalar","activePlane","onmousemove","evt","needsUpdate","offsetX","offsetY","getSize","Vector2","mouse","raycaster","Raycaster","setFromCamera","intersects","intersectObjects","concat","length","object","startTime","duration","oldPosition","Vector3","newPosition","play","hasMoved","distance","ontouchmove","e","rect","targetTouches","pageX","left","pageY","top","ontouchstart","addEventListener","file","files","innerHTML","reader","FileReader","onload","loadModel","result","onerror","err","console","error","readAsDataURL","antiMoveOnDown","antiMoveOnMove","showExploded","explodeFactor","value","temp","temp2","oninput","loadedMeshes","node","defaultPositionArray","positionArray","attributes","array","normalArray","normal","indexArray","index","j","computeBoundingBox","computeBoundingSphere","defaultPosition","setZoomMode","selectedModeElement","setPanMode","setOrbitMode","isInMeasureMode","lineScene","apply","children","spriteScene","resetAll","reset","resetSelect","updateSelectDom","child","itemWrapper","isSelected","querySelector","enableZoom","enablePan","enableRotate","mouseButtons","LEFT","MOUSE","ROTATE","MIDDLE","DOLLY","RIGHT","PAN","wrapper","setClearColor","Color","autoClear","makeCircleImage","r","blur","shadowBlur","shadowColor","beginPath","arc","closePath","fill","circleTexture","CanvasTexture","circleMaterial","SpriteMaterial","sizeAttenuation","circleSprite","Sprite","scale","setScalar","lineMaterial","LineBasicMaterial","linewidth","activeLine","event","point","sprite1","sprite2","lineGeometry","Geometry","vertices","line","Line","verticesNeedUpdate","makeDistanceSprite","mesh","updateMeshInteractionMaterial","traverse","isMesh","fontsize","v","toFixed","text","measureText","paddingLeft","paddingTop","margin","roundRect","texture","sprite","h","set","w","moveTo","lineTo","quadraticCurveTo","isHidden","interactionMaterial","hiddenColor","hiddenAlpha","selectColor","defaultMaterial","onResize","aspect","updateProjectionMatrix","gltfLoader","GLTFLoader","loadedScene","d","MeshPhongMaterial","precision","url","onLoad","gltf","scenes","box","Box3","setFromObject","center","getCenter","maxDistance","near","far","directionalLight","lookAt","saveState","Array","from","content","counter","parentLevel","makeSceneGraph","obj","item","n","obj2","parent","right","folder","marginRight","isFolderOpen","openFolder","name","visible","showMesh","isMeshVisible","eye","onProgress","xhr","round","loaded","total","onError","OrbitControls","enabled","enableDamping","dampingFactor","screenSpacePanning","cubeController","rotateSpeed","update","ambientLight","AmbientLight","intensity","DirectionalLight","stop","clear","render","clearDepth","animate","time","now","Date","min","lerp","requestAnimationFrame","_c","$RefreshReg$"],"sources":["/Users/rahilshaik/parch/par.ch-web/src/components/model-viewer/model-viewer-component.js"],"sourcesContent":["import * as THREE from 'three';\n\n\nconst geometry = new THREE.BufferGeometry();\nconst material = new THREE.MeshBasicMaterial();\nconst cube = new THREE.Mesh( geometry, material );\nconst scene = new THREE.Scene();\nconst renderer = new THREE.WebGLRenderer();\n\nconst ViewerBG = '#eee';\nconst ViewerUI = {\n\tcanvasWrapper: document.getElementById('viewerCanvasWrapper'),\n\tcubeWrapper: document.getElementById('orientCubeWrapper'),\n\ttoggleZoom: document.getElementById('toggleZoom'),\n\ttogglePan: document.getElementById('togglePan'),\n\ttoggleOrbit: document.getElementById('toggleOrbit'),\n\tresetBtn: document.getElementById('resetBtn'),\n\ttoggleModelBrowser: document.getElementById('toggleModelBrowser'),\n\tmodelBrowser: document.getElementById('modelBrowser'),\n\tmodelBrowserContent: document.getElementById('modelBrowserContent'),\n\tfileInput: document.getElementById('fileInput'),\n\texplodeSliderWrapper: document.getElementById('explodeSliderWrapper'),\n\texplodeSlider: document.getElementById('explodeSlider'),\n\ttoggleExplode: document.getElementById('toggleExplode'),\n\ttoggleShare: document.getElementById('toggleShare'),\n\tshareSidebar: document.getElementById('shareSidebar'),\n\tloader: document.getElementById('loader'),\n\ttoggleMeasure: document.getElementById('toggleMeasure'),\n\tloaderInfo: document.getElementById('loaderInfo'),\n\tbackToHome: document.getElementById('backToHome'),\n\twebglContainer: document.getElementById('webglContainer'),\n\tdownloadScreen: document.getElementById('downloadScreen'),\n\texplodeFace: document.getElementById('explodeFace')\n};\n\n\nfunction setItemSelected(ele, bool) {\n\tif (bool) {\n\t\tele.classList.add('item-selected');\n\t} else {\n\t\tele.classList.remove('item-selected');\n\t}\n}\n\nfunction toggle(ele) {\n\tif (ele.getBoundingClientRect().height > 0) {\n\t\tele.style.display = 'none';\n\t\treturn false;\n\t} else {\n\t\tele.style.display = 'block';\n\t\treturn true;\n\t}\n}\n\nfunction toggleThrough(ele, through, cb, selected=true) {\n\tthrough.onclick = () => {\n\t\tlet bool = toggle(ele);\n\t\tselected && setItemSelected(through, bool);\n\t\tcb && cb(bool);\n\t}\n}\n\nfunction show(ele) {\n\tele.style.display = 'block';\n}\n\nfunction hide(ele) {\n\tele.style.display = 'none';\n}\n\n\nfunction ModelViewer() {\n\n\tViewerUI.downloadScreen.onclick = function() {\n\t\tconst canvas = renderer.domElement;\n\t\trenderAll();\n\t\tconst image = canvas.toDataURL(\"image/png\");\n\t\tconst a = document.createElement(\"a\");\n\t\ta.href = image.replace(/^data:image\\/[^;]/, 'data:application/octet-stream');\n\t\ta.download = \"image.png\"\n\t\ta.click();\n\t}\n\n\tViewerUI.explodeFace.onclick = function() {\n\t\texplodeFace = this.checked;\n\t\tresetExplode();\n\t\texplode();\n\t}\n\n\tlet cubeCameraDistance = 1.75;\n\n\tlet cubeWrapper = ViewerUI.cubeWrapper;\n\tlet cubeScene = new THREE.Scene();\n\tlet cubeCamera = new THREE.PerspectiveCamera(70, cubeWrapper.offsetWidth / cubeWrapper.offsetHeight, 0.1, 100);\n\tlet cubeRenderer = new THREE.WebGLRenderer({\n\t\talpha: true,\n\t\tantialias: true,\n\t\tpreserveDrawingBuffer: true\n\t}); \n\n\tcubeRenderer.setSize(cubeWrapper.offsetWidth, cubeWrapper.offsetHeight);\n\tcubeRenderer.setPixelRatio(window.deivicePixelRatio);\n\n\tcubeWrapper.appendChild(cubeRenderer.domElement);\n\n\tlet materials = [];\n\tlet texts = ['RIGHT', 'LEFT', 'TOP', 'BOTTOM', 'FRONT', 'BACK'];\n\n\tlet textureLoader = new THREE.TextureLoader();\n\tlet canvas = document.createElement('canvas');\n\tlet ctx = canvas.getContext('2d');\n\t\n\tlet size = 64;\n\tcanvas.width = size;\n\tcanvas.height = size;\n\n\tctx.font = 'bolder 12px \"Open sans\", Arial';\n\tctx.textBaseline = 'middle';\n\tctx.textAlign = 'center';\n\n\tlet mainColor = '#fff';\n\tlet otherColor = '#ccc';\n\n\tlet bg = ctx.createLinearGradient(0, 0, 0, size);\n\tbg.addColorStop(0, mainColor);\n\tbg.addColorStop(1,  otherColor);\n\n\tfor (let i = 0; i < 6; i++) {\n\t\tif (texts[i] == 'TOP') {\n\t\t\tctx.fillStyle = mainColor;\n\t\t} else if (texts[i] == 'BOTTOM') {\n\t\t\tctx.fillStyle = otherColor;\n\t\t} else {\n\t\t\tctx.fillStyle = bg;\n\t\t}\n\t\tctx.fillRect(0, 0, size, size);\n\t\tctx.strokeStyle = '#aaa';\n\t\tctx.setLineDash([8, 8]);\n\t\tctx.lineWidth = 4;\n\t\tctx.strokeRect(0, 0, size, size);\n\t\tctx.fillStyle = '#999';\n\t\tctx.fillText(texts[i], size / 2, size / 2);\n\t\tmaterials[i] = new THREE.MeshBasicMaterial({\n\t\t\tmap: textureLoader.load(canvas.toDataURL())\n\t\t});\n\t}\n\n\tlet planes = [];\n\n\tlet planeMaterial = new THREE.MeshBasicMaterial({\n\t\tside: THREE.DoubleSide,\n\t\tcolor: 0x00c0ff,\n\t\ttransparent: true,\n\t\topacity: 0,\n\t\tdepthTest: false\n\t});\n\tlet planeSize = 0.7;\n\tlet planeGeometry = new THREE.PlaneGeometry(planeSize, planeSize);\n\n\tlet a = 0.51;\n\n\tlet plane1 = new THREE.Mesh(planeGeometry, planeMaterial.clone());\n\tplane1.position.z = a;\n\tcubeScene.add(plane1);\n\tplanes.push(plane1);\n\n\tlet plane2 = new THREE.Mesh(planeGeometry, planeMaterial.clone());\n\tplane2.position.z = -a;\n\tcubeScene.add(plane2);\n\tplanes.push(plane2);\n\n\tlet plane3 = new THREE.Mesh(planeGeometry, planeMaterial.clone());\n\tplane3.rotation.y = Math.PI / 2;\n\tplane3.position.x = a;\n\tcubeScene.add(plane3);\n\tplanes.push(plane3);\n\n\tlet plane4 = new THREE.Mesh(planeGeometry, planeMaterial.clone());\n\tplane4.rotation.y = Math.PI / 2;\n\tplane4.position.x = -a;\n\tcubeScene.add(plane4);\n\tplanes.push(plane4);\n\n\tlet plane5 = new THREE.Mesh(planeGeometry, planeMaterial.clone());\n\tplane5.rotation.x = Math.PI / 2;\n\tplane5.position.y = a;\n\tcubeScene.add(plane5);\n\tplanes.push(plane5);\n\n\tlet plane6 = new THREE.Mesh(planeGeometry, planeMaterial.clone());\n\tplane6.rotation.x = Math.PI / 2;\n\tplane6.position.y = -a;\n\tcubeScene.add(plane6);\n\tplanes.push(plane6);\n\n\tlet groundMaterial = new THREE.MeshBasicMaterial({\n\t\tcolor: 0xaaaaaa\n\t});\n\tlet groundGeometry = new THREE.PlaneGeometry(1, 1);\n\tlet groundPlane = new THREE.Mesh(groundGeometry, groundMaterial);\n\tgroundPlane.rotation.x = -Math.PI / 2;\n\tgroundPlane.position.y = -0.6;\n\n\tcubeScene.add(groundPlane);\n\n\tlet cube = new THREE.Mesh(new THREE.BoxGeometry(1, 1, 1), materials);\n\tcubeScene.add(cube);\n\n\tfunction updateCubeCamera() {\n\t\tcubeCamera.rotation.copy(camera.rotation);\n\t\tlet dir = camera.position.clone().sub(controller.target).normalize();\n\t\tcubeCamera.position.copy(dir.multiplyScalar(cubeCameraDistance));\n\t}\n\n\tlet activePlane = null;\n\n\tcubeRenderer.domElement.onmousemove = function(evt) {\n\n\t\tif (activePlane) {\n\t\t\tactivePlane.material.opacity = 0;\n\t\t\tactivePlane.material.needsUpdate = true;\n\t\t\tactivePlane = null;\n\t\t}\n\n\t\tlet x = evt.offsetX;\n\t\tlet y = evt.offsetY;\n\t\tlet size = cubeRenderer.getSize(new THREE.Vector2());\n\t\tlet mouse = new THREE.Vector2(x / size.width * 2 - 1, -y / size.height * 2 + 1);\n\t\t\n\t\tlet raycaster = new THREE.Raycaster();\n\t\traycaster.setFromCamera(mouse, cubeCamera);\n\t\tlet intersects = raycaster.intersectObjects(planes.concat(cube));\n\n\t\tif (intersects.length > 0 && intersects[0].object != cube) {\n\t\t\tactivePlane = intersects[0].object;\n\t\t\tactivePlane.material.opacity = 0.2;\n\t\t\tactivePlane.material.needsUpdate = true;\n\t\t}\n\t}\n\n\tlet startTime = 0;\n\tlet duration = 500;\n\tlet oldPosition = new THREE.Vector3();\n\tlet newPosition = new THREE.Vector3();\n\tlet play = false;\n\n\tcubeRenderer.domElement.onclick = function(evt) {\n\n\t\tcubeRenderer.domElement.onmousemove(evt);\n\n\t\tif (!activePlane || hasMoved) {\n\t\t\treturn false;\n\t\t}\n\n\t\toldPosition.copy(camera.position);\n\n\t\tlet distance = camera.position.clone().sub(controller.target).length();\n\t\tnewPosition.copy(controller.target);\n\n\t\tif (activePlane.position.x !== 0) {\n\t\t\tnewPosition.x += activePlane.position.x < 0 ? -distance : distance;\n\t\t} else if (activePlane.position.y !== 0) {\n\t\t\tnewPosition.y += activePlane.position.y < 0 ? -distance : distance;\n\t\t} else if (activePlane.position.z !== 0) {\n\t\t\tnewPosition.z += activePlane.position.z < 0 ? -distance : distance;\n\t\t}\n\n\t\t//play = true;\n\t\t//startTime = Date.now();\n\t\tcamera.position.copy(newPosition);\n\t}\n\n\tcubeRenderer.domElement.ontouchmove = function(e) {\n\t\tlet rect = e.target.getBoundingClientRect();\n\t\tlet x = e.targetTouches[0].pageX - rect.left;\n\t\tlet y = e.targetTouches[0].pageY - rect.top;\n\t\tcubeRenderer.domElement.onmousemove({\n\t\t\toffsetX: x,\n\t\t\toffsetY: y\n\t\t});\n\t}\n\n\tcubeRenderer.domElement.ontouchstart = function(e) {\n\t\tlet rect = e.target.getBoundingClientRect();\n\t\tlet x = e.targetTouches[0].pageX - rect.left;\n\t\tlet y = e.targetTouches[0].pageY - rect.top;\n\t\tcubeRenderer.domElement.onclick({\n\t\t\toffsetX: x,\n\t\t\toffsetY: y\n\t\t});\n\t}\n\n\tViewerUI.fileInput.addEventListener('input', function(evt) {\n\t\tlet file = evt.target.files[0];\n\t\tif (file) {\n\t\t\tshow(ViewerUI.loader);\n\t\t\tViewerUI.loaderInfo.innerHTML = 'Reading file...';\n\t\t\tlet reader = new FileReader();\n\t\t\treader.onload = function(e) {\n\t\t\t\tloadModel(e.target.result);\n\t\t\t}\n\t\t\treader.onerror = function(err) {\n\t\t\t\tViewerUI.loaderInfo.innerHTML = 'Error reading file! See console for more info.';\n\t\t\t\tconsole.error(err);\n\t\t\t}\n\t\t\treader.readAsDataURL(file);\n\t\t}\n\t});\n\t\n\thide(ViewerUI.loader);\n\n\tlet hasMoved = false;\n\n\tfunction antiMoveOnDown(e) {\n\t\thasMoved = false;\n\t}\n\tfunction antiMoveOnMove(e) {\n\t\thasMoved = true;\n\t}\n\t\n\twindow.addEventListener('mousedown', antiMoveOnDown, false);\n\twindow.addEventListener('mousemove', antiMoveOnMove, false);\n\twindow.addEventListener('touchstart', antiMoveOnDown, false);\n\twindow.addEventListener('touchmove', antiMoveOnMove, true);\n\t\n\tlet showExploded = false;\n\tlet explodeFactor = 0;\n\tlet explodeFace = !true;\n\t\n\ttoggleThrough(ViewerUI.explodeSliderWrapper, ViewerUI.toggleExplode, (bool) => {\n\t\tif (!bool) {\n\t\t\tresetExplode();\n\t\t} else {\n\t\t\texplodeFactor = ViewerUI.explodeSlider.value;\n\t\t\texplode();\n\t\t}\n\t});\n\t\n\tfunction resetExplode() {\n\t\tlet temp = explodeFactor;\n\t\tlet temp2 = explodeFace;\n\t\texplodeFace = true;\n\t\texplodeFactor = 0;\n\t\texplode();\n\t\texplodeFace = false;\n\t\texplode();\n\t\texplodeFactor = temp;\n\t\texplodeFace = temp2;\n\t}\n\t\n\ttoggleThrough(ViewerUI.shareSidebar, ViewerUI.toggleShare);\n\ttoggleThrough(ViewerUI.modelBrowser, ViewerUI.toggleModelBrowser);\n\t\n\tViewerUI.explodeSlider.oninput = function() {\n\t\texplodeFactor = this.value;\n\t\texplode();\n\t}\n\t\n\tfunction explode() {\n\t\tfor (let i = 0; i < loadedMeshes.length; i++) {\n\t\t\t\n\t\t\tlet node = loadedMeshes[i];\n\n\t\t\tif (explodeFace) {\n\t\t\t\tlet defaultPositionArray = node.defaultPositionArray;\n\t\t\t\tlet positionArray = node.geometry.attributes.position.array;\n\t\t\t\tlet normalArray = node.geometry.attributes.normal.array;\n\t\t\t\tlet indexArray = node.geometry.index.array;\n\t\t\t\t\n\t\t\t\tfor (let j = 0; j < indexArray.length; j++) {\n\t\t\t\t\t\n\t\t\t\t\tlet index = indexArray[j]\n\t\t\t\t\tlet position = new THREE.Vector3(defaultPositionArray[index * 3], defaultPositionArray[index * 3 + 1], defaultPositionArray[index * 3 + 2]);\n\t\t\t\t\tlet normal = new THREE.Vector3(normalArray[index * 3], normalArray[index * 3 + 1], normalArray[index * 3 + 2]);\n\t\t\t\t\t\n\t\t\t\t\tposition.add(normal.multiplyScalar(explodeFactor));\n\t\t\t\t\tpositionArray[index * 3] = position.x;\n\t\t\t\t\tpositionArray[index * 3 + 1] = position.y;\n\t\t\t\t\tpositionArray[index * 3 + 2] = position.z;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tnode.geometry.attributes.position.needsUpdate = true;\n\t\t\t\tnode.geometry.computeBoundingBox();\n\t\t\t\tnode.geometry.computeBoundingSphere();\n\t\t\t} else {\n\t\t\t\tnode.position.copy(node.defaultPosition).add(node.defaultPosition.clone().normalize().multiplyScalar(explodeFactor));\n\t\t\t}\n\t\t}\n\t}\n\t\n\tViewerUI.toggleZoom.onclick = function() {\n\t\tsetZoomMode();\n\t\tsetItemSelected(selectedModeElement, false);\n\t\tselectedModeElement = this;\n\t\tsetItemSelected(this, true);\n\t}\n\t\n\tViewerUI.togglePan.onclick = function() {\n\t\tsetPanMode();\n\t\tsetItemSelected(selectedModeElement, false);\n\t\tselectedModeElement = this;\n\t\tsetItemSelected(this, true);\n\t}\n\t\n\tViewerUI.toggleOrbit.onclick = function() {\n\t\tsetOrbitMode();\n\t\tsetItemSelected(selectedModeElement, false);\n\t\tselectedModeElement = this;\n\t\tsetItemSelected(this, true);\n\t}\n\t\n\tViewerUI.toggleMeasure.onclick = function() {\n\t\tisInMeasureMode = !isInMeasureMode;\n\t\tif (!isInMeasureMode) {\n\t\t\tlineScene.remove.apply(lineScene, lineScene.children);\n\t\t\tspriteScene.remove.apply(spriteScene, spriteScene.children);\n\t\t}\n\t\tsetItemSelected(this, isInMeasureMode);\n\t}\n\t\n\tViewerUI.resetBtn.onclick = ViewerUI.backToHome.onclick =function() {\n\t\tresetAll();\n\t}\n\n\tfunction resetAll() {\n\t\tcontroller.reset();\n\t\tlineScene.remove.apply(lineScene, lineScene.children);\n\t\tspriteScene.remove.apply(spriteScene, spriteScene.children);\n\t\tisInMeasureMode = false;\n\t\tsetItemSelected(ViewerUI.toggleMeasure, false);\n\t\tViewerUI.explodeSliderWrapper.style.display = 'none';\n\t\tViewerUI.explodeFace.checked = false;\n\t\texplodeFace = false;\n\t\tsetItemSelected(ViewerUI.toggleExplode, false);\n\t\tresetExplode();\n\t\tresetSelect();\n\t}\n\n\tfunction updateSelectDom(child) {\n\t\tif (child.itemWrapper) {\n\t\t\tif (child.isSelected) {\n\t\t\t\tchild.itemWrapper.querySelector('.graph-name').style.color = '#03a9f4';\n\t\t\t} else {\n\t\t\t\tchild.itemWrapper.querySelector('.graph-name').style.color = 'inherit';\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction setOrbitMode() {\n\t\tcontroller.enableZoom = true;\n\t\tcontroller.enablePan = true;\n\t\tcontroller.enableRotate = true;\n\t\tcontroller.mouseButtons = {\n\t\t\tLEFT: THREE.MOUSE.ROTATE,\n\t\t\tMIDDLE: THREE.MOUSE.DOLLY,\n\t\t\tRIGHT: THREE.MOUSE.PAN\n\t\t};\n\t}\n\t\n\tfunction setPanMode() {\n\t\tcontroller.enableZoom = false;\n\t\tcontroller.enablePan = true;\n\t\tcontroller.enableRotate = false;\n\t\tcontroller.mouseButtons = {\n\t\t\tLEFT: THREE.MOUSE.PAN,\n\t\t\tMIDDLE: THREE.MOUSE.PAN,\n\t\t\tRIGHT: THREE.MOUSE.PAN\n\t\t};\n\t}\n\t\n\tfunction setZoomMode() {\n\t\tcontroller.enableZoom = true;\n\t\tcontroller.enablePan = false;\n\t\tcontroller.enableRotate = false;\n\t\tcontroller.mouseButtons = {\n\t\t\tLEFT: THREE.MOUSE.DOLLY,\n\t\t\tMIDDLE: THREE.MOUSE.DOLLY,\n\t\t\tRIGHT: THREE.MOUSE.DOLLY\n\t\t};\n\t}\n\t\n\tlet wrapper = ViewerUI.canvasWrapper;\n\tlet scene = new THREE.Scene();\n\tlet camera = new THREE.PerspectiveCamera(70, wrapper.offsetWidth / wrapper.offsetHeight, 0.1, 1000);\n\t\n\tlet renderer = new THREE.WebGLRenderer({\n\t\tantialias: true,\n\t\talpha: false\n\t});\n\t\n\trenderer.setClearColor(new THREE.Color(ViewerBG));\n\trenderer.autoClear = false;\n\trenderer.setPixelRatio(window.deivicePixelRatio);\n\n\tlet isInMeasureMode = false;\n\tlet lineScene = new THREE.Scene();\n\tlet spriteScene = new THREE.Scene();\n\n\tfunction makeCircleImage() {\n\t\tlet canvas = document.createElement('canvas');\n\t\tlet ctx = canvas.getContext('2d');\n\t\tlet size = 32;\n\t\tcanvas.width = size;\n\t\tcanvas.height = size;\n\n\t\tlet r = size * 0.8 / 2;\n\t\tlet blur = size - r;\n\t\t\n\t\tctx.shadowBlur = 5;\n\t\tctx.shadowColor = '#555';\n\n\t\tctx.fillStyle = '#fff';\n\t\tctx.beginPath();\n\t\tctx.arc(size / 2, size / 2, r, 0, Math.PI * 2);\n\t\tctx.closePath();\n\t\tctx.fill();\n\n\t\tctx.shadowBlur = 0;\n\t\tctx.fillStyle = '#009bff';\n\t\tctx.beginPath();\n\t\tctx.arc(size / 2, size / 2, r * 0.5, 0, Math.PI * 2);\n\t\tctx.closePath();\n\t\tctx.fill();\n\n\t\treturn canvas;\n\t}\n\n\tlet circleTexture = new THREE.CanvasTexture(makeCircleImage())\n\tlet circleMaterial = new THREE.SpriteMaterial({ \n\t\tmap: circleTexture,\n\t\tsizeAttenuation: false \n\t});\n\tlet circleSprite = new THREE.Sprite(circleMaterial);\n\tcircleSprite.scale.setScalar(0.08);\n\n\tlet lineMaterial = new THREE.LineBasicMaterial({\n\t\tcolor: 0x009bff,\n\t\tlinewidth: 10\n\t});\n\n\tlet activeLine = null;\n\n\trenderer.domElement.onclick = function(evt) {\n\t\tif (hasMoved) {\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tevt = evt || window.event;\n\t\t\n\t\tlet x = evt.offsetX;\n\t\tlet y = evt.offsetY;\n\t\tlet size = renderer.getSize(new THREE.Vector2());\n\t\tlet mouse = new THREE.Vector2(x / size.width * 2 - 1, -y / size.height * 2 + 1);\n\t\t\n\t\tlet raycaster = new THREE.Raycaster();\n\t\traycaster.setFromCamera(mouse, camera);\n\t\tlet intersects = raycaster.intersectObjects(loadedMeshes);\n\t\t\n\t\tif (!isInMeasureMode) {\n\t\t\tresetSelect();\n\t\t}\n\t\t\n\t\tif (intersects.length > 0) {\n\t\t\tif (isInMeasureMode) {\n\t\t\t\tlet point = intersects[0].point;\n\t\t\t\tif (!activeLine) {\n\t\t\t\t\tlet sprite1 = circleSprite.clone();\n\t\t\t\t\tlet sprite2 = circleSprite.clone();\n\t\t\t\t\tsprite1.position.copy(point.clone());\n\t\t\t\t\tsprite2.position.copy(point.clone());\n\t\t\t\t\tspriteScene.add(sprite1);\n\t\t\t\t\tspriteScene.add(sprite2);\n\t\t\t\t\tlet lineGeometry = new THREE.Geometry();\n\t\t\t\t\tlineGeometry.vertices.push(sprite1.position, sprite2.position);\n\t\t\t\t\tlet line = new THREE.Line(lineGeometry, lineMaterial);\n\t\t\t\t\tline.sprite1 = sprite1;\n\t\t\t\t\tline.sprite2 = sprite2;\n\t\t\t\t\tlineScene.add(line);\n\t\t\t\t\tactiveLine = line;\n\t\t\t\t} else {\n\t\t\t\t\tactiveLine.geometry.vertices[1].copy(point);\n\t\t\t\t\tactiveLine.geometry.verticesNeedUpdate = true;\n\t\t\t\t\tmakeDistanceSprite();\n\t\t\t\t\tactiveLine = null;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet mesh = intersects[0].object;\n\t\t\t\tmesh.isSelected = true;\n\t\t\t\tupdateMeshInteractionMaterial(mesh);\n\t\t\t}\n\t\t} else {\n\t\t\tif (isInMeasureMode) {\n\t\t\t\tif (activeLine) {\n\t\t\t\t\tlineScene.remove(activeLine);\n\t\t\t\t\tspriteScene.remove(activeLine.sprite1);\n\t\t\t\t\tspriteScene.remove(activeLine.sprite2);\n\t\t\t\t\tactiveLine = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction resetSelect() {\n\t\tscene.traverse(child => {\n\t\t\tchild.isSelected = false;\n\t\t\tif (child.isMesh && child.material) {\t\n\t\t\t\tupdateMeshInteractionMaterial(child);\n\t\t\t}\n\t\t\tupdateSelectDom(child);\n\t\t});\n\t}\n\t\t\n\n\trenderer.domElement.onmousemove = function(evt) {\n\t\tevt = evt || window.event;\n\n\t\tif (!isInMeasureMode) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tlet x = evt.offsetX;\n\t\tlet y = evt.offsetY;\n\t\tlet size = renderer.getSize(new THREE.Vector2());\n\t\tlet mouse = new THREE.Vector2(x / size.width * 2 - 1, -y / size.height * 2 + 1);\n\t\t\n\t\tlet raycaster = new THREE.Raycaster();\n\t\traycaster.setFromCamera(mouse, camera);\n\t\tlet intersects = raycaster.intersectObjects(loadedMeshes);\n\t\t\n\t\tif (isInMeasureMode && activeLine) {\n\t\t\tif (intersects.length > 0) {\n\t\t\t\tlet point = intersects[0].point;\n\t\t\t\tactiveLine.geometry.vertices[1].copy(point);\n\t\t\t\tactiveLine.geometry.verticesNeedUpdate = true;\n\t\t\t} else {\n\t\t\t\tactiveLine.geometry.vertices[1].copy(activeLine.geometry.vertices[0]);\n\t\t\t\tactiveLine.geometry.verticesNeedUpdate = true;\n\t\t\t}\n\n\t\t}\n\t}\n\n\t/*renderer.domElement.ontouchmove = function(e) {\n\t\tlet rect = e.target.getBoundingClientRect();\n\t\tlet x = e.targetTouches[0].pageX - rect.left;\n\t\tlet y = e.targetTouches[0].pageY - rect.top;\n\t\trenderer.domElement.onmousemove({\n\t\t\toffsetX: x,\n\t\t\toffsetY: y\n\t\t});\n\t}*/\n\n\trenderer.domElement.ontouchstart = function(e) {\n\t\tlet rect = e.target.getBoundingClientRect();\n\t\tlet x = e.targetTouches[0].pageX - rect.left;\n\t\tlet y = e.targetTouches[0].pageY - rect.top;\n\t\trenderer.domElement.onclick({\n\t\t\toffsetX: x,\n\t\t\toffsetY: y\n\t\t});\n\t}\n\n\tfunction makeDistanceSprite() {\n\n\t\tlet canvas = document.createElement('canvas');\n\t\tlet ctx = canvas.getContext('2d');\n\t\tlet fontsize = 32;\n\n\t\tctx.font = 'bolder ' + fontsize + 'px \"Open Sans\", Arial';\n\t\tlet v = activeLine.geometry.vertices;\n\t\tlet length = v[0].clone().sub(v[1]).length().toFixed(1);\n\t\tlet text = '~ ' + length;\n\t\tlet size = ctx.measureText(text);\n\t\tlet paddingLeft = 20;\n\t\tlet paddingTop = 10;\n\t\tlet margin = 10;\n\t\tcanvas.width = size.width + paddingLeft * 2 + margin * 2;\n\t\tcanvas.height = fontsize + paddingTop * 2 + margin * 2;\n\n\t\tctx.shadowBlur = 10;\n\t\tctx.shadowColor = '#555';\n\t\tctx.fillStyle = '#009bff';\n\t\troundRect(ctx, margin, margin, canvas.width - margin * 2, canvas.height - margin * 2, 10);\n\n\t\tctx.shadowBlur = 0;\n\t\tctx.fillStyle = '#fff';\n\t\tctx.textAlign = 'left';\n\t\tctx.textBaseline = 'top';\n\t\tctx.font = 'bolder ' + fontsize + 'px \"Open Sans\", Arial';\n\t\tctx.fillText(text, paddingLeft + margin, paddingTop + margin);\n\n\t\tlet texture = new THREE.CanvasTexture(canvas);\n\t\tlet sprite = new THREE.Sprite(new THREE.SpriteMaterial({\n\t\t\tmap: texture,\n\t\t\tsizeAttenuation: false\n\t\t}));\n\n\t\tlet h = 0.7;\n\t\tsprite.scale.set(0.002 * canvas.width, 0.0025 * canvas.height).multiplyScalar(h);\n\n\t\tsprite.position.copy(v[0].clone().add(v[1]).multiplyScalar(0.5));\n\t\tspriteScene.add(sprite);\n\n\t}\n\n\tfunction roundRect(ctx, x, y, w, h, r) { \n\t\tctx.beginPath(); \n\t\tctx.moveTo(x + r, y); \n\t\tctx.lineTo(x + w - r, y); \n\t\tctx.quadraticCurveTo(x + w, y, x + w, y + r); \n\t\tctx.lineTo(x + w, y + h - r); \n\t\tctx.quadraticCurveTo(x + w, y + h, x + w - r, y + h); \n\t\tctx.lineTo(x + r, y + h); \n\t\tctx.quadraticCurveTo(x, y + h, x, y + h - r); \n\t\tctx.lineTo(x, y + r); \n\t\tctx.quadraticCurveTo(x, y, x + r, y); \n\t\tctx.closePath(); \n\t\tctx.fill();\n\t} \n\t\n\t\n\tfunction updateMeshInteractionMaterial(mesh) {\n\t\tif (mesh.isHidden) {\n\t\t\tmesh.interactionMaterial.color = hiddenColor;\n\t\t\tmesh.interactionMaterial.opacity = hiddenAlpha;\n\t\t} else {\n\t\t\tmesh.interactionMaterial.opacity = 1;\n\t\t}\n\t\tif (mesh.isSelected) {\n\t\t\tmesh.interactionMaterial.color = selectColor;\n\t\t\tmesh.itemWrapper.querySelector('.graph-name').style.color = '#03a9f4';\n\t\t} else {\n\t\t\tmesh.itemWrapper.querySelector('.graph-name').style.color = 'inherit';\n\t\t}\n\t\tmesh.interactionMaterial.needsUpdate = true;\n\t\tif (!mesh.isSelected && !mesh.isHidden) {\n\t\t\tmesh.material = mesh.defaultMaterial;\n\t\t} else {\n\t\t\tmesh.material = mesh.interactionMaterial;\n\t\t}\n\t}\n\t\n\tfunction onResize() {\n\t\tlet width = wrapper.offsetWidth;\n\t\tlet height = wrapper.offsetHeight;\n\t\trenderer.setSize(width, height, false);\n\t\tcamera.aspect = width / height;\n\t\tcamera.updateProjectionMatrix();\n\t}\n\t\n\tonResize();\n\t\n\twrapper.appendChild(renderer.domElement);\n\twindow.addEventListener('resize', onResize, false);\n\t\n\tlet gltfLoader = new THREE.GLTFLoader();\n\tlet loadedScene = null;\n\tlet loadedMeshes = [];\n\t\n\tlet d = 5;\n\n\tlet selectColor = new THREE.Color('#42006b');\n\tlet hiddenColor = new THREE.Color('#555');\n\tlet hiddenAlpha = 0.3;\n\n\tlet interactionMaterial = new THREE.MeshPhongMaterial({\n\t\ttransparent: true,\n\t\tcolor: selectColor,\n\t\tside: THREE.DoubleSide,\n\t\tprecision: 'mediump'\n\t});\n\t\n\tfunction loadModel(url) {\n\t\t\n\t\tresetAll();\n\t\tif (loadedScene) {\n\t\t\tscene.remove(loadedScene);\n\t\t\tloadedScene = null;\n\t\t\tloadedMeshes.length = 0;\n\t\t}\n\t\t\n\t\tshow(ViewerUI.loader);\n\t\tViewerUI.modelBrowserContent.innerHTML = '';\n\t\tViewerUI.loaderInfo.innerHTML = 'Loading model...';\n\t\t\n\t\tgltfLoader.load(\n\t\t\turl,\n\t\t\tfunction onLoad(gltf) {\n\t\t\t\t\n\t\t\t\tloadedScene = gltf.scene;\n\t\t\t\tscene.add(gltf.scene);\n\n\t\t\t\tgltf.scene = gltf.scene || gltf.scenes[0];\n\n\t\t\t\tlet object = gltf.scene;\n\n\t\t\t\tconst box = new THREE.Box3().setFromObject(object);\n\t\t\t\tconst size = box.getSize(new THREE.Vector3()).length();\n\t\t\t\tconst center = box.getCenter(new THREE.Vector3());\n\n\t\t\t\tcontroller.reset();\n\n\t\t\t\tobject.position.x += (object.position.x - center.x);\n\t\t\t\tobject.position.y += (object.position.y - center.y);\n\t\t\t\tobject.position.z += (object.position.z - center.z);\n\t\t\t\tcontroller.maxDistance = size * 10;\n\t\t\t\tcamera.near = size / 100;\n\t\t\t\tcamera.far = size * 100;\n\t\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\t\tcamera.position.copy(center);\n\t\t\t\tcamera.position.x += size / 2.0;\n\t\t\t\tcamera.position.y += size / 5.0;\n\t\t\t\tcamera.position.z += size / 2.0;\n\n\t\t\t\tdirectionalLight.position.setScalar(size);\n\n\t\t\t\tcamera.lookAt(center);\n\n\t\t\t\tcontroller.saveState();\n\n\t\t\t\tgltf.scene.traverse((node) => {\n\t\t\t\t\tif (node.isMesh && node.material) {\n\t\t\t\t\t\tnode.geometry.computeBoundingBox();\n\t\t\t\t\t\tnode.material.side = THREE.DoubleSide;\n\t\t\t\t\t\tnode.material.precision = 'mediump';\n\t\t\t\t\t\tnode.material.needsUpdate = true;\n\t\t\t\t\t\tnode.interactionMaterial = interactionMaterial.clone();\n\t\t\t\t\t\tnode.defaultMaterial = node.material;\n\t\t\t\t\t\tnode.defaultPositionArray = Array.from(node.geometry.attributes.position.array);\n\t\t\t\t\t\tnode.defaultPosition = node.position.clone();\n\t\t\t\t\t\tloadedMeshes.push(node);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tlet content = ViewerUI.modelBrowserContent;\n\t\t\t\tlet counter = 0;\n\t\t\t\tlet parentLevel = 0;\n\n\t\t\t\tfunction makeSceneGraph(obj) {\n\t\t\t\t\t\n\t\t\t\t\tif (obj.children.length === 0 && !obj.isMesh) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tlet itemWrapper = document.createElement('div');\n\t\t\t\t\titemWrapper.classList.add('graph-item-wrapper');\n\t\t\t\t\t\n\t\t\t\t\tlet item = document.createElement('div');\n\t\t\t\t\titem.classList.add('graph-item');\n\t\t\t\t\t\n\t\t\t\t\titemWrapper.appendChild(item);\n\t\t\t\t\t\n\t\t\t\t\tcontent.appendChild(itemWrapper);\n\t\t\t\t\tlet n = 0;\n\t\t\t\t\tlet obj2 = obj;\n\t\t\t\t\twhile (obj2 != gltf.scene) {\n\t\t\t\t\t\tobj2 = obj2.parent;\n\t\t\t\t\t\tn++;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\titem.style.paddingLeft = n * 1.5 + 'em';\n\t\t\t\t\tobj.itemWrapper = itemWrapper;\n\t\t\t\t\t\n\t\t\t\t\tlet left = document.createElement('div');\n\t\t\t\t\tleft.classList.add('graph-left');\n\t\t\t\t\tlet right = document.createElement('div');\n\t\t\t\t\tright.classList.add('graph-right');\n\t\t\t\t\titem.appendChild(left);\n\t\t\t\t\titem.appendChild(right);\n\t\t\t\t\t\n\t\t\t\t\tif (obj.children.length > 0) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tparentLevel++;\n\t\t\t\t\t\tlet folder = document.createElement('div');\n\t\t\t\t\t\t\n\t\t\t\t\t\tfolder.style.marginRight = '10px';\n\t\t\t\t\t\tfolder.classList.add('graph-folder');\n\t\t\t\t\t\tfolder.innerHTML = '<i class=\"fa fa-folder-open\"></i>';\n\t\t\t\t\t\tleft.appendChild(folder);\n\t\t\t\t\t\t\n\t\t\t\t\t\tobj.isFolderOpen = true;\n\t\t\t\t\t\tobj.openFolder = function() {\n\t\t\t\t\t\t\tfolder.innerHTML = obj.isFolderOpen ? '<i class=\"fa fa-folder-open\"></i>' :  '<i class=\"fa fa-folder\"></i>';\n\t\t\t\t\t\t\tobj.traverse(child => {\n\t\t\t\t\t\t\t\tif (obj === child) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (child.itemWrapper) {\n\t\t\t\t\t\t\t\t\tif (child.parent.isFolderOpen && obj.isFolderOpen) {\n\t\t\t\t\t\t\t\t\t\tchild.itemWrapper.style.display = 'block';\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (!obj.isFolderOpen) {\n\t\t\t\t\t\t\t\t\t\tchild.itemWrapper.style.display = 'none';\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tfolder.onclick = () => {\n\t\t\t\t\t\t\tobj.isFolderOpen = !obj.isFolderOpen;\n\t\t\t\t\t\t\tobj.openFolder();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (let i = 0; i < obj.children.length; i++) {\n\t\t\t\t\t\t\tmakeSceneGraph(obj.children[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tlet name = document.createElement('div');\n\t\t\t\t\tname.classList.add('graph-name');\n\t\t\t\t\tname.innerHTML = obj.name || 'None';\n\t\t\t\t\tleft.appendChild(name);\n\t\t\t\t\t\n\t\t\t\t\tname.onclick = function() {\n\t\t\t\t\t\tresetSelect();\n\t\t\t\t\t\tobj.traverse(child => {\t\n\t\t\t\t\t\t\tchild.isSelected = true;\n\t\t\t\t\t\t\tif (child.isMesh && child.material) {\n\t\t\t\t\t\t\t\tupdateMeshInteractionMaterial(child);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tupdateSelectDom(child)\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tlet visible = document.createElement('div');\n\t\t\t\t\tvisible.classList.add('graph-visible');\n\t\t\t\t\tvisible.innerHTML = '<i class=\"fa fa-eye\"></i>';\n\t\t\t\t\t\n\t\t\t\t\tobj.showMesh = function() {\n\t\t\t\t\t\tvisible.innerHTML = obj.isMeshVisible ? '<i class=\"fa fa-eye\"></i>' : '<i class=\"fa fa-eye-slash\"></i>';\n\t\t\t\t\t\tobj.traverse(child => {\n\t\t\t\t\t\t\tif (child.itemWrapper) {\n\t\t\t\t\t\t\t\tlet eye = child.itemWrapper.querySelector('.graph-visible');\n\t\t\t\t\t\t\t\teye.innerHTML = obj.isMeshVisible ? '<i class=\"fa fa-eye\"></i>' : '<i class=\"fa fa-eye-slash\"></i>';\n\t\t\t\t\t\t\t\teye.style.color = obj.isMeshVisible ? 'inherit' : 'rgba(0, 0, 0, 0.3)';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (child.isMesh && child.material) {\n\t\t\t\t\t\t\t\tchild.isHidden = !obj.isMeshVisible;\n\t\t\t\t\t\t\t\tupdateMeshInteractionMaterial(child);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tobj.isHidden = false;\n\t\t\t\t\tobj.isSelected = false;\n\t\t\t\t\tobj.isMeshVisible = true;\n\t\t\t\t\tvisible.onclick = function() {\n\t\t\t\t\t\tobj.isMeshVisible = !obj.isMeshVisible;\n\t\t\t\t\t\tobj.showMesh();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tright.appendChild(visible)\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tmakeSceneGraph(gltf.scene)\n\n\t\t\t\thide(ViewerUI.loader);\n\t\t\t\t\n\t\t\t},\n\t\t\tfunction onProgress(xhr) {\n\t\t\t\tViewerUI.loaderInfo.innerHTML = Math.round(xhr.loaded / xhr.total * 100) + '% loaded';\n\t\t\t},\n\t\t\tfunction onError(err) {\n\t\t\t\tViewerUI.loaderInfo.innerHTML = 'Error loading model! See console for more info.';\n\t\t\t\tconsole.error('Error loading model!', err);\n\t\t\t}\n\t\t);\n\t\t\n\t}\n\t\n\tlet controller = new THREE.OrbitControls(camera, renderer.domElement);\n\tcontroller.enabled = true;\n\tcontroller.enableDamping = true;\n\tcontroller.dampingFactor = 0.5;\n\tcontroller.screenSpacePanning = true;\n\n\tlet cubeController = new THREE.OrbitControls(camera, cubeRenderer.domElement);\n\tcubeController.enablePan = false;\n\tcubeController.enableZoom = false;\n\tcubeController.rotateSpeed = 0.125;\n\t\n\tlet selectedModeElement = ViewerUI.toggleOrbit;\n\tsetOrbitMode();\n\n\tcamera.position.z = d;\n\tcamera.lookAt(scene.position);\n\tcontroller.update();\n\tcontroller.saveState();\n\t\n\tlet ambientLight = new THREE.AmbientLight();\n\tambientLight.intensity = 1;\n\tscene.add(ambientLight);\n\n\tlet directionalLight = new THREE.DirectionalLight();\n\tdirectionalLight.position.set(200, 200, 200)\n\tdirectionalLight.intensity = 0.5;\n\tscene.add(directionalLight);\n\t\n\t/*let light1 = new THREE.PointLight(0xffffff);\n\tlight1.position.set(100, 100, 100);\n\tscene.add(light1);\n\t\n\tlet light2 = new THREE.PointLight(0xffffff);\n\tlight2.position.set(100, 100, -100);\n\tscene.add(light2);\n\t\n\tlet light3 = new THREE.PointLight(0xffffff);\n\tlight3.position.set(-100, 100, 100);\n\tscene.add(light3);\n\t\n\tlet light4 = new THREE.PointLight(0xffffff);\n\tlight4.position.set(-100, 100, -100);\n\tscene.add(light4);\n\t\n\tlight1.intensity = light2.intensity = light3.intensity = light4.intensity = 0.3;*/\n\t\n\tlet stop = false;\n\n\tfunction renderAll() {\n\n\t\trenderer.clear();\n\t\trenderer.render(scene, camera);\n\t\tupdateCubeCamera();\n\t\tcubeRenderer.render(cubeScene, cubeCamera);\n\n\t\trenderer.clearDepth();\n\n\t\tif (isInMeasureMode) {\n\t\t\trenderer.clearDepth();\n\t\t\trenderer.render(lineScene, camera);\n\t\t\trenderer.clearDepth();\n\t\t\trenderer.render(spriteScene, camera);\n\t\t}\n\t}\n\t\n\tfunction animate(time) {\n\n\t\tif (stop) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (play) {\n\t\t\tlet now = Date.now();\n\t\t\tlet x = Math.min(1, (now - startTime) / duration);\n\t\t\tcamera.position.copy(oldPosition).lerp(newPosition, x)\n\t\t\tif (x === 1) {\n\t\t\t\tplay = false;\n\t\t\t}\n\t\t}\n\t\t\n\t\trequestAnimationFrame(animate);\n\t\tcontroller.update();\n\t\trenderAll();\n\t}\n\t\n\trequestAnimationFrame(animate);\n\t\n\treturn {\n\t\tloadModel: loadModel\n\t};\n\t\n}\n\nexport default ModelViewer;\n// export { ViewerUI };\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}