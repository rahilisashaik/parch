{"ast":null,"code":"var _jsxFileName = \"/Users/rahilshaik/parch/par.ch-web/src/components/model-viewer/model-viewer-canvas-component.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport './model-viewer.css';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewerCanvas = () => {\n  _s();\n  const canvasWrapperRef = useRef(null);\n  let canvas = document.createElement('canvas');\n  let ctx = canvas.getContext('2d');\n  let texts = ['RIGHT', 'LEFT', 'TOP', 'BOTTOM', 'FRONT', 'BACK'];\n  let material = [];\n  let size = 64;\n  canvas.width = size;\n  canvas.height = size;\n  ctx.font = 'bolder 12px \"Open sans\", Arial';\n  ctx.textBaseline = 'middle';\n  ctx.textAlign = 'center';\n  let mainColor = '#fff';\n  let otherColor = '#ccc';\n  let bg = ctx.createLinearGradient(0, 0, 0, size);\n  bg.addColorStop(0, mainColor);\n  bg.addColorStop(1, otherColor);\n  for (let i = 0; i < 6; i++) {\n    if (texts[i] == 'TOP') {\n      ctx.fillStyle = mainColor;\n    } else if (texts[i] == 'BOTTOM') {\n      ctx.fillStyle = otherColor;\n    } else {\n      ctx.fillStyle = bg;\n    }\n    ctx.fillRect(0, 0, size, size);\n    ctx.strokeStyle = '#aaa';\n    ctx.setLineDash([8, 8]);\n    ctx.lineWidth = 4;\n    ctx.strokeRect(0, 0, size, size);\n    ctx.fillStyle = '#999';\n    ctx.fillText(texts[i], size / 2, size / 2);\n    materials[i] = new THREE.MeshBasicMaterial({\n      map: textureLoader.load(canvas.toDataURL())\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"viewerCanvasWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"viewer-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"viewerCanvasWrapper\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slider-container\",\n          id: \"explodeSliderWrapper\",\n          ref: canvasWrapperRef,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"explode-content\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"cb-container\",\n              children: [\"Explode Face (may cause lags!)\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"checkmark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 22\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewerCanvas, \"bniwH+lpqMBfnP7ccnJJuSb5yFY=\");\n_c = ViewerCanvas;\nexport default ViewerCanvas;\nvar _c;\n$RefreshReg$(_c, \"ViewerCanvas\");","map":{"version":3,"names":["React","useRef","THREE","jsxDEV","_jsxDEV","ViewerCanvas","_s","canvasWrapperRef","canvas","document","createElement","ctx","getContext","texts","material","size","width","height","font","textBaseline","textAlign","mainColor","otherColor","bg","createLinearGradient","addColorStop","i","fillStyle","fillRect","strokeStyle","setLineDash","lineWidth","strokeRect","fillText","materials","MeshBasicMaterial","map","textureLoader","load","toDataURL","children","id","className","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["/Users/rahilshaik/parch/par.ch-web/src/components/model-viewer/model-viewer-canvas-component.tsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport './model-viewer.css';\nimport * as THREE from 'three';\n\nconst ViewerCanvas = () => {\n  const canvasWrapperRef = useRef(null);\n  let canvas = document.createElement('canvas');\n  let ctx = canvas.getContext('2d');\n\n  let texts = ['RIGHT', 'LEFT', 'TOP', 'BOTTOM', 'FRONT', 'BACK'];\n  let material = [];\n\n  let size = 64;\n\tcanvas.width = size;\n\tcanvas.height = size;\n\n  ctx!.font = 'bolder 12px \"Open sans\", Arial';\n\tctx!.textBaseline = 'middle';\n\tctx!.textAlign = 'center';\n\n\tlet mainColor = '#fff';\n\tlet otherColor = '#ccc';\n\n\tlet bg = ctx!.createLinearGradient(0, 0, 0, size);\n\tbg.addColorStop(0, mainColor);\n\tbg.addColorStop(1,  otherColor);\n\n\tfor (let i = 0; i < 6; i++) {\n\t\tif (texts[i] == 'TOP') {\n\t\t\tctx!.fillStyle = mainColor;\n\t\t} else if (texts[i] == 'BOTTOM') {\n\t\t\tctx!.fillStyle = otherColor;\n\t\t} else {\n\t\t\tctx!.fillStyle = bg;\n\t\t}\n\t\tctx!.fillRect(0, 0, size, size);\n\t\tctx!.strokeStyle = '#aaa';\n\t\tctx!.setLineDash([8, 8]);\n\t\tctx!.lineWidth = 4;\n\t\tctx!.strokeRect(0, 0, size, size);\n\t\tctx!.fillStyle = '#999';\n\t\tctx!.fillText(texts[i], size / 2, size / 2);\n\t\tmaterials[i] = new THREE.MeshBasicMaterial({\n\t\t\tmap: textureLoader.load(canvas.toDataURL())\n\t\t});\n\t}\n  return (\n    <div>\n    <div id=\"viewerCanvasWrapper\">\n      <div className='viewer-wrapper'>\n\t        <div id='viewerCanvasWrapper'></div>\n\t        <div className='slider-container' id='explodeSliderWrapper' ref={canvasWrapperRef}>\n\t            <div className='explode-content'>\n\t                {/* <input type='range' min='0' max='10' step='0.01' value='1' className='slider' id='explodeSlider'> */}\n\t                <label className=\"cb-container\">Explode Face (may cause lags!)\n\t                    {/* <input type=\"checkbox\" id=\"explodeFace\"> */}\n\t                    <span className=\"checkmark\"></span>\n\t                </label>\n\t            </div>\n\t        </div>\n    </div>\n    </div>\n    </div>\n  );\n};\n\nexport default ViewerCanvas;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}